Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NEWLINE

Grammar

Rule 0     S' -> S
Rule 1     S -> ESTRUCTURAMAIN
Rule 2     S -> error
Rule 3     ESTRUCTURAMAIN -> main DOSPUNTOS PRECUERPO
Rule 4     ESTRUCTURAMAIN -> error DOSPUNTOS PRECUERPO
Rule 5     ESTRUCTURAMAIN -> main error PRECUERPO
Rule 6     ESTRUCTURAMAIN -> main DOSPUNTOS error
Rule 7     PRECUERPO -> PRECUERPO CUERPO
Rule 8     PRECUERPO -> PRECUERPO error
Rule 9     PRECUERPO -> error CUERPO
Rule 10    PRECUERPO -> CUERPO
Rule 11    CUERPO -> ETIQUETA
Rule 12    CUERPO -> GOTO_LABEL
Rule 13    CUERPO -> ASIGNACION
Rule 14    CUERPO -> DESTRUYE_VARIABLE
Rule 15    CUERPO -> IMPRIME
Rule 16    CUERPO -> ESTRUCTURA_IF
Rule 17    CUERPO -> EXIT
Rule 18    ETIQUETA -> ID DOSPUNTOS PRECUERPO
Rule 19    ETIQUETA -> error DOSPUNTOS PRECUERPO
Rule 20    GOTO_LABEL -> goto ID PTCOMA
Rule 21    ASIGNACION -> NORMAL PTCOMA
Rule 22    ASIGNACION -> ARRAY PTCOMA
Rule 23    NORMAL -> VARIABLE IGUAL EXPRESION
Rule 24    ARRAY -> VARIABLE LISTA_POS IGUAL EXPRESION
Rule 25    EXPRESION -> VALOR
Rule 26    EXPRESION -> error
Rule 27    EXPRESION -> PARA EXPRESION PARB
Rule 28    VALOR -> VARIABLE
Rule 29    VALOR -> LLAMADA_ARREGLO
Rule 30    VALOR -> INT
Rule 31    VALOR -> FLOAT
Rule 32    VALOR -> CHAR
Rule 33    VALOR -> array PARA PARB
Rule 34    VALOR -> read PARA PARB
Rule 35    EXPRESION -> ARITMETICAS
Rule 36    ARITMETICAS -> MENOS VALOR
Rule 37    ARITMETICAS -> EXPRESION MAS EXPRESION
Rule 38    ARITMETICAS -> EXPRESION MENOS EXPRESION
Rule 39    ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION
Rule 40    ARITMETICAS -> EXPRESION DIVIDIR EXPRESION
Rule 41    ARITMETICAS -> EXPRESION RESIDUO EXPRESION
Rule 42    ARITMETICAS -> abs PARA EXPRESION PARB
Rule 43    EXPRESION -> LOGICAS
Rule 44    LOGICAS -> NOTL VALOR
Rule 45    LOGICAS -> VALOR ANDL VALOR
Rule 46    LOGICAS -> VALOR ORL VALOR
Rule 47    LOGICAS -> VALOR XORL VALOR
Rule 48    EXPRESION -> RELACIONAL
Rule 49    RELACIONAL -> VALOR IGUALR VALOR
Rule 50    RELACIONAL -> VALOR NOIGUALR VALOR
Rule 51    RELACIONAL -> VALOR MAYORR IGUAL VALOR
Rule 52    RELACIONAL -> VALOR MENORR IGUAL VALOR
Rule 53    RELACIONAL -> VALOR MAYORR VALOR
Rule 54    RELACIONAL -> VALOR MENORR VALOR
Rule 55    EXPRESION -> BIT
Rule 56    BIT -> NOTB VALOR
Rule 57    BIT -> VALOR ANDB VALOR
Rule 58    BIT -> VALOR ORB VALOR
Rule 59    BIT -> VALOR XORB VALOR
Rule 60    BIT -> VALOR MENORR MENORR VALOR
Rule 61    BIT -> VALOR MAYORR MAYORR VALOR
Rule 62    LLAMADA_ARREGLO -> VARIABLE LISTA_POS
Rule 63    LISTA_POS -> LISTA_POS POS
Rule 64    LISTA_POS -> POS
Rule 65    POS -> CORA EXPRESION CORB
Rule 66    EXPRESION -> CONVERSION
Rule 67    CONVERSION -> PARA TIPO_CONVERSION PARB VALOR
Rule 68    TIPO_CONVERSION -> int
Rule 69    TIPO_CONVERSION -> char
Rule 70    TIPO_CONVERSION -> float
Rule 71    EXPRESION -> PUNTERO
Rule 72    PUNTERO -> ANDB VARIABLE
Rule 73    ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA
Rule 74    DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA
Rule 75    IMPRIME -> print PARA EXPRESION PARB PTCOMA
Rule 76    EXIT -> exit PTCOMA

Terminals, with rules where they appear

ANDB                 : 57 72
ANDL                 : 45
CHAR                 : 32
CORA                 : 65
CORB                 : 65
DIVIDIR              : 40
DOSPUNTOS            : 3 4 6 18 19
FLOAT                : 31
ID                   : 18 20 73
IGUAL                : 23 24 51 52
IGUALR               : 49
INT                  : 30
MAS                  : 37
MAYORR               : 51 53 61 61
MENORR               : 52 54 60 60
MENOS                : 36 38
MULTIPLICACION       : 39
NEWLINE              : 
NOIGUALR             : 50
NOTB                 : 56
NOTL                 : 44
ORB                  : 58
ORL                  : 46
PARA                 : 27 33 34 42 67 73 74 75
PARB                 : 27 33 34 42 67 73 74 75
PTCOMA               : 20 21 22 73 74 75 76
RESIDUO              : 41
VARIABLE             : 23 24 28 62 72
XORB                 : 59
XORL                 : 47
abs                  : 42
array                : 33
char                 : 69
error                : 2 4 5 6 8 9 19 26
exit                 : 76
float                : 70
goto                 : 20 73
if                   : 73
int                  : 68
main                 : 3 5 6
print                : 75
read                 : 34
unset                : 74

Nonterminals, with rules where they appear

ARITMETICAS          : 35
ARRAY                : 22
ASIGNACION           : 13
BIT                  : 55
CONVERSION           : 66
CUERPO               : 7 9 10
DESTRUYE_VARIABLE    : 14
ESTRUCTURAMAIN       : 1
ESTRUCTURA_IF        : 16
ETIQUETA             : 11
EXIT                 : 17
EXPRESION            : 23 24 27 37 37 38 38 39 39 40 40 41 41 42 65 73 75
GOTO_LABEL           : 12
IMPRIME              : 15
LISTA_POS            : 24 62 63
LLAMADA_ARREGLO      : 29
LOGICAS              : 43
NORMAL               : 21
POS                  : 63 64
PRECUERPO            : 3 4 5 7 8 18 19
PUNTERO              : 71
RELACIONAL           : 48
S                    : 0
TIPO_CONVERSION      : 67
VALOR                : 25 36 44 45 45 46 46 47 47 49 49 50 50 51 51 52 52 53 53 54 54 56 57 57 58 58 59 59 60 60 61 61 67 74

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . ESTRUCTURAMAIN
    (2) S -> . error
    (3) ESTRUCTURAMAIN -> . main DOSPUNTOS PRECUERPO
    (4) ESTRUCTURAMAIN -> . error DOSPUNTOS PRECUERPO
    (5) ESTRUCTURAMAIN -> . main error PRECUERPO
    (6) ESTRUCTURAMAIN -> . main DOSPUNTOS error

    error           shift and go to state 3
    main            shift and go to state 4

    S                              shift and go to state 1
    ESTRUCTURAMAIN                 shift and go to state 2

state 1

    (0) S' -> S .



state 2

    (1) S -> ESTRUCTURAMAIN .

    $end            reduce using rule 1 (S -> ESTRUCTURAMAIN .)


state 3

    (2) S -> error .
    (4) ESTRUCTURAMAIN -> error . DOSPUNTOS PRECUERPO

    $end            reduce using rule 2 (S -> error .)
    DOSPUNTOS       shift and go to state 5


state 4

    (3) ESTRUCTURAMAIN -> main . DOSPUNTOS PRECUERPO
    (5) ESTRUCTURAMAIN -> main . error PRECUERPO
    (6) ESTRUCTURAMAIN -> main . DOSPUNTOS error

    DOSPUNTOS       shift and go to state 6
    error           shift and go to state 7


state 5

    (4) ESTRUCTURAMAIN -> error DOSPUNTOS . PRECUERPO
    (7) PRECUERPO -> . PRECUERPO CUERPO
    (8) PRECUERPO -> . PRECUERPO error
    (9) PRECUERPO -> . error CUERPO
    (10) PRECUERPO -> . CUERPO
    (11) CUERPO -> . ETIQUETA
    (12) CUERPO -> . GOTO_LABEL
    (13) CUERPO -> . ASIGNACION
    (14) CUERPO -> . DESTRUYE_VARIABLE
    (15) CUERPO -> . IMPRIME
    (16) CUERPO -> . ESTRUCTURA_IF
    (17) CUERPO -> . EXIT
    (18) ETIQUETA -> . ID DOSPUNTOS PRECUERPO
    (19) ETIQUETA -> . error DOSPUNTOS PRECUERPO
    (20) GOTO_LABEL -> . goto ID PTCOMA
    (21) ASIGNACION -> . NORMAL PTCOMA
    (22) ASIGNACION -> . ARRAY PTCOMA
    (74) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (75) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (73) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (76) EXIT -> . exit PTCOMA
    (23) NORMAL -> . VARIABLE IGUAL EXPRESION
    (24) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    error           shift and go to state 8
    ID              shift and go to state 18
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    PRECUERPO                      shift and go to state 9
    CUERPO                         shift and go to state 10
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 6

    (3) ESTRUCTURAMAIN -> main DOSPUNTOS . PRECUERPO
    (6) ESTRUCTURAMAIN -> main DOSPUNTOS . error
    (7) PRECUERPO -> . PRECUERPO CUERPO
    (8) PRECUERPO -> . PRECUERPO error
    (9) PRECUERPO -> . error CUERPO
    (10) PRECUERPO -> . CUERPO
    (11) CUERPO -> . ETIQUETA
    (12) CUERPO -> . GOTO_LABEL
    (13) CUERPO -> . ASIGNACION
    (14) CUERPO -> . DESTRUYE_VARIABLE
    (15) CUERPO -> . IMPRIME
    (16) CUERPO -> . ESTRUCTURA_IF
    (17) CUERPO -> . EXIT
    (18) ETIQUETA -> . ID DOSPUNTOS PRECUERPO
    (19) ETIQUETA -> . error DOSPUNTOS PRECUERPO
    (20) GOTO_LABEL -> . goto ID PTCOMA
    (21) ASIGNACION -> . NORMAL PTCOMA
    (22) ASIGNACION -> . ARRAY PTCOMA
    (74) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (75) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (73) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (76) EXIT -> . exit PTCOMA
    (23) NORMAL -> . VARIABLE IGUAL EXPRESION
    (24) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    error           shift and go to state 28
    ID              shift and go to state 18
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    PRECUERPO                      shift and go to state 27
    CUERPO                         shift and go to state 10
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 7

    (5) ESTRUCTURAMAIN -> main error . PRECUERPO
    (7) PRECUERPO -> . PRECUERPO CUERPO
    (8) PRECUERPO -> . PRECUERPO error
    (9) PRECUERPO -> . error CUERPO
    (10) PRECUERPO -> . CUERPO
    (11) CUERPO -> . ETIQUETA
    (12) CUERPO -> . GOTO_LABEL
    (13) CUERPO -> . ASIGNACION
    (14) CUERPO -> . DESTRUYE_VARIABLE
    (15) CUERPO -> . IMPRIME
    (16) CUERPO -> . ESTRUCTURA_IF
    (17) CUERPO -> . EXIT
    (18) ETIQUETA -> . ID DOSPUNTOS PRECUERPO
    (19) ETIQUETA -> . error DOSPUNTOS PRECUERPO
    (20) GOTO_LABEL -> . goto ID PTCOMA
    (21) ASIGNACION -> . NORMAL PTCOMA
    (22) ASIGNACION -> . ARRAY PTCOMA
    (74) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (75) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (73) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (76) EXIT -> . exit PTCOMA
    (23) NORMAL -> . VARIABLE IGUAL EXPRESION
    (24) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    error           shift and go to state 8
    ID              shift and go to state 18
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    PRECUERPO                      shift and go to state 29
    CUERPO                         shift and go to state 10
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 8

    (9) PRECUERPO -> error . CUERPO
    (19) ETIQUETA -> error . DOSPUNTOS PRECUERPO
    (11) CUERPO -> . ETIQUETA
    (12) CUERPO -> . GOTO_LABEL
    (13) CUERPO -> . ASIGNACION
    (14) CUERPO -> . DESTRUYE_VARIABLE
    (15) CUERPO -> . IMPRIME
    (16) CUERPO -> . ESTRUCTURA_IF
    (17) CUERPO -> . EXIT
    (18) ETIQUETA -> . ID DOSPUNTOS PRECUERPO
    (19) ETIQUETA -> . error DOSPUNTOS PRECUERPO
    (20) GOTO_LABEL -> . goto ID PTCOMA
    (21) ASIGNACION -> . NORMAL PTCOMA
    (22) ASIGNACION -> . ARRAY PTCOMA
    (74) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (75) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (73) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (76) EXIT -> . exit PTCOMA
    (23) NORMAL -> . VARIABLE IGUAL EXPRESION
    (24) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    DOSPUNTOS       shift and go to state 32
    ID              shift and go to state 18
    error           shift and go to state 30
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    CUERPO                         shift and go to state 31
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 9

    (4) ESTRUCTURAMAIN -> error DOSPUNTOS PRECUERPO .
    (7) PRECUERPO -> PRECUERPO . CUERPO
    (8) PRECUERPO -> PRECUERPO . error
    (11) CUERPO -> . ETIQUETA
    (12) CUERPO -> . GOTO_LABEL
    (13) CUERPO -> . ASIGNACION
    (14) CUERPO -> . DESTRUYE_VARIABLE
    (15) CUERPO -> . IMPRIME
    (16) CUERPO -> . ESTRUCTURA_IF
    (17) CUERPO -> . EXIT
    (18) ETIQUETA -> . ID DOSPUNTOS PRECUERPO
    (19) ETIQUETA -> . error DOSPUNTOS PRECUERPO
    (20) GOTO_LABEL -> . goto ID PTCOMA
    (21) ASIGNACION -> . NORMAL PTCOMA
    (22) ASIGNACION -> . ARRAY PTCOMA
    (74) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (75) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (73) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (76) EXIT -> . exit PTCOMA
    (23) NORMAL -> . VARIABLE IGUAL EXPRESION
    (24) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    $end            reduce using rule 4 (ESTRUCTURAMAIN -> error DOSPUNTOS PRECUERPO .)
    error           shift and go to state 33
    ID              shift and go to state 18
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    CUERPO                         shift and go to state 34
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 10

    (10) PRECUERPO -> CUERPO .

    error           reduce using rule 10 (PRECUERPO -> CUERPO .)
    ID              reduce using rule 10 (PRECUERPO -> CUERPO .)
    goto            reduce using rule 10 (PRECUERPO -> CUERPO .)
    unset           reduce using rule 10 (PRECUERPO -> CUERPO .)
    print           reduce using rule 10 (PRECUERPO -> CUERPO .)
    if              reduce using rule 10 (PRECUERPO -> CUERPO .)
    exit            reduce using rule 10 (PRECUERPO -> CUERPO .)
    VARIABLE        reduce using rule 10 (PRECUERPO -> CUERPO .)
    $end            reduce using rule 10 (PRECUERPO -> CUERPO .)


state 11

    (11) CUERPO -> ETIQUETA .

    error           reduce using rule 11 (CUERPO -> ETIQUETA .)
    ID              reduce using rule 11 (CUERPO -> ETIQUETA .)
    goto            reduce using rule 11 (CUERPO -> ETIQUETA .)
    unset           reduce using rule 11 (CUERPO -> ETIQUETA .)
    print           reduce using rule 11 (CUERPO -> ETIQUETA .)
    if              reduce using rule 11 (CUERPO -> ETIQUETA .)
    exit            reduce using rule 11 (CUERPO -> ETIQUETA .)
    VARIABLE        reduce using rule 11 (CUERPO -> ETIQUETA .)
    $end            reduce using rule 11 (CUERPO -> ETIQUETA .)


state 12

    (12) CUERPO -> GOTO_LABEL .

    error           reduce using rule 12 (CUERPO -> GOTO_LABEL .)
    ID              reduce using rule 12 (CUERPO -> GOTO_LABEL .)
    goto            reduce using rule 12 (CUERPO -> GOTO_LABEL .)
    unset           reduce using rule 12 (CUERPO -> GOTO_LABEL .)
    print           reduce using rule 12 (CUERPO -> GOTO_LABEL .)
    if              reduce using rule 12 (CUERPO -> GOTO_LABEL .)
    exit            reduce using rule 12 (CUERPO -> GOTO_LABEL .)
    VARIABLE        reduce using rule 12 (CUERPO -> GOTO_LABEL .)
    $end            reduce using rule 12 (CUERPO -> GOTO_LABEL .)


state 13

    (13) CUERPO -> ASIGNACION .

    error           reduce using rule 13 (CUERPO -> ASIGNACION .)
    ID              reduce using rule 13 (CUERPO -> ASIGNACION .)
    goto            reduce using rule 13 (CUERPO -> ASIGNACION .)
    unset           reduce using rule 13 (CUERPO -> ASIGNACION .)
    print           reduce using rule 13 (CUERPO -> ASIGNACION .)
    if              reduce using rule 13 (CUERPO -> ASIGNACION .)
    exit            reduce using rule 13 (CUERPO -> ASIGNACION .)
    VARIABLE        reduce using rule 13 (CUERPO -> ASIGNACION .)
    $end            reduce using rule 13 (CUERPO -> ASIGNACION .)


state 14

    (14) CUERPO -> DESTRUYE_VARIABLE .

    error           reduce using rule 14 (CUERPO -> DESTRUYE_VARIABLE .)
    ID              reduce using rule 14 (CUERPO -> DESTRUYE_VARIABLE .)
    goto            reduce using rule 14 (CUERPO -> DESTRUYE_VARIABLE .)
    unset           reduce using rule 14 (CUERPO -> DESTRUYE_VARIABLE .)
    print           reduce using rule 14 (CUERPO -> DESTRUYE_VARIABLE .)
    if              reduce using rule 14 (CUERPO -> DESTRUYE_VARIABLE .)
    exit            reduce using rule 14 (CUERPO -> DESTRUYE_VARIABLE .)
    VARIABLE        reduce using rule 14 (CUERPO -> DESTRUYE_VARIABLE .)
    $end            reduce using rule 14 (CUERPO -> DESTRUYE_VARIABLE .)


state 15

    (15) CUERPO -> IMPRIME .

    error           reduce using rule 15 (CUERPO -> IMPRIME .)
    ID              reduce using rule 15 (CUERPO -> IMPRIME .)
    goto            reduce using rule 15 (CUERPO -> IMPRIME .)
    unset           reduce using rule 15 (CUERPO -> IMPRIME .)
    print           reduce using rule 15 (CUERPO -> IMPRIME .)
    if              reduce using rule 15 (CUERPO -> IMPRIME .)
    exit            reduce using rule 15 (CUERPO -> IMPRIME .)
    VARIABLE        reduce using rule 15 (CUERPO -> IMPRIME .)
    $end            reduce using rule 15 (CUERPO -> IMPRIME .)


state 16

    (16) CUERPO -> ESTRUCTURA_IF .

    error           reduce using rule 16 (CUERPO -> ESTRUCTURA_IF .)
    ID              reduce using rule 16 (CUERPO -> ESTRUCTURA_IF .)
    goto            reduce using rule 16 (CUERPO -> ESTRUCTURA_IF .)
    unset           reduce using rule 16 (CUERPO -> ESTRUCTURA_IF .)
    print           reduce using rule 16 (CUERPO -> ESTRUCTURA_IF .)
    if              reduce using rule 16 (CUERPO -> ESTRUCTURA_IF .)
    exit            reduce using rule 16 (CUERPO -> ESTRUCTURA_IF .)
    VARIABLE        reduce using rule 16 (CUERPO -> ESTRUCTURA_IF .)
    $end            reduce using rule 16 (CUERPO -> ESTRUCTURA_IF .)


state 17

    (17) CUERPO -> EXIT .

    error           reduce using rule 17 (CUERPO -> EXIT .)
    ID              reduce using rule 17 (CUERPO -> EXIT .)
    goto            reduce using rule 17 (CUERPO -> EXIT .)
    unset           reduce using rule 17 (CUERPO -> EXIT .)
    print           reduce using rule 17 (CUERPO -> EXIT .)
    if              reduce using rule 17 (CUERPO -> EXIT .)
    exit            reduce using rule 17 (CUERPO -> EXIT .)
    VARIABLE        reduce using rule 17 (CUERPO -> EXIT .)
    $end            reduce using rule 17 (CUERPO -> EXIT .)


state 18

    (18) ETIQUETA -> ID . DOSPUNTOS PRECUERPO

    DOSPUNTOS       shift and go to state 35


state 19

    (20) GOTO_LABEL -> goto . ID PTCOMA

    ID              shift and go to state 36


state 20

    (21) ASIGNACION -> NORMAL . PTCOMA

    PTCOMA          shift and go to state 37


state 21

    (22) ASIGNACION -> ARRAY . PTCOMA

    PTCOMA          shift and go to state 38


state 22

    (74) DESTRUYE_VARIABLE -> unset . PARA VALOR PARB PTCOMA

    PARA            shift and go to state 39


state 23

    (75) IMPRIME -> print . PARA EXPRESION PARB PTCOMA

    PARA            shift and go to state 40


state 24

    (73) ESTRUCTURA_IF -> if . PARA EXPRESION PARB goto ID PTCOMA

    PARA            shift and go to state 41


state 25

    (76) EXIT -> exit . PTCOMA

    PTCOMA          shift and go to state 42


state 26

    (23) NORMAL -> VARIABLE . IGUAL EXPRESION
    (24) ARRAY -> VARIABLE . LISTA_POS IGUAL EXPRESION
    (63) LISTA_POS -> . LISTA_POS POS
    (64) LISTA_POS -> . POS
    (65) POS -> . CORA EXPRESION CORB

    IGUAL           shift and go to state 43
    CORA            shift and go to state 46

    LISTA_POS                      shift and go to state 44
    POS                            shift and go to state 45

state 27

    (3) ESTRUCTURAMAIN -> main DOSPUNTOS PRECUERPO .
    (7) PRECUERPO -> PRECUERPO . CUERPO
    (8) PRECUERPO -> PRECUERPO . error
    (11) CUERPO -> . ETIQUETA
    (12) CUERPO -> . GOTO_LABEL
    (13) CUERPO -> . ASIGNACION
    (14) CUERPO -> . DESTRUYE_VARIABLE
    (15) CUERPO -> . IMPRIME
    (16) CUERPO -> . ESTRUCTURA_IF
    (17) CUERPO -> . EXIT
    (18) ETIQUETA -> . ID DOSPUNTOS PRECUERPO
    (19) ETIQUETA -> . error DOSPUNTOS PRECUERPO
    (20) GOTO_LABEL -> . goto ID PTCOMA
    (21) ASIGNACION -> . NORMAL PTCOMA
    (22) ASIGNACION -> . ARRAY PTCOMA
    (74) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (75) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (73) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (76) EXIT -> . exit PTCOMA
    (23) NORMAL -> . VARIABLE IGUAL EXPRESION
    (24) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    $end            reduce using rule 3 (ESTRUCTURAMAIN -> main DOSPUNTOS PRECUERPO .)
    error           shift and go to state 33
    ID              shift and go to state 18
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    CUERPO                         shift and go to state 34
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 28

    (6) ESTRUCTURAMAIN -> main DOSPUNTOS error .
    (9) PRECUERPO -> error . CUERPO
    (19) ETIQUETA -> error . DOSPUNTOS PRECUERPO
    (11) CUERPO -> . ETIQUETA
    (12) CUERPO -> . GOTO_LABEL
    (13) CUERPO -> . ASIGNACION
    (14) CUERPO -> . DESTRUYE_VARIABLE
    (15) CUERPO -> . IMPRIME
    (16) CUERPO -> . ESTRUCTURA_IF
    (17) CUERPO -> . EXIT
    (18) ETIQUETA -> . ID DOSPUNTOS PRECUERPO
    (19) ETIQUETA -> . error DOSPUNTOS PRECUERPO
    (20) GOTO_LABEL -> . goto ID PTCOMA
    (21) ASIGNACION -> . NORMAL PTCOMA
    (22) ASIGNACION -> . ARRAY PTCOMA
    (74) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (75) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (73) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (76) EXIT -> . exit PTCOMA
    (23) NORMAL -> . VARIABLE IGUAL EXPRESION
    (24) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    $end            reduce using rule 6 (ESTRUCTURAMAIN -> main DOSPUNTOS error .)
    DOSPUNTOS       shift and go to state 32
    ID              shift and go to state 18
    error           shift and go to state 30
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    CUERPO                         shift and go to state 31
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 29

    (5) ESTRUCTURAMAIN -> main error PRECUERPO .
    (7) PRECUERPO -> PRECUERPO . CUERPO
    (8) PRECUERPO -> PRECUERPO . error
    (11) CUERPO -> . ETIQUETA
    (12) CUERPO -> . GOTO_LABEL
    (13) CUERPO -> . ASIGNACION
    (14) CUERPO -> . DESTRUYE_VARIABLE
    (15) CUERPO -> . IMPRIME
    (16) CUERPO -> . ESTRUCTURA_IF
    (17) CUERPO -> . EXIT
    (18) ETIQUETA -> . ID DOSPUNTOS PRECUERPO
    (19) ETIQUETA -> . error DOSPUNTOS PRECUERPO
    (20) GOTO_LABEL -> . goto ID PTCOMA
    (21) ASIGNACION -> . NORMAL PTCOMA
    (22) ASIGNACION -> . ARRAY PTCOMA
    (74) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (75) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (73) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (76) EXIT -> . exit PTCOMA
    (23) NORMAL -> . VARIABLE IGUAL EXPRESION
    (24) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    $end            reduce using rule 5 (ESTRUCTURAMAIN -> main error PRECUERPO .)
    error           shift and go to state 33
    ID              shift and go to state 18
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    CUERPO                         shift and go to state 34
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 30

    (19) ETIQUETA -> error . DOSPUNTOS PRECUERPO

    DOSPUNTOS       shift and go to state 32


state 31

    (9) PRECUERPO -> error CUERPO .

    error           reduce using rule 9 (PRECUERPO -> error CUERPO .)
    ID              reduce using rule 9 (PRECUERPO -> error CUERPO .)
    goto            reduce using rule 9 (PRECUERPO -> error CUERPO .)
    unset           reduce using rule 9 (PRECUERPO -> error CUERPO .)
    print           reduce using rule 9 (PRECUERPO -> error CUERPO .)
    if              reduce using rule 9 (PRECUERPO -> error CUERPO .)
    exit            reduce using rule 9 (PRECUERPO -> error CUERPO .)
    VARIABLE        reduce using rule 9 (PRECUERPO -> error CUERPO .)
    $end            reduce using rule 9 (PRECUERPO -> error CUERPO .)


state 32

    (19) ETIQUETA -> error DOSPUNTOS . PRECUERPO
    (7) PRECUERPO -> . PRECUERPO CUERPO
    (8) PRECUERPO -> . PRECUERPO error
    (9) PRECUERPO -> . error CUERPO
    (10) PRECUERPO -> . CUERPO
    (11) CUERPO -> . ETIQUETA
    (12) CUERPO -> . GOTO_LABEL
    (13) CUERPO -> . ASIGNACION
    (14) CUERPO -> . DESTRUYE_VARIABLE
    (15) CUERPO -> . IMPRIME
    (16) CUERPO -> . ESTRUCTURA_IF
    (17) CUERPO -> . EXIT
    (18) ETIQUETA -> . ID DOSPUNTOS PRECUERPO
    (19) ETIQUETA -> . error DOSPUNTOS PRECUERPO
    (20) GOTO_LABEL -> . goto ID PTCOMA
    (21) ASIGNACION -> . NORMAL PTCOMA
    (22) ASIGNACION -> . ARRAY PTCOMA
    (74) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (75) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (73) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (76) EXIT -> . exit PTCOMA
    (23) NORMAL -> . VARIABLE IGUAL EXPRESION
    (24) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    error           shift and go to state 8
    ID              shift and go to state 18
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    PRECUERPO                      shift and go to state 47
    CUERPO                         shift and go to state 10
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 33

    (8) PRECUERPO -> PRECUERPO error .
    (19) ETIQUETA -> error . DOSPUNTOS PRECUERPO

    error           reduce using rule 8 (PRECUERPO -> PRECUERPO error .)
    ID              reduce using rule 8 (PRECUERPO -> PRECUERPO error .)
    goto            reduce using rule 8 (PRECUERPO -> PRECUERPO error .)
    unset           reduce using rule 8 (PRECUERPO -> PRECUERPO error .)
    print           reduce using rule 8 (PRECUERPO -> PRECUERPO error .)
    if              reduce using rule 8 (PRECUERPO -> PRECUERPO error .)
    exit            reduce using rule 8 (PRECUERPO -> PRECUERPO error .)
    VARIABLE        reduce using rule 8 (PRECUERPO -> PRECUERPO error .)
    $end            reduce using rule 8 (PRECUERPO -> PRECUERPO error .)
    DOSPUNTOS       shift and go to state 32


state 34

    (7) PRECUERPO -> PRECUERPO CUERPO .

    error           reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)
    ID              reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)
    goto            reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)
    unset           reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)
    print           reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)
    if              reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)
    exit            reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)
    VARIABLE        reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)
    $end            reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)


state 35

    (18) ETIQUETA -> ID DOSPUNTOS . PRECUERPO
    (7) PRECUERPO -> . PRECUERPO CUERPO
    (8) PRECUERPO -> . PRECUERPO error
    (9) PRECUERPO -> . error CUERPO
    (10) PRECUERPO -> . CUERPO
    (11) CUERPO -> . ETIQUETA
    (12) CUERPO -> . GOTO_LABEL
    (13) CUERPO -> . ASIGNACION
    (14) CUERPO -> . DESTRUYE_VARIABLE
    (15) CUERPO -> . IMPRIME
    (16) CUERPO -> . ESTRUCTURA_IF
    (17) CUERPO -> . EXIT
    (18) ETIQUETA -> . ID DOSPUNTOS PRECUERPO
    (19) ETIQUETA -> . error DOSPUNTOS PRECUERPO
    (20) GOTO_LABEL -> . goto ID PTCOMA
    (21) ASIGNACION -> . NORMAL PTCOMA
    (22) ASIGNACION -> . ARRAY PTCOMA
    (74) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (75) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (73) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (76) EXIT -> . exit PTCOMA
    (23) NORMAL -> . VARIABLE IGUAL EXPRESION
    (24) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    error           shift and go to state 8
    ID              shift and go to state 18
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    PRECUERPO                      shift and go to state 48
    CUERPO                         shift and go to state 10
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 36

    (20) GOTO_LABEL -> goto ID . PTCOMA

    PTCOMA          shift and go to state 49


state 37

    (21) ASIGNACION -> NORMAL PTCOMA .

    error           reduce using rule 21 (ASIGNACION -> NORMAL PTCOMA .)
    ID              reduce using rule 21 (ASIGNACION -> NORMAL PTCOMA .)
    goto            reduce using rule 21 (ASIGNACION -> NORMAL PTCOMA .)
    unset           reduce using rule 21 (ASIGNACION -> NORMAL PTCOMA .)
    print           reduce using rule 21 (ASIGNACION -> NORMAL PTCOMA .)
    if              reduce using rule 21 (ASIGNACION -> NORMAL PTCOMA .)
    exit            reduce using rule 21 (ASIGNACION -> NORMAL PTCOMA .)
    VARIABLE        reduce using rule 21 (ASIGNACION -> NORMAL PTCOMA .)
    $end            reduce using rule 21 (ASIGNACION -> NORMAL PTCOMA .)


state 38

    (22) ASIGNACION -> ARRAY PTCOMA .

    error           reduce using rule 22 (ASIGNACION -> ARRAY PTCOMA .)
    ID              reduce using rule 22 (ASIGNACION -> ARRAY PTCOMA .)
    goto            reduce using rule 22 (ASIGNACION -> ARRAY PTCOMA .)
    unset           reduce using rule 22 (ASIGNACION -> ARRAY PTCOMA .)
    print           reduce using rule 22 (ASIGNACION -> ARRAY PTCOMA .)
    if              reduce using rule 22 (ASIGNACION -> ARRAY PTCOMA .)
    exit            reduce using rule 22 (ASIGNACION -> ARRAY PTCOMA .)
    VARIABLE        reduce using rule 22 (ASIGNACION -> ARRAY PTCOMA .)
    $end            reduce using rule 22 (ASIGNACION -> ARRAY PTCOMA .)


state 39

    (74) DESTRUYE_VARIABLE -> unset PARA . VALOR PARB PTCOMA
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 50
    LLAMADA_ARREGLO                shift and go to state 52

state 40

    (75) IMPRIME -> print PARA . EXPRESION PARB PTCOMA
    (25) EXPRESION -> . VALOR
    (26) EXPRESION -> . error
    (27) EXPRESION -> . PARA EXPRESION PARB
    (35) EXPRESION -> . ARITMETICAS
    (43) EXPRESION -> . LOGICAS
    (48) EXPRESION -> . RELACIONAL
    (55) EXPRESION -> . BIT
    (66) EXPRESION -> . CONVERSION
    (71) EXPRESION -> . PUNTERO
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (36) ARITMETICAS -> . MENOS VALOR
    (37) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (38) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (39) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (41) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (42) ARITMETICAS -> . abs PARA EXPRESION PARB
    (44) LOGICAS -> . NOTL VALOR
    (45) LOGICAS -> . VALOR ANDL VALOR
    (46) LOGICAS -> . VALOR ORL VALOR
    (47) LOGICAS -> . VALOR XORL VALOR
    (49) RELACIONAL -> . VALOR IGUALR VALOR
    (50) RELACIONAL -> . VALOR NOIGUALR VALOR
    (51) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (52) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (53) RELACIONAL -> . VALOR MAYORR VALOR
    (54) RELACIONAL -> . VALOR MENORR VALOR
    (56) BIT -> . NOTB VALOR
    (57) BIT -> . VALOR ANDB VALOR
    (58) BIT -> . VALOR ORB VALOR
    (59) BIT -> . VALOR XORB VALOR
    (60) BIT -> . VALOR MENORR MENORR VALOR
    (61) BIT -> . VALOR MAYORR MAYORR VALOR
    (67) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (72) PUNTERO -> . ANDB VARIABLE
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 61
    PARA            shift and go to state 58
    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57
    MENOS           shift and go to state 68
    abs             shift and go to state 69
    NOTL            shift and go to state 70
    NOTB            shift and go to state 71
    ANDB            shift and go to state 72

    EXPRESION                      shift and go to state 59
    VALOR                          shift and go to state 60
    ARITMETICAS                    shift and go to state 62
    LOGICAS                        shift and go to state 63
    RELACIONAL                     shift and go to state 64
    BIT                            shift and go to state 65
    CONVERSION                     shift and go to state 66
    PUNTERO                        shift and go to state 67
    LLAMADA_ARREGLO                shift and go to state 52

state 41

    (73) ESTRUCTURA_IF -> if PARA . EXPRESION PARB goto ID PTCOMA
    (25) EXPRESION -> . VALOR
    (26) EXPRESION -> . error
    (27) EXPRESION -> . PARA EXPRESION PARB
    (35) EXPRESION -> . ARITMETICAS
    (43) EXPRESION -> . LOGICAS
    (48) EXPRESION -> . RELACIONAL
    (55) EXPRESION -> . BIT
    (66) EXPRESION -> . CONVERSION
    (71) EXPRESION -> . PUNTERO
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (36) ARITMETICAS -> . MENOS VALOR
    (37) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (38) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (39) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (41) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (42) ARITMETICAS -> . abs PARA EXPRESION PARB
    (44) LOGICAS -> . NOTL VALOR
    (45) LOGICAS -> . VALOR ANDL VALOR
    (46) LOGICAS -> . VALOR ORL VALOR
    (47) LOGICAS -> . VALOR XORL VALOR
    (49) RELACIONAL -> . VALOR IGUALR VALOR
    (50) RELACIONAL -> . VALOR NOIGUALR VALOR
    (51) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (52) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (53) RELACIONAL -> . VALOR MAYORR VALOR
    (54) RELACIONAL -> . VALOR MENORR VALOR
    (56) BIT -> . NOTB VALOR
    (57) BIT -> . VALOR ANDB VALOR
    (58) BIT -> . VALOR ORB VALOR
    (59) BIT -> . VALOR XORB VALOR
    (60) BIT -> . VALOR MENORR MENORR VALOR
    (61) BIT -> . VALOR MAYORR MAYORR VALOR
    (67) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (72) PUNTERO -> . ANDB VARIABLE
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 61
    PARA            shift and go to state 58
    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57
    MENOS           shift and go to state 68
    abs             shift and go to state 69
    NOTL            shift and go to state 70
    NOTB            shift and go to state 71
    ANDB            shift and go to state 72

    EXPRESION                      shift and go to state 73
    VALOR                          shift and go to state 60
    ARITMETICAS                    shift and go to state 62
    LOGICAS                        shift and go to state 63
    RELACIONAL                     shift and go to state 64
    BIT                            shift and go to state 65
    CONVERSION                     shift and go to state 66
    PUNTERO                        shift and go to state 67
    LLAMADA_ARREGLO                shift and go to state 52

state 42

    (76) EXIT -> exit PTCOMA .

    error           reduce using rule 76 (EXIT -> exit PTCOMA .)
    ID              reduce using rule 76 (EXIT -> exit PTCOMA .)
    goto            reduce using rule 76 (EXIT -> exit PTCOMA .)
    unset           reduce using rule 76 (EXIT -> exit PTCOMA .)
    print           reduce using rule 76 (EXIT -> exit PTCOMA .)
    if              reduce using rule 76 (EXIT -> exit PTCOMA .)
    exit            reduce using rule 76 (EXIT -> exit PTCOMA .)
    VARIABLE        reduce using rule 76 (EXIT -> exit PTCOMA .)
    $end            reduce using rule 76 (EXIT -> exit PTCOMA .)


state 43

    (23) NORMAL -> VARIABLE IGUAL . EXPRESION
    (25) EXPRESION -> . VALOR
    (26) EXPRESION -> . error
    (27) EXPRESION -> . PARA EXPRESION PARB
    (35) EXPRESION -> . ARITMETICAS
    (43) EXPRESION -> . LOGICAS
    (48) EXPRESION -> . RELACIONAL
    (55) EXPRESION -> . BIT
    (66) EXPRESION -> . CONVERSION
    (71) EXPRESION -> . PUNTERO
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (36) ARITMETICAS -> . MENOS VALOR
    (37) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (38) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (39) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (41) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (42) ARITMETICAS -> . abs PARA EXPRESION PARB
    (44) LOGICAS -> . NOTL VALOR
    (45) LOGICAS -> . VALOR ANDL VALOR
    (46) LOGICAS -> . VALOR ORL VALOR
    (47) LOGICAS -> . VALOR XORL VALOR
    (49) RELACIONAL -> . VALOR IGUALR VALOR
    (50) RELACIONAL -> . VALOR NOIGUALR VALOR
    (51) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (52) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (53) RELACIONAL -> . VALOR MAYORR VALOR
    (54) RELACIONAL -> . VALOR MENORR VALOR
    (56) BIT -> . NOTB VALOR
    (57) BIT -> . VALOR ANDB VALOR
    (58) BIT -> . VALOR ORB VALOR
    (59) BIT -> . VALOR XORB VALOR
    (60) BIT -> . VALOR MENORR MENORR VALOR
    (61) BIT -> . VALOR MAYORR MAYORR VALOR
    (67) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (72) PUNTERO -> . ANDB VARIABLE
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 61
    PARA            shift and go to state 58
    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57
    MENOS           shift and go to state 68
    abs             shift and go to state 69
    NOTL            shift and go to state 70
    NOTB            shift and go to state 71
    ANDB            shift and go to state 72

    EXPRESION                      shift and go to state 74
    VALOR                          shift and go to state 60
    ARITMETICAS                    shift and go to state 62
    LOGICAS                        shift and go to state 63
    RELACIONAL                     shift and go to state 64
    BIT                            shift and go to state 65
    CONVERSION                     shift and go to state 66
    PUNTERO                        shift and go to state 67
    LLAMADA_ARREGLO                shift and go to state 52

state 44

    (24) ARRAY -> VARIABLE LISTA_POS . IGUAL EXPRESION
    (63) LISTA_POS -> LISTA_POS . POS
    (65) POS -> . CORA EXPRESION CORB

    IGUAL           shift and go to state 75
    CORA            shift and go to state 46

    POS                            shift and go to state 76

state 45

    (64) LISTA_POS -> POS .

    IGUAL           reduce using rule 64 (LISTA_POS -> POS .)
    CORA            reduce using rule 64 (LISTA_POS -> POS .)
    PARB            reduce using rule 64 (LISTA_POS -> POS .)
    ANDL            reduce using rule 64 (LISTA_POS -> POS .)
    ORL             reduce using rule 64 (LISTA_POS -> POS .)
    XORL            reduce using rule 64 (LISTA_POS -> POS .)
    IGUALR          reduce using rule 64 (LISTA_POS -> POS .)
    NOIGUALR        reduce using rule 64 (LISTA_POS -> POS .)
    MAYORR          reduce using rule 64 (LISTA_POS -> POS .)
    MENORR          reduce using rule 64 (LISTA_POS -> POS .)
    ANDB            reduce using rule 64 (LISTA_POS -> POS .)
    ORB             reduce using rule 64 (LISTA_POS -> POS .)
    XORB            reduce using rule 64 (LISTA_POS -> POS .)
    MAS             reduce using rule 64 (LISTA_POS -> POS .)
    MENOS           reduce using rule 64 (LISTA_POS -> POS .)
    MULTIPLICACION  reduce using rule 64 (LISTA_POS -> POS .)
    DIVIDIR         reduce using rule 64 (LISTA_POS -> POS .)
    RESIDUO         reduce using rule 64 (LISTA_POS -> POS .)
    PTCOMA          reduce using rule 64 (LISTA_POS -> POS .)
    CORB            reduce using rule 64 (LISTA_POS -> POS .)


state 46

    (65) POS -> CORA . EXPRESION CORB
    (25) EXPRESION -> . VALOR
    (26) EXPRESION -> . error
    (27) EXPRESION -> . PARA EXPRESION PARB
    (35) EXPRESION -> . ARITMETICAS
    (43) EXPRESION -> . LOGICAS
    (48) EXPRESION -> . RELACIONAL
    (55) EXPRESION -> . BIT
    (66) EXPRESION -> . CONVERSION
    (71) EXPRESION -> . PUNTERO
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (36) ARITMETICAS -> . MENOS VALOR
    (37) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (38) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (39) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (41) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (42) ARITMETICAS -> . abs PARA EXPRESION PARB
    (44) LOGICAS -> . NOTL VALOR
    (45) LOGICAS -> . VALOR ANDL VALOR
    (46) LOGICAS -> . VALOR ORL VALOR
    (47) LOGICAS -> . VALOR XORL VALOR
    (49) RELACIONAL -> . VALOR IGUALR VALOR
    (50) RELACIONAL -> . VALOR NOIGUALR VALOR
    (51) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (52) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (53) RELACIONAL -> . VALOR MAYORR VALOR
    (54) RELACIONAL -> . VALOR MENORR VALOR
    (56) BIT -> . NOTB VALOR
    (57) BIT -> . VALOR ANDB VALOR
    (58) BIT -> . VALOR ORB VALOR
    (59) BIT -> . VALOR XORB VALOR
    (60) BIT -> . VALOR MENORR MENORR VALOR
    (61) BIT -> . VALOR MAYORR MAYORR VALOR
    (67) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (72) PUNTERO -> . ANDB VARIABLE
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 61
    PARA            shift and go to state 58
    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57
    MENOS           shift and go to state 68
    abs             shift and go to state 69
    NOTL            shift and go to state 70
    NOTB            shift and go to state 71
    ANDB            shift and go to state 72

    EXPRESION                      shift and go to state 77
    VALOR                          shift and go to state 60
    ARITMETICAS                    shift and go to state 62
    LOGICAS                        shift and go to state 63
    RELACIONAL                     shift and go to state 64
    BIT                            shift and go to state 65
    CONVERSION                     shift and go to state 66
    PUNTERO                        shift and go to state 67
    LLAMADA_ARREGLO                shift and go to state 52

state 47

    (19) ETIQUETA -> error DOSPUNTOS PRECUERPO .
    (7) PRECUERPO -> PRECUERPO . CUERPO
    (8) PRECUERPO -> PRECUERPO . error
    (11) CUERPO -> . ETIQUETA
    (12) CUERPO -> . GOTO_LABEL
    (13) CUERPO -> . ASIGNACION
    (14) CUERPO -> . DESTRUYE_VARIABLE
    (15) CUERPO -> . IMPRIME
    (16) CUERPO -> . ESTRUCTURA_IF
    (17) CUERPO -> . EXIT
    (18) ETIQUETA -> . ID DOSPUNTOS PRECUERPO
    (19) ETIQUETA -> . error DOSPUNTOS PRECUERPO
    (20) GOTO_LABEL -> . goto ID PTCOMA
    (21) ASIGNACION -> . NORMAL PTCOMA
    (22) ASIGNACION -> . ARRAY PTCOMA
    (74) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (75) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (73) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (76) EXIT -> . exit PTCOMA
    (23) NORMAL -> . VARIABLE IGUAL EXPRESION
    (24) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for goto resolved as shift
  ! shift/reduce conflict for unset resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for exit resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    $end            reduce using rule 19 (ETIQUETA -> error DOSPUNTOS PRECUERPO .)
    error           shift and go to state 33
    ID              shift and go to state 18
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

  ! error           [ reduce using rule 19 (ETIQUETA -> error DOSPUNTOS PRECUERPO .) ]
  ! ID              [ reduce using rule 19 (ETIQUETA -> error DOSPUNTOS PRECUERPO .) ]
  ! goto            [ reduce using rule 19 (ETIQUETA -> error DOSPUNTOS PRECUERPO .) ]
  ! unset           [ reduce using rule 19 (ETIQUETA -> error DOSPUNTOS PRECUERPO .) ]
  ! print           [ reduce using rule 19 (ETIQUETA -> error DOSPUNTOS PRECUERPO .) ]
  ! if              [ reduce using rule 19 (ETIQUETA -> error DOSPUNTOS PRECUERPO .) ]
  ! exit            [ reduce using rule 19 (ETIQUETA -> error DOSPUNTOS PRECUERPO .) ]
  ! VARIABLE        [ reduce using rule 19 (ETIQUETA -> error DOSPUNTOS PRECUERPO .) ]

    CUERPO                         shift and go to state 34
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 48

    (18) ETIQUETA -> ID DOSPUNTOS PRECUERPO .
    (7) PRECUERPO -> PRECUERPO . CUERPO
    (8) PRECUERPO -> PRECUERPO . error
    (11) CUERPO -> . ETIQUETA
    (12) CUERPO -> . GOTO_LABEL
    (13) CUERPO -> . ASIGNACION
    (14) CUERPO -> . DESTRUYE_VARIABLE
    (15) CUERPO -> . IMPRIME
    (16) CUERPO -> . ESTRUCTURA_IF
    (17) CUERPO -> . EXIT
    (18) ETIQUETA -> . ID DOSPUNTOS PRECUERPO
    (19) ETIQUETA -> . error DOSPUNTOS PRECUERPO
    (20) GOTO_LABEL -> . goto ID PTCOMA
    (21) ASIGNACION -> . NORMAL PTCOMA
    (22) ASIGNACION -> . ARRAY PTCOMA
    (74) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (75) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (73) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (76) EXIT -> . exit PTCOMA
    (23) NORMAL -> . VARIABLE IGUAL EXPRESION
    (24) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for goto resolved as shift
  ! shift/reduce conflict for unset resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for exit resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    $end            reduce using rule 18 (ETIQUETA -> ID DOSPUNTOS PRECUERPO .)
    error           shift and go to state 33
    ID              shift and go to state 18
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

  ! error           [ reduce using rule 18 (ETIQUETA -> ID DOSPUNTOS PRECUERPO .) ]
  ! ID              [ reduce using rule 18 (ETIQUETA -> ID DOSPUNTOS PRECUERPO .) ]
  ! goto            [ reduce using rule 18 (ETIQUETA -> ID DOSPUNTOS PRECUERPO .) ]
  ! unset           [ reduce using rule 18 (ETIQUETA -> ID DOSPUNTOS PRECUERPO .) ]
  ! print           [ reduce using rule 18 (ETIQUETA -> ID DOSPUNTOS PRECUERPO .) ]
  ! if              [ reduce using rule 18 (ETIQUETA -> ID DOSPUNTOS PRECUERPO .) ]
  ! exit            [ reduce using rule 18 (ETIQUETA -> ID DOSPUNTOS PRECUERPO .) ]
  ! VARIABLE        [ reduce using rule 18 (ETIQUETA -> ID DOSPUNTOS PRECUERPO .) ]

    CUERPO                         shift and go to state 34
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 49

    (20) GOTO_LABEL -> goto ID PTCOMA .

    error           reduce using rule 20 (GOTO_LABEL -> goto ID PTCOMA .)
    ID              reduce using rule 20 (GOTO_LABEL -> goto ID PTCOMA .)
    goto            reduce using rule 20 (GOTO_LABEL -> goto ID PTCOMA .)
    unset           reduce using rule 20 (GOTO_LABEL -> goto ID PTCOMA .)
    print           reduce using rule 20 (GOTO_LABEL -> goto ID PTCOMA .)
    if              reduce using rule 20 (GOTO_LABEL -> goto ID PTCOMA .)
    exit            reduce using rule 20 (GOTO_LABEL -> goto ID PTCOMA .)
    VARIABLE        reduce using rule 20 (GOTO_LABEL -> goto ID PTCOMA .)
    $end            reduce using rule 20 (GOTO_LABEL -> goto ID PTCOMA .)


state 50

    (74) DESTRUYE_VARIABLE -> unset PARA VALOR . PARB PTCOMA

    PARB            shift and go to state 78


state 51

    (28) VALOR -> VARIABLE .
    (62) LLAMADA_ARREGLO -> VARIABLE . LISTA_POS
    (63) LISTA_POS -> . LISTA_POS POS
    (64) LISTA_POS -> . POS
    (65) POS -> . CORA EXPRESION CORB

    PARB            reduce using rule 28 (VALOR -> VARIABLE .)
    ANDL            reduce using rule 28 (VALOR -> VARIABLE .)
    ORL             reduce using rule 28 (VALOR -> VARIABLE .)
    XORL            reduce using rule 28 (VALOR -> VARIABLE .)
    IGUALR          reduce using rule 28 (VALOR -> VARIABLE .)
    NOIGUALR        reduce using rule 28 (VALOR -> VARIABLE .)
    MAYORR          reduce using rule 28 (VALOR -> VARIABLE .)
    MENORR          reduce using rule 28 (VALOR -> VARIABLE .)
    ANDB            reduce using rule 28 (VALOR -> VARIABLE .)
    ORB             reduce using rule 28 (VALOR -> VARIABLE .)
    XORB            reduce using rule 28 (VALOR -> VARIABLE .)
    MAS             reduce using rule 28 (VALOR -> VARIABLE .)
    MENOS           reduce using rule 28 (VALOR -> VARIABLE .)
    MULTIPLICACION  reduce using rule 28 (VALOR -> VARIABLE .)
    DIVIDIR         reduce using rule 28 (VALOR -> VARIABLE .)
    RESIDUO         reduce using rule 28 (VALOR -> VARIABLE .)
    PTCOMA          reduce using rule 28 (VALOR -> VARIABLE .)
    CORB            reduce using rule 28 (VALOR -> VARIABLE .)
    CORA            shift and go to state 46

    LISTA_POS                      shift and go to state 79
    POS                            shift and go to state 45

state 52

    (29) VALOR -> LLAMADA_ARREGLO .

    PARB            reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    ANDL            reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    ORL             reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    XORL            reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    IGUALR          reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    NOIGUALR        reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    MAYORR          reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    MENORR          reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    ANDB            reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    ORB             reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    XORB            reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    MAS             reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    MENOS           reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    MULTIPLICACION  reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    DIVIDIR         reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    RESIDUO         reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    PTCOMA          reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)
    CORB            reduce using rule 29 (VALOR -> LLAMADA_ARREGLO .)


state 53

    (30) VALOR -> INT .

    PARB            reduce using rule 30 (VALOR -> INT .)
    ANDL            reduce using rule 30 (VALOR -> INT .)
    ORL             reduce using rule 30 (VALOR -> INT .)
    XORL            reduce using rule 30 (VALOR -> INT .)
    IGUALR          reduce using rule 30 (VALOR -> INT .)
    NOIGUALR        reduce using rule 30 (VALOR -> INT .)
    MAYORR          reduce using rule 30 (VALOR -> INT .)
    MENORR          reduce using rule 30 (VALOR -> INT .)
    ANDB            reduce using rule 30 (VALOR -> INT .)
    ORB             reduce using rule 30 (VALOR -> INT .)
    XORB            reduce using rule 30 (VALOR -> INT .)
    MAS             reduce using rule 30 (VALOR -> INT .)
    MENOS           reduce using rule 30 (VALOR -> INT .)
    MULTIPLICACION  reduce using rule 30 (VALOR -> INT .)
    DIVIDIR         reduce using rule 30 (VALOR -> INT .)
    RESIDUO         reduce using rule 30 (VALOR -> INT .)
    PTCOMA          reduce using rule 30 (VALOR -> INT .)
    CORB            reduce using rule 30 (VALOR -> INT .)


state 54

    (31) VALOR -> FLOAT .

    PARB            reduce using rule 31 (VALOR -> FLOAT .)
    ANDL            reduce using rule 31 (VALOR -> FLOAT .)
    ORL             reduce using rule 31 (VALOR -> FLOAT .)
    XORL            reduce using rule 31 (VALOR -> FLOAT .)
    IGUALR          reduce using rule 31 (VALOR -> FLOAT .)
    NOIGUALR        reduce using rule 31 (VALOR -> FLOAT .)
    MAYORR          reduce using rule 31 (VALOR -> FLOAT .)
    MENORR          reduce using rule 31 (VALOR -> FLOAT .)
    ANDB            reduce using rule 31 (VALOR -> FLOAT .)
    ORB             reduce using rule 31 (VALOR -> FLOAT .)
    XORB            reduce using rule 31 (VALOR -> FLOAT .)
    MAS             reduce using rule 31 (VALOR -> FLOAT .)
    MENOS           reduce using rule 31 (VALOR -> FLOAT .)
    MULTIPLICACION  reduce using rule 31 (VALOR -> FLOAT .)
    DIVIDIR         reduce using rule 31 (VALOR -> FLOAT .)
    RESIDUO         reduce using rule 31 (VALOR -> FLOAT .)
    PTCOMA          reduce using rule 31 (VALOR -> FLOAT .)
    CORB            reduce using rule 31 (VALOR -> FLOAT .)


state 55

    (32) VALOR -> CHAR .

    PARB            reduce using rule 32 (VALOR -> CHAR .)
    ANDL            reduce using rule 32 (VALOR -> CHAR .)
    ORL             reduce using rule 32 (VALOR -> CHAR .)
    XORL            reduce using rule 32 (VALOR -> CHAR .)
    IGUALR          reduce using rule 32 (VALOR -> CHAR .)
    NOIGUALR        reduce using rule 32 (VALOR -> CHAR .)
    MAYORR          reduce using rule 32 (VALOR -> CHAR .)
    MENORR          reduce using rule 32 (VALOR -> CHAR .)
    ANDB            reduce using rule 32 (VALOR -> CHAR .)
    ORB             reduce using rule 32 (VALOR -> CHAR .)
    XORB            reduce using rule 32 (VALOR -> CHAR .)
    MAS             reduce using rule 32 (VALOR -> CHAR .)
    MENOS           reduce using rule 32 (VALOR -> CHAR .)
    MULTIPLICACION  reduce using rule 32 (VALOR -> CHAR .)
    DIVIDIR         reduce using rule 32 (VALOR -> CHAR .)
    RESIDUO         reduce using rule 32 (VALOR -> CHAR .)
    PTCOMA          reduce using rule 32 (VALOR -> CHAR .)
    CORB            reduce using rule 32 (VALOR -> CHAR .)


state 56

    (33) VALOR -> array . PARA PARB

    PARA            shift and go to state 80


state 57

    (34) VALOR -> read . PARA PARB

    PARA            shift and go to state 81


state 58

    (27) EXPRESION -> PARA . EXPRESION PARB
    (67) CONVERSION -> PARA . TIPO_CONVERSION PARB VALOR
    (25) EXPRESION -> . VALOR
    (26) EXPRESION -> . error
    (27) EXPRESION -> . PARA EXPRESION PARB
    (35) EXPRESION -> . ARITMETICAS
    (43) EXPRESION -> . LOGICAS
    (48) EXPRESION -> . RELACIONAL
    (55) EXPRESION -> . BIT
    (66) EXPRESION -> . CONVERSION
    (71) EXPRESION -> . PUNTERO
    (68) TIPO_CONVERSION -> . int
    (69) TIPO_CONVERSION -> . char
    (70) TIPO_CONVERSION -> . float
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (36) ARITMETICAS -> . MENOS VALOR
    (37) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (38) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (39) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (41) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (42) ARITMETICAS -> . abs PARA EXPRESION PARB
    (44) LOGICAS -> . NOTL VALOR
    (45) LOGICAS -> . VALOR ANDL VALOR
    (46) LOGICAS -> . VALOR ORL VALOR
    (47) LOGICAS -> . VALOR XORL VALOR
    (49) RELACIONAL -> . VALOR IGUALR VALOR
    (50) RELACIONAL -> . VALOR NOIGUALR VALOR
    (51) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (52) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (53) RELACIONAL -> . VALOR MAYORR VALOR
    (54) RELACIONAL -> . VALOR MENORR VALOR
    (56) BIT -> . NOTB VALOR
    (57) BIT -> . VALOR ANDB VALOR
    (58) BIT -> . VALOR ORB VALOR
    (59) BIT -> . VALOR XORB VALOR
    (60) BIT -> . VALOR MENORR MENORR VALOR
    (61) BIT -> . VALOR MAYORR MAYORR VALOR
    (67) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (72) PUNTERO -> . ANDB VARIABLE
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 61
    PARA            shift and go to state 58
    int             shift and go to state 84
    char            shift and go to state 85
    float           shift and go to state 86
    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57
    MENOS           shift and go to state 68
    abs             shift and go to state 69
    NOTL            shift and go to state 70
    NOTB            shift and go to state 71
    ANDB            shift and go to state 72

    EXPRESION                      shift and go to state 82
    TIPO_CONVERSION                shift and go to state 83
    VALOR                          shift and go to state 60
    ARITMETICAS                    shift and go to state 62
    LOGICAS                        shift and go to state 63
    RELACIONAL                     shift and go to state 64
    BIT                            shift and go to state 65
    CONVERSION                     shift and go to state 66
    PUNTERO                        shift and go to state 67
    LLAMADA_ARREGLO                shift and go to state 52

state 59

    (75) IMPRIME -> print PARA EXPRESION . PARB PTCOMA
    (37) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (38) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (39) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (41) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            shift and go to state 87
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    MULTIPLICACION  shift and go to state 90
    DIVIDIR         shift and go to state 91
    RESIDUO         shift and go to state 92


state 60

    (25) EXPRESION -> VALOR .
    (45) LOGICAS -> VALOR . ANDL VALOR
    (46) LOGICAS -> VALOR . ORL VALOR
    (47) LOGICAS -> VALOR . XORL VALOR
    (49) RELACIONAL -> VALOR . IGUALR VALOR
    (50) RELACIONAL -> VALOR . NOIGUALR VALOR
    (51) RELACIONAL -> VALOR . MAYORR IGUAL VALOR
    (52) RELACIONAL -> VALOR . MENORR IGUAL VALOR
    (53) RELACIONAL -> VALOR . MAYORR VALOR
    (54) RELACIONAL -> VALOR . MENORR VALOR
    (57) BIT -> VALOR . ANDB VALOR
    (58) BIT -> VALOR . ORB VALOR
    (59) BIT -> VALOR . XORB VALOR
    (60) BIT -> VALOR . MENORR MENORR VALOR
    (61) BIT -> VALOR . MAYORR MAYORR VALOR

    PARB            reduce using rule 25 (EXPRESION -> VALOR .)
    MAS             reduce using rule 25 (EXPRESION -> VALOR .)
    MENOS           reduce using rule 25 (EXPRESION -> VALOR .)
    MULTIPLICACION  reduce using rule 25 (EXPRESION -> VALOR .)
    DIVIDIR         reduce using rule 25 (EXPRESION -> VALOR .)
    RESIDUO         reduce using rule 25 (EXPRESION -> VALOR .)
    PTCOMA          reduce using rule 25 (EXPRESION -> VALOR .)
    CORB            reduce using rule 25 (EXPRESION -> VALOR .)
    ANDL            shift and go to state 93
    ORL             shift and go to state 94
    XORL            shift and go to state 95
    IGUALR          shift and go to state 96
    NOIGUALR        shift and go to state 97
    MAYORR          shift and go to state 98
    MENORR          shift and go to state 99
    ANDB            shift and go to state 100
    ORB             shift and go to state 101
    XORB            shift and go to state 102


state 61

    (26) EXPRESION -> error .

    PARB            reduce using rule 26 (EXPRESION -> error .)
    MAS             reduce using rule 26 (EXPRESION -> error .)
    MENOS           reduce using rule 26 (EXPRESION -> error .)
    MULTIPLICACION  reduce using rule 26 (EXPRESION -> error .)
    DIVIDIR         reduce using rule 26 (EXPRESION -> error .)
    RESIDUO         reduce using rule 26 (EXPRESION -> error .)
    PTCOMA          reduce using rule 26 (EXPRESION -> error .)
    CORB            reduce using rule 26 (EXPRESION -> error .)


state 62

    (35) EXPRESION -> ARITMETICAS .

    PARB            reduce using rule 35 (EXPRESION -> ARITMETICAS .)
    MAS             reduce using rule 35 (EXPRESION -> ARITMETICAS .)
    MENOS           reduce using rule 35 (EXPRESION -> ARITMETICAS .)
    MULTIPLICACION  reduce using rule 35 (EXPRESION -> ARITMETICAS .)
    DIVIDIR         reduce using rule 35 (EXPRESION -> ARITMETICAS .)
    RESIDUO         reduce using rule 35 (EXPRESION -> ARITMETICAS .)
    PTCOMA          reduce using rule 35 (EXPRESION -> ARITMETICAS .)
    CORB            reduce using rule 35 (EXPRESION -> ARITMETICAS .)


state 63

    (43) EXPRESION -> LOGICAS .

    PARB            reduce using rule 43 (EXPRESION -> LOGICAS .)
    MAS             reduce using rule 43 (EXPRESION -> LOGICAS .)
    MENOS           reduce using rule 43 (EXPRESION -> LOGICAS .)
    MULTIPLICACION  reduce using rule 43 (EXPRESION -> LOGICAS .)
    DIVIDIR         reduce using rule 43 (EXPRESION -> LOGICAS .)
    RESIDUO         reduce using rule 43 (EXPRESION -> LOGICAS .)
    PTCOMA          reduce using rule 43 (EXPRESION -> LOGICAS .)
    CORB            reduce using rule 43 (EXPRESION -> LOGICAS .)


state 64

    (48) EXPRESION -> RELACIONAL .

    PARB            reduce using rule 48 (EXPRESION -> RELACIONAL .)
    MAS             reduce using rule 48 (EXPRESION -> RELACIONAL .)
    MENOS           reduce using rule 48 (EXPRESION -> RELACIONAL .)
    MULTIPLICACION  reduce using rule 48 (EXPRESION -> RELACIONAL .)
    DIVIDIR         reduce using rule 48 (EXPRESION -> RELACIONAL .)
    RESIDUO         reduce using rule 48 (EXPRESION -> RELACIONAL .)
    PTCOMA          reduce using rule 48 (EXPRESION -> RELACIONAL .)
    CORB            reduce using rule 48 (EXPRESION -> RELACIONAL .)


state 65

    (55) EXPRESION -> BIT .

    PARB            reduce using rule 55 (EXPRESION -> BIT .)
    MAS             reduce using rule 55 (EXPRESION -> BIT .)
    MENOS           reduce using rule 55 (EXPRESION -> BIT .)
    MULTIPLICACION  reduce using rule 55 (EXPRESION -> BIT .)
    DIVIDIR         reduce using rule 55 (EXPRESION -> BIT .)
    RESIDUO         reduce using rule 55 (EXPRESION -> BIT .)
    PTCOMA          reduce using rule 55 (EXPRESION -> BIT .)
    CORB            reduce using rule 55 (EXPRESION -> BIT .)


state 66

    (66) EXPRESION -> CONVERSION .

    PARB            reduce using rule 66 (EXPRESION -> CONVERSION .)
    MAS             reduce using rule 66 (EXPRESION -> CONVERSION .)
    MENOS           reduce using rule 66 (EXPRESION -> CONVERSION .)
    MULTIPLICACION  reduce using rule 66 (EXPRESION -> CONVERSION .)
    DIVIDIR         reduce using rule 66 (EXPRESION -> CONVERSION .)
    RESIDUO         reduce using rule 66 (EXPRESION -> CONVERSION .)
    PTCOMA          reduce using rule 66 (EXPRESION -> CONVERSION .)
    CORB            reduce using rule 66 (EXPRESION -> CONVERSION .)


state 67

    (71) EXPRESION -> PUNTERO .

    PARB            reduce using rule 71 (EXPRESION -> PUNTERO .)
    MAS             reduce using rule 71 (EXPRESION -> PUNTERO .)
    MENOS           reduce using rule 71 (EXPRESION -> PUNTERO .)
    MULTIPLICACION  reduce using rule 71 (EXPRESION -> PUNTERO .)
    DIVIDIR         reduce using rule 71 (EXPRESION -> PUNTERO .)
    RESIDUO         reduce using rule 71 (EXPRESION -> PUNTERO .)
    PTCOMA          reduce using rule 71 (EXPRESION -> PUNTERO .)
    CORB            reduce using rule 71 (EXPRESION -> PUNTERO .)


state 68

    (36) ARITMETICAS -> MENOS . VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 103
    LLAMADA_ARREGLO                shift and go to state 52

state 69

    (42) ARITMETICAS -> abs . PARA EXPRESION PARB

    PARA            shift and go to state 104


state 70

    (44) LOGICAS -> NOTL . VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 105
    LLAMADA_ARREGLO                shift and go to state 52

state 71

    (56) BIT -> NOTB . VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 106
    LLAMADA_ARREGLO                shift and go to state 52

state 72

    (72) PUNTERO -> ANDB . VARIABLE

    VARIABLE        shift and go to state 107


state 73

    (73) ESTRUCTURA_IF -> if PARA EXPRESION . PARB goto ID PTCOMA
    (37) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (38) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (39) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (41) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            shift and go to state 108
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    MULTIPLICACION  shift and go to state 90
    DIVIDIR         shift and go to state 91
    RESIDUO         shift and go to state 92


state 74

    (23) NORMAL -> VARIABLE IGUAL EXPRESION .
    (37) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (38) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (39) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (41) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PTCOMA          reduce using rule 23 (NORMAL -> VARIABLE IGUAL EXPRESION .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    MULTIPLICACION  shift and go to state 90
    DIVIDIR         shift and go to state 91
    RESIDUO         shift and go to state 92


state 75

    (24) ARRAY -> VARIABLE LISTA_POS IGUAL . EXPRESION
    (25) EXPRESION -> . VALOR
    (26) EXPRESION -> . error
    (27) EXPRESION -> . PARA EXPRESION PARB
    (35) EXPRESION -> . ARITMETICAS
    (43) EXPRESION -> . LOGICAS
    (48) EXPRESION -> . RELACIONAL
    (55) EXPRESION -> . BIT
    (66) EXPRESION -> . CONVERSION
    (71) EXPRESION -> . PUNTERO
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (36) ARITMETICAS -> . MENOS VALOR
    (37) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (38) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (39) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (41) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (42) ARITMETICAS -> . abs PARA EXPRESION PARB
    (44) LOGICAS -> . NOTL VALOR
    (45) LOGICAS -> . VALOR ANDL VALOR
    (46) LOGICAS -> . VALOR ORL VALOR
    (47) LOGICAS -> . VALOR XORL VALOR
    (49) RELACIONAL -> . VALOR IGUALR VALOR
    (50) RELACIONAL -> . VALOR NOIGUALR VALOR
    (51) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (52) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (53) RELACIONAL -> . VALOR MAYORR VALOR
    (54) RELACIONAL -> . VALOR MENORR VALOR
    (56) BIT -> . NOTB VALOR
    (57) BIT -> . VALOR ANDB VALOR
    (58) BIT -> . VALOR ORB VALOR
    (59) BIT -> . VALOR XORB VALOR
    (60) BIT -> . VALOR MENORR MENORR VALOR
    (61) BIT -> . VALOR MAYORR MAYORR VALOR
    (67) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (72) PUNTERO -> . ANDB VARIABLE
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 61
    PARA            shift and go to state 58
    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57
    MENOS           shift and go to state 68
    abs             shift and go to state 69
    NOTL            shift and go to state 70
    NOTB            shift and go to state 71
    ANDB            shift and go to state 72

    EXPRESION                      shift and go to state 109
    VALOR                          shift and go to state 60
    ARITMETICAS                    shift and go to state 62
    LOGICAS                        shift and go to state 63
    RELACIONAL                     shift and go to state 64
    BIT                            shift and go to state 65
    CONVERSION                     shift and go to state 66
    PUNTERO                        shift and go to state 67
    LLAMADA_ARREGLO                shift and go to state 52

state 76

    (63) LISTA_POS -> LISTA_POS POS .

    IGUAL           reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    CORA            reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    PARB            reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    ANDL            reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    ORL             reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    XORL            reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    IGUALR          reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    NOIGUALR        reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    MAYORR          reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    MENORR          reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    ANDB            reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    ORB             reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    XORB            reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    MAS             reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    MENOS           reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    MULTIPLICACION  reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    DIVIDIR         reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    RESIDUO         reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    PTCOMA          reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)
    CORB            reduce using rule 63 (LISTA_POS -> LISTA_POS POS .)


state 77

    (65) POS -> CORA EXPRESION . CORB
    (37) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (38) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (39) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (41) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    CORB            shift and go to state 110
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    MULTIPLICACION  shift and go to state 90
    DIVIDIR         shift and go to state 91
    RESIDUO         shift and go to state 92


state 78

    (74) DESTRUYE_VARIABLE -> unset PARA VALOR PARB . PTCOMA

    PTCOMA          shift and go to state 111


state 79

    (62) LLAMADA_ARREGLO -> VARIABLE LISTA_POS .
    (63) LISTA_POS -> LISTA_POS . POS
    (65) POS -> . CORA EXPRESION CORB

    PARB            reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    ANDL            reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    ORL             reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    XORL            reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    IGUALR          reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    NOIGUALR        reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    MAYORR          reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    MENORR          reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    ANDB            reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    ORB             reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    XORB            reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    MAS             reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    MENOS           reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    MULTIPLICACION  reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    DIVIDIR         reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    RESIDUO         reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    PTCOMA          reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    CORB            reduce using rule 62 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    CORA            shift and go to state 46

    POS                            shift and go to state 76

state 80

    (33) VALOR -> array PARA . PARB

    PARB            shift and go to state 112


state 81

    (34) VALOR -> read PARA . PARB

    PARB            shift and go to state 113


state 82

    (27) EXPRESION -> PARA EXPRESION . PARB
    (37) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (38) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (39) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (41) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            shift and go to state 114
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    MULTIPLICACION  shift and go to state 90
    DIVIDIR         shift and go to state 91
    RESIDUO         shift and go to state 92


state 83

    (67) CONVERSION -> PARA TIPO_CONVERSION . PARB VALOR

    PARB            shift and go to state 115


state 84

    (68) TIPO_CONVERSION -> int .

    PARB            reduce using rule 68 (TIPO_CONVERSION -> int .)


state 85

    (69) TIPO_CONVERSION -> char .

    PARB            reduce using rule 69 (TIPO_CONVERSION -> char .)


state 86

    (70) TIPO_CONVERSION -> float .

    PARB            reduce using rule 70 (TIPO_CONVERSION -> float .)


state 87

    (75) IMPRIME -> print PARA EXPRESION PARB . PTCOMA

    PTCOMA          shift and go to state 116


state 88

    (37) ARITMETICAS -> EXPRESION MAS . EXPRESION
    (25) EXPRESION -> . VALOR
    (26) EXPRESION -> . error
    (27) EXPRESION -> . PARA EXPRESION PARB
    (35) EXPRESION -> . ARITMETICAS
    (43) EXPRESION -> . LOGICAS
    (48) EXPRESION -> . RELACIONAL
    (55) EXPRESION -> . BIT
    (66) EXPRESION -> . CONVERSION
    (71) EXPRESION -> . PUNTERO
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (36) ARITMETICAS -> . MENOS VALOR
    (37) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (38) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (39) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (41) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (42) ARITMETICAS -> . abs PARA EXPRESION PARB
    (44) LOGICAS -> . NOTL VALOR
    (45) LOGICAS -> . VALOR ANDL VALOR
    (46) LOGICAS -> . VALOR ORL VALOR
    (47) LOGICAS -> . VALOR XORL VALOR
    (49) RELACIONAL -> . VALOR IGUALR VALOR
    (50) RELACIONAL -> . VALOR NOIGUALR VALOR
    (51) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (52) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (53) RELACIONAL -> . VALOR MAYORR VALOR
    (54) RELACIONAL -> . VALOR MENORR VALOR
    (56) BIT -> . NOTB VALOR
    (57) BIT -> . VALOR ANDB VALOR
    (58) BIT -> . VALOR ORB VALOR
    (59) BIT -> . VALOR XORB VALOR
    (60) BIT -> . VALOR MENORR MENORR VALOR
    (61) BIT -> . VALOR MAYORR MAYORR VALOR
    (67) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (72) PUNTERO -> . ANDB VARIABLE
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 61
    PARA            shift and go to state 58
    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57
    MENOS           shift and go to state 68
    abs             shift and go to state 69
    NOTL            shift and go to state 70
    NOTB            shift and go to state 71
    ANDB            shift and go to state 72

    EXPRESION                      shift and go to state 117
    VALOR                          shift and go to state 60
    ARITMETICAS                    shift and go to state 62
    LOGICAS                        shift and go to state 63
    RELACIONAL                     shift and go to state 64
    BIT                            shift and go to state 65
    CONVERSION                     shift and go to state 66
    PUNTERO                        shift and go to state 67
    LLAMADA_ARREGLO                shift and go to state 52

state 89

    (38) ARITMETICAS -> EXPRESION MENOS . EXPRESION
    (25) EXPRESION -> . VALOR
    (26) EXPRESION -> . error
    (27) EXPRESION -> . PARA EXPRESION PARB
    (35) EXPRESION -> . ARITMETICAS
    (43) EXPRESION -> . LOGICAS
    (48) EXPRESION -> . RELACIONAL
    (55) EXPRESION -> . BIT
    (66) EXPRESION -> . CONVERSION
    (71) EXPRESION -> . PUNTERO
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (36) ARITMETICAS -> . MENOS VALOR
    (37) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (38) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (39) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (41) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (42) ARITMETICAS -> . abs PARA EXPRESION PARB
    (44) LOGICAS -> . NOTL VALOR
    (45) LOGICAS -> . VALOR ANDL VALOR
    (46) LOGICAS -> . VALOR ORL VALOR
    (47) LOGICAS -> . VALOR XORL VALOR
    (49) RELACIONAL -> . VALOR IGUALR VALOR
    (50) RELACIONAL -> . VALOR NOIGUALR VALOR
    (51) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (52) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (53) RELACIONAL -> . VALOR MAYORR VALOR
    (54) RELACIONAL -> . VALOR MENORR VALOR
    (56) BIT -> . NOTB VALOR
    (57) BIT -> . VALOR ANDB VALOR
    (58) BIT -> . VALOR ORB VALOR
    (59) BIT -> . VALOR XORB VALOR
    (60) BIT -> . VALOR MENORR MENORR VALOR
    (61) BIT -> . VALOR MAYORR MAYORR VALOR
    (67) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (72) PUNTERO -> . ANDB VARIABLE
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 61
    PARA            shift and go to state 58
    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57
    MENOS           shift and go to state 68
    abs             shift and go to state 69
    NOTL            shift and go to state 70
    NOTB            shift and go to state 71
    ANDB            shift and go to state 72

    EXPRESION                      shift and go to state 118
    VALOR                          shift and go to state 60
    ARITMETICAS                    shift and go to state 62
    LOGICAS                        shift and go to state 63
    RELACIONAL                     shift and go to state 64
    BIT                            shift and go to state 65
    CONVERSION                     shift and go to state 66
    PUNTERO                        shift and go to state 67
    LLAMADA_ARREGLO                shift and go to state 52

state 90

    (39) ARITMETICAS -> EXPRESION MULTIPLICACION . EXPRESION
    (25) EXPRESION -> . VALOR
    (26) EXPRESION -> . error
    (27) EXPRESION -> . PARA EXPRESION PARB
    (35) EXPRESION -> . ARITMETICAS
    (43) EXPRESION -> . LOGICAS
    (48) EXPRESION -> . RELACIONAL
    (55) EXPRESION -> . BIT
    (66) EXPRESION -> . CONVERSION
    (71) EXPRESION -> . PUNTERO
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (36) ARITMETICAS -> . MENOS VALOR
    (37) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (38) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (39) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (41) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (42) ARITMETICAS -> . abs PARA EXPRESION PARB
    (44) LOGICAS -> . NOTL VALOR
    (45) LOGICAS -> . VALOR ANDL VALOR
    (46) LOGICAS -> . VALOR ORL VALOR
    (47) LOGICAS -> . VALOR XORL VALOR
    (49) RELACIONAL -> . VALOR IGUALR VALOR
    (50) RELACIONAL -> . VALOR NOIGUALR VALOR
    (51) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (52) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (53) RELACIONAL -> . VALOR MAYORR VALOR
    (54) RELACIONAL -> . VALOR MENORR VALOR
    (56) BIT -> . NOTB VALOR
    (57) BIT -> . VALOR ANDB VALOR
    (58) BIT -> . VALOR ORB VALOR
    (59) BIT -> . VALOR XORB VALOR
    (60) BIT -> . VALOR MENORR MENORR VALOR
    (61) BIT -> . VALOR MAYORR MAYORR VALOR
    (67) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (72) PUNTERO -> . ANDB VARIABLE
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 61
    PARA            shift and go to state 58
    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57
    MENOS           shift and go to state 68
    abs             shift and go to state 69
    NOTL            shift and go to state 70
    NOTB            shift and go to state 71
    ANDB            shift and go to state 72

    EXPRESION                      shift and go to state 119
    VALOR                          shift and go to state 60
    ARITMETICAS                    shift and go to state 62
    LOGICAS                        shift and go to state 63
    RELACIONAL                     shift and go to state 64
    BIT                            shift and go to state 65
    CONVERSION                     shift and go to state 66
    PUNTERO                        shift and go to state 67
    LLAMADA_ARREGLO                shift and go to state 52

state 91

    (40) ARITMETICAS -> EXPRESION DIVIDIR . EXPRESION
    (25) EXPRESION -> . VALOR
    (26) EXPRESION -> . error
    (27) EXPRESION -> . PARA EXPRESION PARB
    (35) EXPRESION -> . ARITMETICAS
    (43) EXPRESION -> . LOGICAS
    (48) EXPRESION -> . RELACIONAL
    (55) EXPRESION -> . BIT
    (66) EXPRESION -> . CONVERSION
    (71) EXPRESION -> . PUNTERO
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (36) ARITMETICAS -> . MENOS VALOR
    (37) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (38) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (39) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (41) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (42) ARITMETICAS -> . abs PARA EXPRESION PARB
    (44) LOGICAS -> . NOTL VALOR
    (45) LOGICAS -> . VALOR ANDL VALOR
    (46) LOGICAS -> . VALOR ORL VALOR
    (47) LOGICAS -> . VALOR XORL VALOR
    (49) RELACIONAL -> . VALOR IGUALR VALOR
    (50) RELACIONAL -> . VALOR NOIGUALR VALOR
    (51) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (52) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (53) RELACIONAL -> . VALOR MAYORR VALOR
    (54) RELACIONAL -> . VALOR MENORR VALOR
    (56) BIT -> . NOTB VALOR
    (57) BIT -> . VALOR ANDB VALOR
    (58) BIT -> . VALOR ORB VALOR
    (59) BIT -> . VALOR XORB VALOR
    (60) BIT -> . VALOR MENORR MENORR VALOR
    (61) BIT -> . VALOR MAYORR MAYORR VALOR
    (67) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (72) PUNTERO -> . ANDB VARIABLE
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 61
    PARA            shift and go to state 58
    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57
    MENOS           shift and go to state 68
    abs             shift and go to state 69
    NOTL            shift and go to state 70
    NOTB            shift and go to state 71
    ANDB            shift and go to state 72

    EXPRESION                      shift and go to state 120
    VALOR                          shift and go to state 60
    ARITMETICAS                    shift and go to state 62
    LOGICAS                        shift and go to state 63
    RELACIONAL                     shift and go to state 64
    BIT                            shift and go to state 65
    CONVERSION                     shift and go to state 66
    PUNTERO                        shift and go to state 67
    LLAMADA_ARREGLO                shift and go to state 52

state 92

    (41) ARITMETICAS -> EXPRESION RESIDUO . EXPRESION
    (25) EXPRESION -> . VALOR
    (26) EXPRESION -> . error
    (27) EXPRESION -> . PARA EXPRESION PARB
    (35) EXPRESION -> . ARITMETICAS
    (43) EXPRESION -> . LOGICAS
    (48) EXPRESION -> . RELACIONAL
    (55) EXPRESION -> . BIT
    (66) EXPRESION -> . CONVERSION
    (71) EXPRESION -> . PUNTERO
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (36) ARITMETICAS -> . MENOS VALOR
    (37) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (38) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (39) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (41) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (42) ARITMETICAS -> . abs PARA EXPRESION PARB
    (44) LOGICAS -> . NOTL VALOR
    (45) LOGICAS -> . VALOR ANDL VALOR
    (46) LOGICAS -> . VALOR ORL VALOR
    (47) LOGICAS -> . VALOR XORL VALOR
    (49) RELACIONAL -> . VALOR IGUALR VALOR
    (50) RELACIONAL -> . VALOR NOIGUALR VALOR
    (51) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (52) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (53) RELACIONAL -> . VALOR MAYORR VALOR
    (54) RELACIONAL -> . VALOR MENORR VALOR
    (56) BIT -> . NOTB VALOR
    (57) BIT -> . VALOR ANDB VALOR
    (58) BIT -> . VALOR ORB VALOR
    (59) BIT -> . VALOR XORB VALOR
    (60) BIT -> . VALOR MENORR MENORR VALOR
    (61) BIT -> . VALOR MAYORR MAYORR VALOR
    (67) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (72) PUNTERO -> . ANDB VARIABLE
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 61
    PARA            shift and go to state 58
    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57
    MENOS           shift and go to state 68
    abs             shift and go to state 69
    NOTL            shift and go to state 70
    NOTB            shift and go to state 71
    ANDB            shift and go to state 72

    EXPRESION                      shift and go to state 121
    VALOR                          shift and go to state 60
    ARITMETICAS                    shift and go to state 62
    LOGICAS                        shift and go to state 63
    RELACIONAL                     shift and go to state 64
    BIT                            shift and go to state 65
    CONVERSION                     shift and go to state 66
    PUNTERO                        shift and go to state 67
    LLAMADA_ARREGLO                shift and go to state 52

state 93

    (45) LOGICAS -> VALOR ANDL . VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 122
    LLAMADA_ARREGLO                shift and go to state 52

state 94

    (46) LOGICAS -> VALOR ORL . VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 123
    LLAMADA_ARREGLO                shift and go to state 52

state 95

    (47) LOGICAS -> VALOR XORL . VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 124
    LLAMADA_ARREGLO                shift and go to state 52

state 96

    (49) RELACIONAL -> VALOR IGUALR . VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 125
    LLAMADA_ARREGLO                shift and go to state 52

state 97

    (50) RELACIONAL -> VALOR NOIGUALR . VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 126
    LLAMADA_ARREGLO                shift and go to state 52

state 98

    (51) RELACIONAL -> VALOR MAYORR . IGUAL VALOR
    (53) RELACIONAL -> VALOR MAYORR . VALOR
    (61) BIT -> VALOR MAYORR . MAYORR VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    IGUAL           shift and go to state 129
    MAYORR          shift and go to state 128
    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 127
    LLAMADA_ARREGLO                shift and go to state 52

state 99

    (52) RELACIONAL -> VALOR MENORR . IGUAL VALOR
    (54) RELACIONAL -> VALOR MENORR . VALOR
    (60) BIT -> VALOR MENORR . MENORR VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    IGUAL           shift and go to state 132
    MENORR          shift and go to state 131
    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 130
    LLAMADA_ARREGLO                shift and go to state 52

state 100

    (57) BIT -> VALOR ANDB . VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 133
    LLAMADA_ARREGLO                shift and go to state 52

state 101

    (58) BIT -> VALOR ORB . VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 134
    LLAMADA_ARREGLO                shift and go to state 52

state 102

    (59) BIT -> VALOR XORB . VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 135
    LLAMADA_ARREGLO                shift and go to state 52

state 103

    (36) ARITMETICAS -> MENOS VALOR .

    PARB            reduce using rule 36 (ARITMETICAS -> MENOS VALOR .)
    MAS             reduce using rule 36 (ARITMETICAS -> MENOS VALOR .)
    MENOS           reduce using rule 36 (ARITMETICAS -> MENOS VALOR .)
    MULTIPLICACION  reduce using rule 36 (ARITMETICAS -> MENOS VALOR .)
    DIVIDIR         reduce using rule 36 (ARITMETICAS -> MENOS VALOR .)
    RESIDUO         reduce using rule 36 (ARITMETICAS -> MENOS VALOR .)
    PTCOMA          reduce using rule 36 (ARITMETICAS -> MENOS VALOR .)
    CORB            reduce using rule 36 (ARITMETICAS -> MENOS VALOR .)


state 104

    (42) ARITMETICAS -> abs PARA . EXPRESION PARB
    (25) EXPRESION -> . VALOR
    (26) EXPRESION -> . error
    (27) EXPRESION -> . PARA EXPRESION PARB
    (35) EXPRESION -> . ARITMETICAS
    (43) EXPRESION -> . LOGICAS
    (48) EXPRESION -> . RELACIONAL
    (55) EXPRESION -> . BIT
    (66) EXPRESION -> . CONVERSION
    (71) EXPRESION -> . PUNTERO
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (36) ARITMETICAS -> . MENOS VALOR
    (37) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (38) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (39) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (41) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (42) ARITMETICAS -> . abs PARA EXPRESION PARB
    (44) LOGICAS -> . NOTL VALOR
    (45) LOGICAS -> . VALOR ANDL VALOR
    (46) LOGICAS -> . VALOR ORL VALOR
    (47) LOGICAS -> . VALOR XORL VALOR
    (49) RELACIONAL -> . VALOR IGUALR VALOR
    (50) RELACIONAL -> . VALOR NOIGUALR VALOR
    (51) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (52) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (53) RELACIONAL -> . VALOR MAYORR VALOR
    (54) RELACIONAL -> . VALOR MENORR VALOR
    (56) BIT -> . NOTB VALOR
    (57) BIT -> . VALOR ANDB VALOR
    (58) BIT -> . VALOR ORB VALOR
    (59) BIT -> . VALOR XORB VALOR
    (60) BIT -> . VALOR MENORR MENORR VALOR
    (61) BIT -> . VALOR MAYORR MAYORR VALOR
    (67) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (72) PUNTERO -> . ANDB VARIABLE
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 61
    PARA            shift and go to state 58
    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57
    MENOS           shift and go to state 68
    abs             shift and go to state 69
    NOTL            shift and go to state 70
    NOTB            shift and go to state 71
    ANDB            shift and go to state 72

    EXPRESION                      shift and go to state 136
    VALOR                          shift and go to state 60
    ARITMETICAS                    shift and go to state 62
    LOGICAS                        shift and go to state 63
    RELACIONAL                     shift and go to state 64
    BIT                            shift and go to state 65
    CONVERSION                     shift and go to state 66
    PUNTERO                        shift and go to state 67
    LLAMADA_ARREGLO                shift and go to state 52

state 105

    (44) LOGICAS -> NOTL VALOR .

    PARB            reduce using rule 44 (LOGICAS -> NOTL VALOR .)
    MAS             reduce using rule 44 (LOGICAS -> NOTL VALOR .)
    MENOS           reduce using rule 44 (LOGICAS -> NOTL VALOR .)
    MULTIPLICACION  reduce using rule 44 (LOGICAS -> NOTL VALOR .)
    DIVIDIR         reduce using rule 44 (LOGICAS -> NOTL VALOR .)
    RESIDUO         reduce using rule 44 (LOGICAS -> NOTL VALOR .)
    PTCOMA          reduce using rule 44 (LOGICAS -> NOTL VALOR .)
    CORB            reduce using rule 44 (LOGICAS -> NOTL VALOR .)


state 106

    (56) BIT -> NOTB VALOR .

    PARB            reduce using rule 56 (BIT -> NOTB VALOR .)
    MAS             reduce using rule 56 (BIT -> NOTB VALOR .)
    MENOS           reduce using rule 56 (BIT -> NOTB VALOR .)
    MULTIPLICACION  reduce using rule 56 (BIT -> NOTB VALOR .)
    DIVIDIR         reduce using rule 56 (BIT -> NOTB VALOR .)
    RESIDUO         reduce using rule 56 (BIT -> NOTB VALOR .)
    PTCOMA          reduce using rule 56 (BIT -> NOTB VALOR .)
    CORB            reduce using rule 56 (BIT -> NOTB VALOR .)


state 107

    (72) PUNTERO -> ANDB VARIABLE .

    PARB            reduce using rule 72 (PUNTERO -> ANDB VARIABLE .)
    MAS             reduce using rule 72 (PUNTERO -> ANDB VARIABLE .)
    MENOS           reduce using rule 72 (PUNTERO -> ANDB VARIABLE .)
    MULTIPLICACION  reduce using rule 72 (PUNTERO -> ANDB VARIABLE .)
    DIVIDIR         reduce using rule 72 (PUNTERO -> ANDB VARIABLE .)
    RESIDUO         reduce using rule 72 (PUNTERO -> ANDB VARIABLE .)
    PTCOMA          reduce using rule 72 (PUNTERO -> ANDB VARIABLE .)
    CORB            reduce using rule 72 (PUNTERO -> ANDB VARIABLE .)


state 108

    (73) ESTRUCTURA_IF -> if PARA EXPRESION PARB . goto ID PTCOMA

    goto            shift and go to state 137


state 109

    (24) ARRAY -> VARIABLE LISTA_POS IGUAL EXPRESION .
    (37) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (38) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (39) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (41) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PTCOMA          reduce using rule 24 (ARRAY -> VARIABLE LISTA_POS IGUAL EXPRESION .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    MULTIPLICACION  shift and go to state 90
    DIVIDIR         shift and go to state 91
    RESIDUO         shift and go to state 92


state 110

    (65) POS -> CORA EXPRESION CORB .

    IGUAL           reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    CORA            reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    PARB            reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    ANDL            reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    ORL             reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    XORL            reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    IGUALR          reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    NOIGUALR        reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    MAYORR          reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    MENORR          reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    ANDB            reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    ORB             reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    XORB            reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    MAS             reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    MENOS           reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    MULTIPLICACION  reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    DIVIDIR         reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    RESIDUO         reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    PTCOMA          reduce using rule 65 (POS -> CORA EXPRESION CORB .)
    CORB            reduce using rule 65 (POS -> CORA EXPRESION CORB .)


state 111

    (74) DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .

    error           reduce using rule 74 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    ID              reduce using rule 74 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    goto            reduce using rule 74 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    unset           reduce using rule 74 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    print           reduce using rule 74 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    if              reduce using rule 74 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    exit            reduce using rule 74 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    VARIABLE        reduce using rule 74 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    $end            reduce using rule 74 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)


state 112

    (33) VALOR -> array PARA PARB .

    PARB            reduce using rule 33 (VALOR -> array PARA PARB .)
    ANDL            reduce using rule 33 (VALOR -> array PARA PARB .)
    ORL             reduce using rule 33 (VALOR -> array PARA PARB .)
    XORL            reduce using rule 33 (VALOR -> array PARA PARB .)
    IGUALR          reduce using rule 33 (VALOR -> array PARA PARB .)
    NOIGUALR        reduce using rule 33 (VALOR -> array PARA PARB .)
    MAYORR          reduce using rule 33 (VALOR -> array PARA PARB .)
    MENORR          reduce using rule 33 (VALOR -> array PARA PARB .)
    ANDB            reduce using rule 33 (VALOR -> array PARA PARB .)
    ORB             reduce using rule 33 (VALOR -> array PARA PARB .)
    XORB            reduce using rule 33 (VALOR -> array PARA PARB .)
    MAS             reduce using rule 33 (VALOR -> array PARA PARB .)
    MENOS           reduce using rule 33 (VALOR -> array PARA PARB .)
    MULTIPLICACION  reduce using rule 33 (VALOR -> array PARA PARB .)
    DIVIDIR         reduce using rule 33 (VALOR -> array PARA PARB .)
    RESIDUO         reduce using rule 33 (VALOR -> array PARA PARB .)
    PTCOMA          reduce using rule 33 (VALOR -> array PARA PARB .)
    CORB            reduce using rule 33 (VALOR -> array PARA PARB .)


state 113

    (34) VALOR -> read PARA PARB .

    PARB            reduce using rule 34 (VALOR -> read PARA PARB .)
    ANDL            reduce using rule 34 (VALOR -> read PARA PARB .)
    ORL             reduce using rule 34 (VALOR -> read PARA PARB .)
    XORL            reduce using rule 34 (VALOR -> read PARA PARB .)
    IGUALR          reduce using rule 34 (VALOR -> read PARA PARB .)
    NOIGUALR        reduce using rule 34 (VALOR -> read PARA PARB .)
    MAYORR          reduce using rule 34 (VALOR -> read PARA PARB .)
    MENORR          reduce using rule 34 (VALOR -> read PARA PARB .)
    ANDB            reduce using rule 34 (VALOR -> read PARA PARB .)
    ORB             reduce using rule 34 (VALOR -> read PARA PARB .)
    XORB            reduce using rule 34 (VALOR -> read PARA PARB .)
    MAS             reduce using rule 34 (VALOR -> read PARA PARB .)
    MENOS           reduce using rule 34 (VALOR -> read PARA PARB .)
    MULTIPLICACION  reduce using rule 34 (VALOR -> read PARA PARB .)
    DIVIDIR         reduce using rule 34 (VALOR -> read PARA PARB .)
    RESIDUO         reduce using rule 34 (VALOR -> read PARA PARB .)
    PTCOMA          reduce using rule 34 (VALOR -> read PARA PARB .)
    CORB            reduce using rule 34 (VALOR -> read PARA PARB .)


state 114

    (27) EXPRESION -> PARA EXPRESION PARB .

    PARB            reduce using rule 27 (EXPRESION -> PARA EXPRESION PARB .)
    MAS             reduce using rule 27 (EXPRESION -> PARA EXPRESION PARB .)
    MENOS           reduce using rule 27 (EXPRESION -> PARA EXPRESION PARB .)
    MULTIPLICACION  reduce using rule 27 (EXPRESION -> PARA EXPRESION PARB .)
    DIVIDIR         reduce using rule 27 (EXPRESION -> PARA EXPRESION PARB .)
    RESIDUO         reduce using rule 27 (EXPRESION -> PARA EXPRESION PARB .)
    PTCOMA          reduce using rule 27 (EXPRESION -> PARA EXPRESION PARB .)
    CORB            reduce using rule 27 (EXPRESION -> PARA EXPRESION PARB .)


state 115

    (67) CONVERSION -> PARA TIPO_CONVERSION PARB . VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 138
    LLAMADA_ARREGLO                shift and go to state 52

state 116

    (75) IMPRIME -> print PARA EXPRESION PARB PTCOMA .

    error           reduce using rule 75 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    ID              reduce using rule 75 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    goto            reduce using rule 75 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    unset           reduce using rule 75 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    print           reduce using rule 75 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    if              reduce using rule 75 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    exit            reduce using rule 75 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    VARIABLE        reduce using rule 75 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    $end            reduce using rule 75 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)


state 117

    (37) ARITMETICAS -> EXPRESION MAS EXPRESION .
    (37) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (38) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (39) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (41) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            reduce using rule 37 (ARITMETICAS -> EXPRESION MAS EXPRESION .)
    MAS             reduce using rule 37 (ARITMETICAS -> EXPRESION MAS EXPRESION .)
    MENOS           reduce using rule 37 (ARITMETICAS -> EXPRESION MAS EXPRESION .)
    PTCOMA          reduce using rule 37 (ARITMETICAS -> EXPRESION MAS EXPRESION .)
    CORB            reduce using rule 37 (ARITMETICAS -> EXPRESION MAS EXPRESION .)
    MULTIPLICACION  shift and go to state 90
    DIVIDIR         shift and go to state 91
    RESIDUO         shift and go to state 92

  ! MULTIPLICACION  [ reduce using rule 37 (ARITMETICAS -> EXPRESION MAS EXPRESION .) ]
  ! DIVIDIR         [ reduce using rule 37 (ARITMETICAS -> EXPRESION MAS EXPRESION .) ]
  ! RESIDUO         [ reduce using rule 37 (ARITMETICAS -> EXPRESION MAS EXPRESION .) ]
  ! MAS             [ shift and go to state 88 ]
  ! MENOS           [ shift and go to state 89 ]


state 118

    (38) ARITMETICAS -> EXPRESION MENOS EXPRESION .
    (37) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (38) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (39) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (41) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            reduce using rule 38 (ARITMETICAS -> EXPRESION MENOS EXPRESION .)
    MAS             reduce using rule 38 (ARITMETICAS -> EXPRESION MENOS EXPRESION .)
    MENOS           reduce using rule 38 (ARITMETICAS -> EXPRESION MENOS EXPRESION .)
    PTCOMA          reduce using rule 38 (ARITMETICAS -> EXPRESION MENOS EXPRESION .)
    CORB            reduce using rule 38 (ARITMETICAS -> EXPRESION MENOS EXPRESION .)
    MULTIPLICACION  shift and go to state 90
    DIVIDIR         shift and go to state 91
    RESIDUO         shift and go to state 92

  ! MULTIPLICACION  [ reduce using rule 38 (ARITMETICAS -> EXPRESION MENOS EXPRESION .) ]
  ! DIVIDIR         [ reduce using rule 38 (ARITMETICAS -> EXPRESION MENOS EXPRESION .) ]
  ! RESIDUO         [ reduce using rule 38 (ARITMETICAS -> EXPRESION MENOS EXPRESION .) ]
  ! MAS             [ shift and go to state 88 ]
  ! MENOS           [ shift and go to state 89 ]


state 119

    (39) ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .
    (37) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (38) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (39) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (41) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            reduce using rule 39 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    MAS             reduce using rule 39 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    MENOS           reduce using rule 39 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    MULTIPLICACION  reduce using rule 39 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    DIVIDIR         reduce using rule 39 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    PTCOMA          reduce using rule 39 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    CORB            reduce using rule 39 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    RESIDUO         shift and go to state 92

  ! RESIDUO         [ reduce using rule 39 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .) ]
  ! MAS             [ shift and go to state 88 ]
  ! MENOS           [ shift and go to state 89 ]
  ! MULTIPLICACION  [ shift and go to state 90 ]
  ! DIVIDIR         [ shift and go to state 91 ]


state 120

    (40) ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .
    (37) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (38) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (39) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (41) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            reduce using rule 40 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    MAS             reduce using rule 40 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    MENOS           reduce using rule 40 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    MULTIPLICACION  reduce using rule 40 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    DIVIDIR         reduce using rule 40 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    PTCOMA          reduce using rule 40 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    CORB            reduce using rule 40 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    RESIDUO         shift and go to state 92

  ! RESIDUO         [ reduce using rule 40 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .) ]
  ! MAS             [ shift and go to state 88 ]
  ! MENOS           [ shift and go to state 89 ]
  ! MULTIPLICACION  [ shift and go to state 90 ]
  ! DIVIDIR         [ shift and go to state 91 ]


state 121

    (41) ARITMETICAS -> EXPRESION RESIDUO EXPRESION .
    (37) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (38) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (39) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (41) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            reduce using rule 41 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    MAS             reduce using rule 41 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    MENOS           reduce using rule 41 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    MULTIPLICACION  reduce using rule 41 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    DIVIDIR         reduce using rule 41 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    RESIDUO         reduce using rule 41 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    PTCOMA          reduce using rule 41 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    CORB            reduce using rule 41 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)

  ! MAS             [ shift and go to state 88 ]
  ! MENOS           [ shift and go to state 89 ]
  ! MULTIPLICACION  [ shift and go to state 90 ]
  ! DIVIDIR         [ shift and go to state 91 ]
  ! RESIDUO         [ shift and go to state 92 ]


state 122

    (45) LOGICAS -> VALOR ANDL VALOR .

    PARB            reduce using rule 45 (LOGICAS -> VALOR ANDL VALOR .)
    MAS             reduce using rule 45 (LOGICAS -> VALOR ANDL VALOR .)
    MENOS           reduce using rule 45 (LOGICAS -> VALOR ANDL VALOR .)
    MULTIPLICACION  reduce using rule 45 (LOGICAS -> VALOR ANDL VALOR .)
    DIVIDIR         reduce using rule 45 (LOGICAS -> VALOR ANDL VALOR .)
    RESIDUO         reduce using rule 45 (LOGICAS -> VALOR ANDL VALOR .)
    PTCOMA          reduce using rule 45 (LOGICAS -> VALOR ANDL VALOR .)
    CORB            reduce using rule 45 (LOGICAS -> VALOR ANDL VALOR .)


state 123

    (46) LOGICAS -> VALOR ORL VALOR .

    PARB            reduce using rule 46 (LOGICAS -> VALOR ORL VALOR .)
    MAS             reduce using rule 46 (LOGICAS -> VALOR ORL VALOR .)
    MENOS           reduce using rule 46 (LOGICAS -> VALOR ORL VALOR .)
    MULTIPLICACION  reduce using rule 46 (LOGICAS -> VALOR ORL VALOR .)
    DIVIDIR         reduce using rule 46 (LOGICAS -> VALOR ORL VALOR .)
    RESIDUO         reduce using rule 46 (LOGICAS -> VALOR ORL VALOR .)
    PTCOMA          reduce using rule 46 (LOGICAS -> VALOR ORL VALOR .)
    CORB            reduce using rule 46 (LOGICAS -> VALOR ORL VALOR .)


state 124

    (47) LOGICAS -> VALOR XORL VALOR .

    PARB            reduce using rule 47 (LOGICAS -> VALOR XORL VALOR .)
    MAS             reduce using rule 47 (LOGICAS -> VALOR XORL VALOR .)
    MENOS           reduce using rule 47 (LOGICAS -> VALOR XORL VALOR .)
    MULTIPLICACION  reduce using rule 47 (LOGICAS -> VALOR XORL VALOR .)
    DIVIDIR         reduce using rule 47 (LOGICAS -> VALOR XORL VALOR .)
    RESIDUO         reduce using rule 47 (LOGICAS -> VALOR XORL VALOR .)
    PTCOMA          reduce using rule 47 (LOGICAS -> VALOR XORL VALOR .)
    CORB            reduce using rule 47 (LOGICAS -> VALOR XORL VALOR .)


state 125

    (49) RELACIONAL -> VALOR IGUALR VALOR .

    PARB            reduce using rule 49 (RELACIONAL -> VALOR IGUALR VALOR .)
    MAS             reduce using rule 49 (RELACIONAL -> VALOR IGUALR VALOR .)
    MENOS           reduce using rule 49 (RELACIONAL -> VALOR IGUALR VALOR .)
    MULTIPLICACION  reduce using rule 49 (RELACIONAL -> VALOR IGUALR VALOR .)
    DIVIDIR         reduce using rule 49 (RELACIONAL -> VALOR IGUALR VALOR .)
    RESIDUO         reduce using rule 49 (RELACIONAL -> VALOR IGUALR VALOR .)
    PTCOMA          reduce using rule 49 (RELACIONAL -> VALOR IGUALR VALOR .)
    CORB            reduce using rule 49 (RELACIONAL -> VALOR IGUALR VALOR .)


state 126

    (50) RELACIONAL -> VALOR NOIGUALR VALOR .

    PARB            reduce using rule 50 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    MAS             reduce using rule 50 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    MENOS           reduce using rule 50 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    MULTIPLICACION  reduce using rule 50 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    DIVIDIR         reduce using rule 50 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    RESIDUO         reduce using rule 50 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    PTCOMA          reduce using rule 50 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    CORB            reduce using rule 50 (RELACIONAL -> VALOR NOIGUALR VALOR .)


state 127

    (53) RELACIONAL -> VALOR MAYORR VALOR .

    PARB            reduce using rule 53 (RELACIONAL -> VALOR MAYORR VALOR .)
    MAS             reduce using rule 53 (RELACIONAL -> VALOR MAYORR VALOR .)
    MENOS           reduce using rule 53 (RELACIONAL -> VALOR MAYORR VALOR .)
    MULTIPLICACION  reduce using rule 53 (RELACIONAL -> VALOR MAYORR VALOR .)
    DIVIDIR         reduce using rule 53 (RELACIONAL -> VALOR MAYORR VALOR .)
    RESIDUO         reduce using rule 53 (RELACIONAL -> VALOR MAYORR VALOR .)
    PTCOMA          reduce using rule 53 (RELACIONAL -> VALOR MAYORR VALOR .)
    CORB            reduce using rule 53 (RELACIONAL -> VALOR MAYORR VALOR .)


state 128

    (61) BIT -> VALOR MAYORR MAYORR . VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 139
    LLAMADA_ARREGLO                shift and go to state 52

state 129

    (51) RELACIONAL -> VALOR MAYORR IGUAL . VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 140
    LLAMADA_ARREGLO                shift and go to state 52

state 130

    (54) RELACIONAL -> VALOR MENORR VALOR .

    PARB            reduce using rule 54 (RELACIONAL -> VALOR MENORR VALOR .)
    MAS             reduce using rule 54 (RELACIONAL -> VALOR MENORR VALOR .)
    MENOS           reduce using rule 54 (RELACIONAL -> VALOR MENORR VALOR .)
    MULTIPLICACION  reduce using rule 54 (RELACIONAL -> VALOR MENORR VALOR .)
    DIVIDIR         reduce using rule 54 (RELACIONAL -> VALOR MENORR VALOR .)
    RESIDUO         reduce using rule 54 (RELACIONAL -> VALOR MENORR VALOR .)
    PTCOMA          reduce using rule 54 (RELACIONAL -> VALOR MENORR VALOR .)
    CORB            reduce using rule 54 (RELACIONAL -> VALOR MENORR VALOR .)


state 131

    (60) BIT -> VALOR MENORR MENORR . VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 141
    LLAMADA_ARREGLO                shift and go to state 52

state 132

    (52) RELACIONAL -> VALOR MENORR IGUAL . VALOR
    (28) VALOR -> . VARIABLE
    (29) VALOR -> . LLAMADA_ARREGLO
    (30) VALOR -> . INT
    (31) VALOR -> . FLOAT
    (32) VALOR -> . CHAR
    (33) VALOR -> . array PARA PARB
    (34) VALOR -> . read PARA PARB
    (62) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 51
    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    CHAR            shift and go to state 55
    array           shift and go to state 56
    read            shift and go to state 57

    VALOR                          shift and go to state 142
    LLAMADA_ARREGLO                shift and go to state 52

state 133

    (57) BIT -> VALOR ANDB VALOR .

    PARB            reduce using rule 57 (BIT -> VALOR ANDB VALOR .)
    MAS             reduce using rule 57 (BIT -> VALOR ANDB VALOR .)
    MENOS           reduce using rule 57 (BIT -> VALOR ANDB VALOR .)
    MULTIPLICACION  reduce using rule 57 (BIT -> VALOR ANDB VALOR .)
    DIVIDIR         reduce using rule 57 (BIT -> VALOR ANDB VALOR .)
    RESIDUO         reduce using rule 57 (BIT -> VALOR ANDB VALOR .)
    PTCOMA          reduce using rule 57 (BIT -> VALOR ANDB VALOR .)
    CORB            reduce using rule 57 (BIT -> VALOR ANDB VALOR .)


state 134

    (58) BIT -> VALOR ORB VALOR .

    PARB            reduce using rule 58 (BIT -> VALOR ORB VALOR .)
    MAS             reduce using rule 58 (BIT -> VALOR ORB VALOR .)
    MENOS           reduce using rule 58 (BIT -> VALOR ORB VALOR .)
    MULTIPLICACION  reduce using rule 58 (BIT -> VALOR ORB VALOR .)
    DIVIDIR         reduce using rule 58 (BIT -> VALOR ORB VALOR .)
    RESIDUO         reduce using rule 58 (BIT -> VALOR ORB VALOR .)
    PTCOMA          reduce using rule 58 (BIT -> VALOR ORB VALOR .)
    CORB            reduce using rule 58 (BIT -> VALOR ORB VALOR .)


state 135

    (59) BIT -> VALOR XORB VALOR .

    PARB            reduce using rule 59 (BIT -> VALOR XORB VALOR .)
    MAS             reduce using rule 59 (BIT -> VALOR XORB VALOR .)
    MENOS           reduce using rule 59 (BIT -> VALOR XORB VALOR .)
    MULTIPLICACION  reduce using rule 59 (BIT -> VALOR XORB VALOR .)
    DIVIDIR         reduce using rule 59 (BIT -> VALOR XORB VALOR .)
    RESIDUO         reduce using rule 59 (BIT -> VALOR XORB VALOR .)
    PTCOMA          reduce using rule 59 (BIT -> VALOR XORB VALOR .)
    CORB            reduce using rule 59 (BIT -> VALOR XORB VALOR .)


state 136

    (42) ARITMETICAS -> abs PARA EXPRESION . PARB
    (37) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (38) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (39) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (40) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (41) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            shift and go to state 143
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    MULTIPLICACION  shift and go to state 90
    DIVIDIR         shift and go to state 91
    RESIDUO         shift and go to state 92


state 137

    (73) ESTRUCTURA_IF -> if PARA EXPRESION PARB goto . ID PTCOMA

    ID              shift and go to state 144


state 138

    (67) CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .

    PARB            reduce using rule 67 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    MAS             reduce using rule 67 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    MENOS           reduce using rule 67 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    MULTIPLICACION  reduce using rule 67 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    DIVIDIR         reduce using rule 67 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    RESIDUO         reduce using rule 67 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    PTCOMA          reduce using rule 67 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    CORB            reduce using rule 67 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)


state 139

    (61) BIT -> VALOR MAYORR MAYORR VALOR .

    PARB            reduce using rule 61 (BIT -> VALOR MAYORR MAYORR VALOR .)
    MAS             reduce using rule 61 (BIT -> VALOR MAYORR MAYORR VALOR .)
    MENOS           reduce using rule 61 (BIT -> VALOR MAYORR MAYORR VALOR .)
    MULTIPLICACION  reduce using rule 61 (BIT -> VALOR MAYORR MAYORR VALOR .)
    DIVIDIR         reduce using rule 61 (BIT -> VALOR MAYORR MAYORR VALOR .)
    RESIDUO         reduce using rule 61 (BIT -> VALOR MAYORR MAYORR VALOR .)
    PTCOMA          reduce using rule 61 (BIT -> VALOR MAYORR MAYORR VALOR .)
    CORB            reduce using rule 61 (BIT -> VALOR MAYORR MAYORR VALOR .)


state 140

    (51) RELACIONAL -> VALOR MAYORR IGUAL VALOR .

    PARB            reduce using rule 51 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    MAS             reduce using rule 51 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    MENOS           reduce using rule 51 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    MULTIPLICACION  reduce using rule 51 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    DIVIDIR         reduce using rule 51 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    RESIDUO         reduce using rule 51 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    PTCOMA          reduce using rule 51 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    CORB            reduce using rule 51 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)


state 141

    (60) BIT -> VALOR MENORR MENORR VALOR .

    PARB            reduce using rule 60 (BIT -> VALOR MENORR MENORR VALOR .)
    MAS             reduce using rule 60 (BIT -> VALOR MENORR MENORR VALOR .)
    MENOS           reduce using rule 60 (BIT -> VALOR MENORR MENORR VALOR .)
    MULTIPLICACION  reduce using rule 60 (BIT -> VALOR MENORR MENORR VALOR .)
    DIVIDIR         reduce using rule 60 (BIT -> VALOR MENORR MENORR VALOR .)
    RESIDUO         reduce using rule 60 (BIT -> VALOR MENORR MENORR VALOR .)
    PTCOMA          reduce using rule 60 (BIT -> VALOR MENORR MENORR VALOR .)
    CORB            reduce using rule 60 (BIT -> VALOR MENORR MENORR VALOR .)


state 142

    (52) RELACIONAL -> VALOR MENORR IGUAL VALOR .

    PARB            reduce using rule 52 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    MAS             reduce using rule 52 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    MENOS           reduce using rule 52 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    MULTIPLICACION  reduce using rule 52 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    DIVIDIR         reduce using rule 52 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    RESIDUO         reduce using rule 52 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    PTCOMA          reduce using rule 52 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    CORB            reduce using rule 52 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)


state 143

    (42) ARITMETICAS -> abs PARA EXPRESION PARB .

    PARB            reduce using rule 42 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    MAS             reduce using rule 42 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    MENOS           reduce using rule 42 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    MULTIPLICACION  reduce using rule 42 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    DIVIDIR         reduce using rule 42 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    RESIDUO         reduce using rule 42 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    PTCOMA          reduce using rule 42 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    CORB            reduce using rule 42 (ARITMETICAS -> abs PARA EXPRESION PARB .)


state 144

    (73) ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID . PTCOMA

    PTCOMA          shift and go to state 145


state 145

    (73) ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .

    error           reduce using rule 73 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    ID              reduce using rule 73 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    goto            reduce using rule 73 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    unset           reduce using rule 73 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    print           reduce using rule 73 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    if              reduce using rule 73 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    exit            reduce using rule 73 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    VARIABLE        reduce using rule 73 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    $end            reduce using rule 73 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 47 resolved as shift
WARNING: shift/reduce conflict for ID in state 47 resolved as shift
WARNING: shift/reduce conflict for goto in state 47 resolved as shift
WARNING: shift/reduce conflict for unset in state 47 resolved as shift
WARNING: shift/reduce conflict for print in state 47 resolved as shift
WARNING: shift/reduce conflict for if in state 47 resolved as shift
WARNING: shift/reduce conflict for exit in state 47 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 47 resolved as shift
WARNING: shift/reduce conflict for error in state 48 resolved as shift
WARNING: shift/reduce conflict for ID in state 48 resolved as shift
WARNING: shift/reduce conflict for goto in state 48 resolved as shift
WARNING: shift/reduce conflict for unset in state 48 resolved as shift
WARNING: shift/reduce conflict for print in state 48 resolved as shift
WARNING: shift/reduce conflict for if in state 48 resolved as shift
WARNING: shift/reduce conflict for exit in state 48 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 48 resolved as shift

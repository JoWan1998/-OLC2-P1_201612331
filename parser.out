Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NEWLINE

Grammar

Rule 0     S' -> S
Rule 1     S -> ESTRUCTURAMAIN
Rule 2     S -> error
Rule 3     ESTRUCTURAMAIN -> main DOSPUNTOS PRECUERPO
Rule 4     ESTRUCTURAMAIN -> error DOSPUNTOS PRECUERPO
Rule 5     ESTRUCTURAMAIN -> main error PRECUERPO
Rule 6     ESTRUCTURAMAIN -> main DOSPUNTOS error
Rule 7     PRECUERPO -> PRECUERPO CUERPO
Rule 8     PRECUERPO -> CUERPO
Rule 9     CUERPO -> ETIQUETA
Rule 10    CUERPO -> GOTO_LABEL
Rule 11    CUERPO -> ASIGNACION
Rule 12    CUERPO -> DESTRUYE_VARIABLE
Rule 13    CUERPO -> IMPRIME
Rule 14    CUERPO -> ESTRUCTURA_IF
Rule 15    CUERPO -> EXIT
Rule 16    PRECUERPOE -> PRECUERPOE CUERPOE
Rule 17    PRECUERPOE -> CUERPOE
Rule 18    CUERPOE -> GOTO_LABEL
Rule 19    CUERPOE -> ASIGNACION
Rule 20    CUERPOE -> DESTRUYE_VARIABLE
Rule 21    CUERPOE -> IMPRIME
Rule 22    CUERPOE -> ESTRUCTURA_IF
Rule 23    CUERPOE -> EXIT
Rule 24    ETIQUETA -> ID DOSPUNTOS PRECUERPOE
Rule 25    ETIQUETA -> error DOSPUNTOS PRECUERPOE
Rule 26    GOTO_LABEL -> goto ID PTCOMA
Rule 27    ASIGNACION -> NORMAL PTCOMA
Rule 28    ASIGNACION -> ARRAY PTCOMA
Rule 29    NORMAL -> VARIABLE IGUAL EXPRESION
Rule 30    ARRAY -> VARIABLE LISTA_POS IGUAL EXPRESION
Rule 31    EXPRESION -> VALOR
Rule 32    EXPRESION -> error
Rule 33    EXPRESION -> PARA EXPRESION PARB
Rule 34    VALOR -> VARIABLE
Rule 35    VALOR -> LLAMADA_ARREGLO
Rule 36    VALOR -> INT
Rule 37    VALOR -> FLOAT
Rule 38    VALOR -> CHAR
Rule 39    VALOR -> array PARA PARB
Rule 40    VALOR -> read PARA PARB
Rule 41    EXPRESION -> ARITMETICAS
Rule 42    ARITMETICAS -> MENOS VALOR
Rule 43    ARITMETICAS -> EXPRESION MAS EXPRESION
Rule 44    ARITMETICAS -> EXPRESION MENOS EXPRESION
Rule 45    ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION
Rule 46    ARITMETICAS -> EXPRESION DIVIDIR EXPRESION
Rule 47    ARITMETICAS -> EXPRESION RESIDUO EXPRESION
Rule 48    ARITMETICAS -> abs PARA EXPRESION PARB
Rule 49    EXPRESION -> LOGICAS
Rule 50    LOGICAS -> NOTL VALOR
Rule 51    LOGICAS -> VALOR ANDL VALOR
Rule 52    LOGICAS -> VALOR ORL VALOR
Rule 53    LOGICAS -> VALOR XORL VALOR
Rule 54    EXPRESION -> RELACIONAL
Rule 55    RELACIONAL -> VALOR IGUALR VALOR
Rule 56    RELACIONAL -> VALOR NOIGUALR VALOR
Rule 57    RELACIONAL -> VALOR MAYORR IGUAL VALOR
Rule 58    RELACIONAL -> VALOR MENORR IGUAL VALOR
Rule 59    RELACIONAL -> VALOR MAYORR VALOR
Rule 60    RELACIONAL -> VALOR MENORR VALOR
Rule 61    EXPRESION -> BIT
Rule 62    BIT -> NOTB VALOR
Rule 63    BIT -> VALOR ANDB VALOR
Rule 64    BIT -> VALOR ORB VALOR
Rule 65    BIT -> VALOR XORB VALOR
Rule 66    BIT -> VALOR MENORR MENORR VALOR
Rule 67    BIT -> VALOR MAYORR MAYORR VALOR
Rule 68    LLAMADA_ARREGLO -> VARIABLE LISTA_POS
Rule 69    LISTA_POS -> LISTA_POS POS
Rule 70    LISTA_POS -> POS
Rule 71    POS -> CORA VALOR CORB
Rule 72    EXPRESION -> CONVERSION
Rule 73    CONVERSION -> PARA TIPO_CONVERSION PARB VALOR
Rule 74    TIPO_CONVERSION -> int
Rule 75    TIPO_CONVERSION -> char
Rule 76    TIPO_CONVERSION -> float
Rule 77    EXPRESION -> PUNTERO
Rule 78    PUNTERO -> ANDB VARIABLE
Rule 79    ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA
Rule 80    DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA
Rule 81    IMPRIME -> print PARA EXPRESION PARB PTCOMA
Rule 82    EXIT -> exit PTCOMA

Terminals, with rules where they appear

ANDB                 : 63 78
ANDL                 : 51
CHAR                 : 38
CORA                 : 71
CORB                 : 71
DIVIDIR              : 46
DOSPUNTOS            : 3 4 6 24 25
FLOAT                : 37
ID                   : 24 26 79
IGUAL                : 29 30 57 58
IGUALR               : 55
INT                  : 36
MAS                  : 43
MAYORR               : 57 59 67 67
MENORR               : 58 60 66 66
MENOS                : 42 44
MULTIPLICACION       : 45
NEWLINE              : 
NOIGUALR             : 56
NOTB                 : 62
NOTL                 : 50
ORB                  : 64
ORL                  : 52
PARA                 : 33 39 40 48 73 79 80 81
PARB                 : 33 39 40 48 73 79 80 81
PTCOMA               : 26 27 28 79 80 81 82
RESIDUO              : 47
VARIABLE             : 29 30 34 68 78
XORB                 : 65
XORL                 : 53
abs                  : 48
array                : 39
char                 : 75
error                : 2 4 5 6 25 32
exit                 : 82
float                : 76
goto                 : 26 79
if                   : 79
int                  : 74
main                 : 3 5 6
print                : 81
read                 : 40
unset                : 80

Nonterminals, with rules where they appear

ARITMETICAS          : 41
ARRAY                : 28
ASIGNACION           : 11 19
BIT                  : 61
CONVERSION           : 72
CUERPO               : 7 8
CUERPOE              : 16 17
DESTRUYE_VARIABLE    : 12 20
ESTRUCTURAMAIN       : 1
ESTRUCTURA_IF        : 14 22
ETIQUETA             : 9
EXIT                 : 15 23
EXPRESION            : 29 30 33 43 43 44 44 45 45 46 46 47 47 48 79 81
GOTO_LABEL           : 10 18
IMPRIME              : 13 21
LISTA_POS            : 30 68 69
LLAMADA_ARREGLO      : 35
LOGICAS              : 49
NORMAL               : 27
POS                  : 69 70
PRECUERPO            : 3 4 5 7
PRECUERPOE           : 16 24 25
PUNTERO              : 77
RELACIONAL           : 54
S                    : 0
TIPO_CONVERSION      : 73
VALOR                : 31 42 50 51 51 52 52 53 53 55 55 56 56 57 57 58 58 59 59 60 60 62 63 63 64 64 65 65 66 66 67 67 71 73 80

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . ESTRUCTURAMAIN
    (2) S -> . error
    (3) ESTRUCTURAMAIN -> . main DOSPUNTOS PRECUERPO
    (4) ESTRUCTURAMAIN -> . error DOSPUNTOS PRECUERPO
    (5) ESTRUCTURAMAIN -> . main error PRECUERPO
    (6) ESTRUCTURAMAIN -> . main DOSPUNTOS error

    error           shift and go to state 3
    main            shift and go to state 4

    S                              shift and go to state 1
    ESTRUCTURAMAIN                 shift and go to state 2

state 1

    (0) S' -> S .



state 2

    (1) S -> ESTRUCTURAMAIN .

    $end            reduce using rule 1 (S -> ESTRUCTURAMAIN .)


state 3

    (2) S -> error .
    (4) ESTRUCTURAMAIN -> error . DOSPUNTOS PRECUERPO

    $end            reduce using rule 2 (S -> error .)
    DOSPUNTOS       shift and go to state 5


state 4

    (3) ESTRUCTURAMAIN -> main . DOSPUNTOS PRECUERPO
    (5) ESTRUCTURAMAIN -> main . error PRECUERPO
    (6) ESTRUCTURAMAIN -> main . DOSPUNTOS error

    DOSPUNTOS       shift and go to state 6
    error           shift and go to state 7


state 5

    (4) ESTRUCTURAMAIN -> error DOSPUNTOS . PRECUERPO
    (7) PRECUERPO -> . PRECUERPO CUERPO
    (8) PRECUERPO -> . CUERPO
    (9) CUERPO -> . ETIQUETA
    (10) CUERPO -> . GOTO_LABEL
    (11) CUERPO -> . ASIGNACION
    (12) CUERPO -> . DESTRUYE_VARIABLE
    (13) CUERPO -> . IMPRIME
    (14) CUERPO -> . ESTRUCTURA_IF
    (15) CUERPO -> . EXIT
    (24) ETIQUETA -> . ID DOSPUNTOS PRECUERPOE
    (25) ETIQUETA -> . error DOSPUNTOS PRECUERPOE
    (26) GOTO_LABEL -> . goto ID PTCOMA
    (27) ASIGNACION -> . NORMAL PTCOMA
    (28) ASIGNACION -> . ARRAY PTCOMA
    (80) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (81) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (79) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (82) EXIT -> . exit PTCOMA
    (29) NORMAL -> . VARIABLE IGUAL EXPRESION
    (30) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    ID              shift and go to state 18
    error           shift and go to state 8
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    PRECUERPO                      shift and go to state 9
    CUERPO                         shift and go to state 10
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 6

    (3) ESTRUCTURAMAIN -> main DOSPUNTOS . PRECUERPO
    (6) ESTRUCTURAMAIN -> main DOSPUNTOS . error
    (7) PRECUERPO -> . PRECUERPO CUERPO
    (8) PRECUERPO -> . CUERPO
    (9) CUERPO -> . ETIQUETA
    (10) CUERPO -> . GOTO_LABEL
    (11) CUERPO -> . ASIGNACION
    (12) CUERPO -> . DESTRUYE_VARIABLE
    (13) CUERPO -> . IMPRIME
    (14) CUERPO -> . ESTRUCTURA_IF
    (15) CUERPO -> . EXIT
    (24) ETIQUETA -> . ID DOSPUNTOS PRECUERPOE
    (25) ETIQUETA -> . error DOSPUNTOS PRECUERPOE
    (26) GOTO_LABEL -> . goto ID PTCOMA
    (27) ASIGNACION -> . NORMAL PTCOMA
    (28) ASIGNACION -> . ARRAY PTCOMA
    (80) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (81) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (79) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (82) EXIT -> . exit PTCOMA
    (29) NORMAL -> . VARIABLE IGUAL EXPRESION
    (30) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    error           shift and go to state 28
    ID              shift and go to state 18
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    PRECUERPO                      shift and go to state 27
    CUERPO                         shift and go to state 10
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 7

    (5) ESTRUCTURAMAIN -> main error . PRECUERPO
    (7) PRECUERPO -> . PRECUERPO CUERPO
    (8) PRECUERPO -> . CUERPO
    (9) CUERPO -> . ETIQUETA
    (10) CUERPO -> . GOTO_LABEL
    (11) CUERPO -> . ASIGNACION
    (12) CUERPO -> . DESTRUYE_VARIABLE
    (13) CUERPO -> . IMPRIME
    (14) CUERPO -> . ESTRUCTURA_IF
    (15) CUERPO -> . EXIT
    (24) ETIQUETA -> . ID DOSPUNTOS PRECUERPOE
    (25) ETIQUETA -> . error DOSPUNTOS PRECUERPOE
    (26) GOTO_LABEL -> . goto ID PTCOMA
    (27) ASIGNACION -> . NORMAL PTCOMA
    (28) ASIGNACION -> . ARRAY PTCOMA
    (80) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (81) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (79) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (82) EXIT -> . exit PTCOMA
    (29) NORMAL -> . VARIABLE IGUAL EXPRESION
    (30) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    ID              shift and go to state 18
    error           shift and go to state 8
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    PRECUERPO                      shift and go to state 29
    CUERPO                         shift and go to state 10
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 8

    (25) ETIQUETA -> error . DOSPUNTOS PRECUERPOE

    DOSPUNTOS       shift and go to state 30


state 9

    (4) ESTRUCTURAMAIN -> error DOSPUNTOS PRECUERPO .
    (7) PRECUERPO -> PRECUERPO . CUERPO
    (9) CUERPO -> . ETIQUETA
    (10) CUERPO -> . GOTO_LABEL
    (11) CUERPO -> . ASIGNACION
    (12) CUERPO -> . DESTRUYE_VARIABLE
    (13) CUERPO -> . IMPRIME
    (14) CUERPO -> . ESTRUCTURA_IF
    (15) CUERPO -> . EXIT
    (24) ETIQUETA -> . ID DOSPUNTOS PRECUERPOE
    (25) ETIQUETA -> . error DOSPUNTOS PRECUERPOE
    (26) GOTO_LABEL -> . goto ID PTCOMA
    (27) ASIGNACION -> . NORMAL PTCOMA
    (28) ASIGNACION -> . ARRAY PTCOMA
    (80) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (81) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (79) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (82) EXIT -> . exit PTCOMA
    (29) NORMAL -> . VARIABLE IGUAL EXPRESION
    (30) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    $end            reduce using rule 4 (ESTRUCTURAMAIN -> error DOSPUNTOS PRECUERPO .)
    ID              shift and go to state 18
    error           shift and go to state 8
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    CUERPO                         shift and go to state 31
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 10

    (8) PRECUERPO -> CUERPO .

    ID              reduce using rule 8 (PRECUERPO -> CUERPO .)
    error           reduce using rule 8 (PRECUERPO -> CUERPO .)
    goto            reduce using rule 8 (PRECUERPO -> CUERPO .)
    unset           reduce using rule 8 (PRECUERPO -> CUERPO .)
    print           reduce using rule 8 (PRECUERPO -> CUERPO .)
    if              reduce using rule 8 (PRECUERPO -> CUERPO .)
    exit            reduce using rule 8 (PRECUERPO -> CUERPO .)
    VARIABLE        reduce using rule 8 (PRECUERPO -> CUERPO .)
    $end            reduce using rule 8 (PRECUERPO -> CUERPO .)


state 11

    (9) CUERPO -> ETIQUETA .

    ID              reduce using rule 9 (CUERPO -> ETIQUETA .)
    error           reduce using rule 9 (CUERPO -> ETIQUETA .)
    goto            reduce using rule 9 (CUERPO -> ETIQUETA .)
    unset           reduce using rule 9 (CUERPO -> ETIQUETA .)
    print           reduce using rule 9 (CUERPO -> ETIQUETA .)
    if              reduce using rule 9 (CUERPO -> ETIQUETA .)
    exit            reduce using rule 9 (CUERPO -> ETIQUETA .)
    VARIABLE        reduce using rule 9 (CUERPO -> ETIQUETA .)
    $end            reduce using rule 9 (CUERPO -> ETIQUETA .)


state 12

    (10) CUERPO -> GOTO_LABEL .

    ID              reduce using rule 10 (CUERPO -> GOTO_LABEL .)
    error           reduce using rule 10 (CUERPO -> GOTO_LABEL .)
    goto            reduce using rule 10 (CUERPO -> GOTO_LABEL .)
    unset           reduce using rule 10 (CUERPO -> GOTO_LABEL .)
    print           reduce using rule 10 (CUERPO -> GOTO_LABEL .)
    if              reduce using rule 10 (CUERPO -> GOTO_LABEL .)
    exit            reduce using rule 10 (CUERPO -> GOTO_LABEL .)
    VARIABLE        reduce using rule 10 (CUERPO -> GOTO_LABEL .)
    $end            reduce using rule 10 (CUERPO -> GOTO_LABEL .)


state 13

    (11) CUERPO -> ASIGNACION .

    ID              reduce using rule 11 (CUERPO -> ASIGNACION .)
    error           reduce using rule 11 (CUERPO -> ASIGNACION .)
    goto            reduce using rule 11 (CUERPO -> ASIGNACION .)
    unset           reduce using rule 11 (CUERPO -> ASIGNACION .)
    print           reduce using rule 11 (CUERPO -> ASIGNACION .)
    if              reduce using rule 11 (CUERPO -> ASIGNACION .)
    exit            reduce using rule 11 (CUERPO -> ASIGNACION .)
    VARIABLE        reduce using rule 11 (CUERPO -> ASIGNACION .)
    $end            reduce using rule 11 (CUERPO -> ASIGNACION .)


state 14

    (12) CUERPO -> DESTRUYE_VARIABLE .

    ID              reduce using rule 12 (CUERPO -> DESTRUYE_VARIABLE .)
    error           reduce using rule 12 (CUERPO -> DESTRUYE_VARIABLE .)
    goto            reduce using rule 12 (CUERPO -> DESTRUYE_VARIABLE .)
    unset           reduce using rule 12 (CUERPO -> DESTRUYE_VARIABLE .)
    print           reduce using rule 12 (CUERPO -> DESTRUYE_VARIABLE .)
    if              reduce using rule 12 (CUERPO -> DESTRUYE_VARIABLE .)
    exit            reduce using rule 12 (CUERPO -> DESTRUYE_VARIABLE .)
    VARIABLE        reduce using rule 12 (CUERPO -> DESTRUYE_VARIABLE .)
    $end            reduce using rule 12 (CUERPO -> DESTRUYE_VARIABLE .)


state 15

    (13) CUERPO -> IMPRIME .

    ID              reduce using rule 13 (CUERPO -> IMPRIME .)
    error           reduce using rule 13 (CUERPO -> IMPRIME .)
    goto            reduce using rule 13 (CUERPO -> IMPRIME .)
    unset           reduce using rule 13 (CUERPO -> IMPRIME .)
    print           reduce using rule 13 (CUERPO -> IMPRIME .)
    if              reduce using rule 13 (CUERPO -> IMPRIME .)
    exit            reduce using rule 13 (CUERPO -> IMPRIME .)
    VARIABLE        reduce using rule 13 (CUERPO -> IMPRIME .)
    $end            reduce using rule 13 (CUERPO -> IMPRIME .)


state 16

    (14) CUERPO -> ESTRUCTURA_IF .

    ID              reduce using rule 14 (CUERPO -> ESTRUCTURA_IF .)
    error           reduce using rule 14 (CUERPO -> ESTRUCTURA_IF .)
    goto            reduce using rule 14 (CUERPO -> ESTRUCTURA_IF .)
    unset           reduce using rule 14 (CUERPO -> ESTRUCTURA_IF .)
    print           reduce using rule 14 (CUERPO -> ESTRUCTURA_IF .)
    if              reduce using rule 14 (CUERPO -> ESTRUCTURA_IF .)
    exit            reduce using rule 14 (CUERPO -> ESTRUCTURA_IF .)
    VARIABLE        reduce using rule 14 (CUERPO -> ESTRUCTURA_IF .)
    $end            reduce using rule 14 (CUERPO -> ESTRUCTURA_IF .)


state 17

    (15) CUERPO -> EXIT .

    ID              reduce using rule 15 (CUERPO -> EXIT .)
    error           reduce using rule 15 (CUERPO -> EXIT .)
    goto            reduce using rule 15 (CUERPO -> EXIT .)
    unset           reduce using rule 15 (CUERPO -> EXIT .)
    print           reduce using rule 15 (CUERPO -> EXIT .)
    if              reduce using rule 15 (CUERPO -> EXIT .)
    exit            reduce using rule 15 (CUERPO -> EXIT .)
    VARIABLE        reduce using rule 15 (CUERPO -> EXIT .)
    $end            reduce using rule 15 (CUERPO -> EXIT .)


state 18

    (24) ETIQUETA -> ID . DOSPUNTOS PRECUERPOE

    DOSPUNTOS       shift and go to state 32


state 19

    (26) GOTO_LABEL -> goto . ID PTCOMA

    ID              shift and go to state 33


state 20

    (27) ASIGNACION -> NORMAL . PTCOMA

    PTCOMA          shift and go to state 34


state 21

    (28) ASIGNACION -> ARRAY . PTCOMA

    PTCOMA          shift and go to state 35


state 22

    (80) DESTRUYE_VARIABLE -> unset . PARA VALOR PARB PTCOMA

    PARA            shift and go to state 36


state 23

    (81) IMPRIME -> print . PARA EXPRESION PARB PTCOMA

    PARA            shift and go to state 37


state 24

    (79) ESTRUCTURA_IF -> if . PARA EXPRESION PARB goto ID PTCOMA

    PARA            shift and go to state 38


state 25

    (82) EXIT -> exit . PTCOMA

    PTCOMA          shift and go to state 39


state 26

    (29) NORMAL -> VARIABLE . IGUAL EXPRESION
    (30) ARRAY -> VARIABLE . LISTA_POS IGUAL EXPRESION
    (69) LISTA_POS -> . LISTA_POS POS
    (70) LISTA_POS -> . POS
    (71) POS -> . CORA VALOR CORB

    IGUAL           shift and go to state 40
    CORA            shift and go to state 43

    LISTA_POS                      shift and go to state 41
    POS                            shift and go to state 42

state 27

    (3) ESTRUCTURAMAIN -> main DOSPUNTOS PRECUERPO .
    (7) PRECUERPO -> PRECUERPO . CUERPO
    (9) CUERPO -> . ETIQUETA
    (10) CUERPO -> . GOTO_LABEL
    (11) CUERPO -> . ASIGNACION
    (12) CUERPO -> . DESTRUYE_VARIABLE
    (13) CUERPO -> . IMPRIME
    (14) CUERPO -> . ESTRUCTURA_IF
    (15) CUERPO -> . EXIT
    (24) ETIQUETA -> . ID DOSPUNTOS PRECUERPOE
    (25) ETIQUETA -> . error DOSPUNTOS PRECUERPOE
    (26) GOTO_LABEL -> . goto ID PTCOMA
    (27) ASIGNACION -> . NORMAL PTCOMA
    (28) ASIGNACION -> . ARRAY PTCOMA
    (80) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (81) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (79) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (82) EXIT -> . exit PTCOMA
    (29) NORMAL -> . VARIABLE IGUAL EXPRESION
    (30) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    $end            reduce using rule 3 (ESTRUCTURAMAIN -> main DOSPUNTOS PRECUERPO .)
    ID              shift and go to state 18
    error           shift and go to state 8
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    CUERPO                         shift and go to state 31
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 28

    (6) ESTRUCTURAMAIN -> main DOSPUNTOS error .
    (25) ETIQUETA -> error . DOSPUNTOS PRECUERPOE

    $end            reduce using rule 6 (ESTRUCTURAMAIN -> main DOSPUNTOS error .)
    DOSPUNTOS       shift and go to state 30


state 29

    (5) ESTRUCTURAMAIN -> main error PRECUERPO .
    (7) PRECUERPO -> PRECUERPO . CUERPO
    (9) CUERPO -> . ETIQUETA
    (10) CUERPO -> . GOTO_LABEL
    (11) CUERPO -> . ASIGNACION
    (12) CUERPO -> . DESTRUYE_VARIABLE
    (13) CUERPO -> . IMPRIME
    (14) CUERPO -> . ESTRUCTURA_IF
    (15) CUERPO -> . EXIT
    (24) ETIQUETA -> . ID DOSPUNTOS PRECUERPOE
    (25) ETIQUETA -> . error DOSPUNTOS PRECUERPOE
    (26) GOTO_LABEL -> . goto ID PTCOMA
    (27) ASIGNACION -> . NORMAL PTCOMA
    (28) ASIGNACION -> . ARRAY PTCOMA
    (80) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (81) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (79) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (82) EXIT -> . exit PTCOMA
    (29) NORMAL -> . VARIABLE IGUAL EXPRESION
    (30) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    $end            reduce using rule 5 (ESTRUCTURAMAIN -> main error PRECUERPO .)
    ID              shift and go to state 18
    error           shift and go to state 8
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    CUERPO                         shift and go to state 31
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 30

    (25) ETIQUETA -> error DOSPUNTOS . PRECUERPOE
    (16) PRECUERPOE -> . PRECUERPOE CUERPOE
    (17) PRECUERPOE -> . CUERPOE
    (18) CUERPOE -> . GOTO_LABEL
    (19) CUERPOE -> . ASIGNACION
    (20) CUERPOE -> . DESTRUYE_VARIABLE
    (21) CUERPOE -> . IMPRIME
    (22) CUERPOE -> . ESTRUCTURA_IF
    (23) CUERPOE -> . EXIT
    (26) GOTO_LABEL -> . goto ID PTCOMA
    (27) ASIGNACION -> . NORMAL PTCOMA
    (28) ASIGNACION -> . ARRAY PTCOMA
    (80) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (81) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (79) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (82) EXIT -> . exit PTCOMA
    (29) NORMAL -> . VARIABLE IGUAL EXPRESION
    (30) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    PRECUERPOE                     shift and go to state 44
    CUERPOE                        shift and go to state 45
    GOTO_LABEL                     shift and go to state 46
    ASIGNACION                     shift and go to state 47
    DESTRUYE_VARIABLE              shift and go to state 48
    IMPRIME                        shift and go to state 49
    ESTRUCTURA_IF                  shift and go to state 50
    EXIT                           shift and go to state 51
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 31

    (7) PRECUERPO -> PRECUERPO CUERPO .

    ID              reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)
    error           reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)
    goto            reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)
    unset           reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)
    print           reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)
    if              reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)
    exit            reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)
    VARIABLE        reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)
    $end            reduce using rule 7 (PRECUERPO -> PRECUERPO CUERPO .)


state 32

    (24) ETIQUETA -> ID DOSPUNTOS . PRECUERPOE
    (16) PRECUERPOE -> . PRECUERPOE CUERPOE
    (17) PRECUERPOE -> . CUERPOE
    (18) CUERPOE -> . GOTO_LABEL
    (19) CUERPOE -> . ASIGNACION
    (20) CUERPOE -> . DESTRUYE_VARIABLE
    (21) CUERPOE -> . IMPRIME
    (22) CUERPOE -> . ESTRUCTURA_IF
    (23) CUERPOE -> . EXIT
    (26) GOTO_LABEL -> . goto ID PTCOMA
    (27) ASIGNACION -> . NORMAL PTCOMA
    (28) ASIGNACION -> . ARRAY PTCOMA
    (80) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (81) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (79) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (82) EXIT -> . exit PTCOMA
    (29) NORMAL -> . VARIABLE IGUAL EXPRESION
    (30) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

    PRECUERPOE                     shift and go to state 52
    CUERPOE                        shift and go to state 45
    GOTO_LABEL                     shift and go to state 46
    ASIGNACION                     shift and go to state 47
    DESTRUYE_VARIABLE              shift and go to state 48
    IMPRIME                        shift and go to state 49
    ESTRUCTURA_IF                  shift and go to state 50
    EXIT                           shift and go to state 51
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 33

    (26) GOTO_LABEL -> goto ID . PTCOMA

    PTCOMA          shift and go to state 53


state 34

    (27) ASIGNACION -> NORMAL PTCOMA .

    ID              reduce using rule 27 (ASIGNACION -> NORMAL PTCOMA .)
    error           reduce using rule 27 (ASIGNACION -> NORMAL PTCOMA .)
    goto            reduce using rule 27 (ASIGNACION -> NORMAL PTCOMA .)
    unset           reduce using rule 27 (ASIGNACION -> NORMAL PTCOMA .)
    print           reduce using rule 27 (ASIGNACION -> NORMAL PTCOMA .)
    if              reduce using rule 27 (ASIGNACION -> NORMAL PTCOMA .)
    exit            reduce using rule 27 (ASIGNACION -> NORMAL PTCOMA .)
    VARIABLE        reduce using rule 27 (ASIGNACION -> NORMAL PTCOMA .)
    $end            reduce using rule 27 (ASIGNACION -> NORMAL PTCOMA .)


state 35

    (28) ASIGNACION -> ARRAY PTCOMA .

    ID              reduce using rule 28 (ASIGNACION -> ARRAY PTCOMA .)
    error           reduce using rule 28 (ASIGNACION -> ARRAY PTCOMA .)
    goto            reduce using rule 28 (ASIGNACION -> ARRAY PTCOMA .)
    unset           reduce using rule 28 (ASIGNACION -> ARRAY PTCOMA .)
    print           reduce using rule 28 (ASIGNACION -> ARRAY PTCOMA .)
    if              reduce using rule 28 (ASIGNACION -> ARRAY PTCOMA .)
    exit            reduce using rule 28 (ASIGNACION -> ARRAY PTCOMA .)
    VARIABLE        reduce using rule 28 (ASIGNACION -> ARRAY PTCOMA .)
    $end            reduce using rule 28 (ASIGNACION -> ARRAY PTCOMA .)


state 36

    (80) DESTRUYE_VARIABLE -> unset PARA . VALOR PARB PTCOMA
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 54
    LLAMADA_ARREGLO                shift and go to state 56

state 37

    (81) IMPRIME -> print PARA . EXPRESION PARB PTCOMA
    (31) EXPRESION -> . VALOR
    (32) EXPRESION -> . error
    (33) EXPRESION -> . PARA EXPRESION PARB
    (41) EXPRESION -> . ARITMETICAS
    (49) EXPRESION -> . LOGICAS
    (54) EXPRESION -> . RELACIONAL
    (61) EXPRESION -> . BIT
    (72) EXPRESION -> . CONVERSION
    (77) EXPRESION -> . PUNTERO
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (42) ARITMETICAS -> . MENOS VALOR
    (43) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (44) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (45) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (47) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (48) ARITMETICAS -> . abs PARA EXPRESION PARB
    (50) LOGICAS -> . NOTL VALOR
    (51) LOGICAS -> . VALOR ANDL VALOR
    (52) LOGICAS -> . VALOR ORL VALOR
    (53) LOGICAS -> . VALOR XORL VALOR
    (55) RELACIONAL -> . VALOR IGUALR VALOR
    (56) RELACIONAL -> . VALOR NOIGUALR VALOR
    (57) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (58) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (59) RELACIONAL -> . VALOR MAYORR VALOR
    (60) RELACIONAL -> . VALOR MENORR VALOR
    (62) BIT -> . NOTB VALOR
    (63) BIT -> . VALOR ANDB VALOR
    (64) BIT -> . VALOR ORB VALOR
    (65) BIT -> . VALOR XORB VALOR
    (66) BIT -> . VALOR MENORR MENORR VALOR
    (67) BIT -> . VALOR MAYORR MAYORR VALOR
    (73) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (78) PUNTERO -> . ANDB VARIABLE
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 65
    PARA            shift and go to state 62
    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61
    MENOS           shift and go to state 72
    abs             shift and go to state 73
    NOTL            shift and go to state 74
    NOTB            shift and go to state 75
    ANDB            shift and go to state 76

    EXPRESION                      shift and go to state 63
    VALOR                          shift and go to state 64
    ARITMETICAS                    shift and go to state 66
    LOGICAS                        shift and go to state 67
    RELACIONAL                     shift and go to state 68
    BIT                            shift and go to state 69
    CONVERSION                     shift and go to state 70
    PUNTERO                        shift and go to state 71
    LLAMADA_ARREGLO                shift and go to state 56

state 38

    (79) ESTRUCTURA_IF -> if PARA . EXPRESION PARB goto ID PTCOMA
    (31) EXPRESION -> . VALOR
    (32) EXPRESION -> . error
    (33) EXPRESION -> . PARA EXPRESION PARB
    (41) EXPRESION -> . ARITMETICAS
    (49) EXPRESION -> . LOGICAS
    (54) EXPRESION -> . RELACIONAL
    (61) EXPRESION -> . BIT
    (72) EXPRESION -> . CONVERSION
    (77) EXPRESION -> . PUNTERO
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (42) ARITMETICAS -> . MENOS VALOR
    (43) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (44) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (45) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (47) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (48) ARITMETICAS -> . abs PARA EXPRESION PARB
    (50) LOGICAS -> . NOTL VALOR
    (51) LOGICAS -> . VALOR ANDL VALOR
    (52) LOGICAS -> . VALOR ORL VALOR
    (53) LOGICAS -> . VALOR XORL VALOR
    (55) RELACIONAL -> . VALOR IGUALR VALOR
    (56) RELACIONAL -> . VALOR NOIGUALR VALOR
    (57) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (58) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (59) RELACIONAL -> . VALOR MAYORR VALOR
    (60) RELACIONAL -> . VALOR MENORR VALOR
    (62) BIT -> . NOTB VALOR
    (63) BIT -> . VALOR ANDB VALOR
    (64) BIT -> . VALOR ORB VALOR
    (65) BIT -> . VALOR XORB VALOR
    (66) BIT -> . VALOR MENORR MENORR VALOR
    (67) BIT -> . VALOR MAYORR MAYORR VALOR
    (73) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (78) PUNTERO -> . ANDB VARIABLE
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 65
    PARA            shift and go to state 62
    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61
    MENOS           shift and go to state 72
    abs             shift and go to state 73
    NOTL            shift and go to state 74
    NOTB            shift and go to state 75
    ANDB            shift and go to state 76

    EXPRESION                      shift and go to state 77
    VALOR                          shift and go to state 64
    ARITMETICAS                    shift and go to state 66
    LOGICAS                        shift and go to state 67
    RELACIONAL                     shift and go to state 68
    BIT                            shift and go to state 69
    CONVERSION                     shift and go to state 70
    PUNTERO                        shift and go to state 71
    LLAMADA_ARREGLO                shift and go to state 56

state 39

    (82) EXIT -> exit PTCOMA .

    ID              reduce using rule 82 (EXIT -> exit PTCOMA .)
    error           reduce using rule 82 (EXIT -> exit PTCOMA .)
    goto            reduce using rule 82 (EXIT -> exit PTCOMA .)
    unset           reduce using rule 82 (EXIT -> exit PTCOMA .)
    print           reduce using rule 82 (EXIT -> exit PTCOMA .)
    if              reduce using rule 82 (EXIT -> exit PTCOMA .)
    exit            reduce using rule 82 (EXIT -> exit PTCOMA .)
    VARIABLE        reduce using rule 82 (EXIT -> exit PTCOMA .)
    $end            reduce using rule 82 (EXIT -> exit PTCOMA .)


state 40

    (29) NORMAL -> VARIABLE IGUAL . EXPRESION
    (31) EXPRESION -> . VALOR
    (32) EXPRESION -> . error
    (33) EXPRESION -> . PARA EXPRESION PARB
    (41) EXPRESION -> . ARITMETICAS
    (49) EXPRESION -> . LOGICAS
    (54) EXPRESION -> . RELACIONAL
    (61) EXPRESION -> . BIT
    (72) EXPRESION -> . CONVERSION
    (77) EXPRESION -> . PUNTERO
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (42) ARITMETICAS -> . MENOS VALOR
    (43) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (44) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (45) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (47) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (48) ARITMETICAS -> . abs PARA EXPRESION PARB
    (50) LOGICAS -> . NOTL VALOR
    (51) LOGICAS -> . VALOR ANDL VALOR
    (52) LOGICAS -> . VALOR ORL VALOR
    (53) LOGICAS -> . VALOR XORL VALOR
    (55) RELACIONAL -> . VALOR IGUALR VALOR
    (56) RELACIONAL -> . VALOR NOIGUALR VALOR
    (57) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (58) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (59) RELACIONAL -> . VALOR MAYORR VALOR
    (60) RELACIONAL -> . VALOR MENORR VALOR
    (62) BIT -> . NOTB VALOR
    (63) BIT -> . VALOR ANDB VALOR
    (64) BIT -> . VALOR ORB VALOR
    (65) BIT -> . VALOR XORB VALOR
    (66) BIT -> . VALOR MENORR MENORR VALOR
    (67) BIT -> . VALOR MAYORR MAYORR VALOR
    (73) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (78) PUNTERO -> . ANDB VARIABLE
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 65
    PARA            shift and go to state 62
    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61
    MENOS           shift and go to state 72
    abs             shift and go to state 73
    NOTL            shift and go to state 74
    NOTB            shift and go to state 75
    ANDB            shift and go to state 76

    EXPRESION                      shift and go to state 78
    VALOR                          shift and go to state 64
    ARITMETICAS                    shift and go to state 66
    LOGICAS                        shift and go to state 67
    RELACIONAL                     shift and go to state 68
    BIT                            shift and go to state 69
    CONVERSION                     shift and go to state 70
    PUNTERO                        shift and go to state 71
    LLAMADA_ARREGLO                shift and go to state 56

state 41

    (30) ARRAY -> VARIABLE LISTA_POS . IGUAL EXPRESION
    (69) LISTA_POS -> LISTA_POS . POS
    (71) POS -> . CORA VALOR CORB

    IGUAL           shift and go to state 79
    CORA            shift and go to state 43

    POS                            shift and go to state 80

state 42

    (70) LISTA_POS -> POS .

    IGUAL           reduce using rule 70 (LISTA_POS -> POS .)
    CORA            reduce using rule 70 (LISTA_POS -> POS .)
    PARB            reduce using rule 70 (LISTA_POS -> POS .)
    ANDL            reduce using rule 70 (LISTA_POS -> POS .)
    ORL             reduce using rule 70 (LISTA_POS -> POS .)
    XORL            reduce using rule 70 (LISTA_POS -> POS .)
    IGUALR          reduce using rule 70 (LISTA_POS -> POS .)
    NOIGUALR        reduce using rule 70 (LISTA_POS -> POS .)
    MAYORR          reduce using rule 70 (LISTA_POS -> POS .)
    MENORR          reduce using rule 70 (LISTA_POS -> POS .)
    ANDB            reduce using rule 70 (LISTA_POS -> POS .)
    ORB             reduce using rule 70 (LISTA_POS -> POS .)
    XORB            reduce using rule 70 (LISTA_POS -> POS .)
    MAS             reduce using rule 70 (LISTA_POS -> POS .)
    MENOS           reduce using rule 70 (LISTA_POS -> POS .)
    MULTIPLICACION  reduce using rule 70 (LISTA_POS -> POS .)
    DIVIDIR         reduce using rule 70 (LISTA_POS -> POS .)
    RESIDUO         reduce using rule 70 (LISTA_POS -> POS .)
    PTCOMA          reduce using rule 70 (LISTA_POS -> POS .)
    CORB            reduce using rule 70 (LISTA_POS -> POS .)


state 43

    (71) POS -> CORA . VALOR CORB
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 81
    LLAMADA_ARREGLO                shift and go to state 56

state 44

    (25) ETIQUETA -> error DOSPUNTOS PRECUERPOE .
    (16) PRECUERPOE -> PRECUERPOE . CUERPOE
    (18) CUERPOE -> . GOTO_LABEL
    (19) CUERPOE -> . ASIGNACION
    (20) CUERPOE -> . DESTRUYE_VARIABLE
    (21) CUERPOE -> . IMPRIME
    (22) CUERPOE -> . ESTRUCTURA_IF
    (23) CUERPOE -> . EXIT
    (26) GOTO_LABEL -> . goto ID PTCOMA
    (27) ASIGNACION -> . NORMAL PTCOMA
    (28) ASIGNACION -> . ARRAY PTCOMA
    (80) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (81) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (79) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (82) EXIT -> . exit PTCOMA
    (29) NORMAL -> . VARIABLE IGUAL EXPRESION
    (30) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

  ! shift/reduce conflict for goto resolved as shift
  ! shift/reduce conflict for unset resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for exit resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    ID              reduce using rule 25 (ETIQUETA -> error DOSPUNTOS PRECUERPOE .)
    error           reduce using rule 25 (ETIQUETA -> error DOSPUNTOS PRECUERPOE .)
    $end            reduce using rule 25 (ETIQUETA -> error DOSPUNTOS PRECUERPOE .)
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

  ! goto            [ reduce using rule 25 (ETIQUETA -> error DOSPUNTOS PRECUERPOE .) ]
  ! unset           [ reduce using rule 25 (ETIQUETA -> error DOSPUNTOS PRECUERPOE .) ]
  ! print           [ reduce using rule 25 (ETIQUETA -> error DOSPUNTOS PRECUERPOE .) ]
  ! if              [ reduce using rule 25 (ETIQUETA -> error DOSPUNTOS PRECUERPOE .) ]
  ! exit            [ reduce using rule 25 (ETIQUETA -> error DOSPUNTOS PRECUERPOE .) ]
  ! VARIABLE        [ reduce using rule 25 (ETIQUETA -> error DOSPUNTOS PRECUERPOE .) ]

    CUERPOE                        shift and go to state 82
    GOTO_LABEL                     shift and go to state 46
    ASIGNACION                     shift and go to state 47
    DESTRUYE_VARIABLE              shift and go to state 48
    IMPRIME                        shift and go to state 49
    ESTRUCTURA_IF                  shift and go to state 50
    EXIT                           shift and go to state 51
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 45

    (17) PRECUERPOE -> CUERPOE .

    goto            reduce using rule 17 (PRECUERPOE -> CUERPOE .)
    unset           reduce using rule 17 (PRECUERPOE -> CUERPOE .)
    print           reduce using rule 17 (PRECUERPOE -> CUERPOE .)
    if              reduce using rule 17 (PRECUERPOE -> CUERPOE .)
    exit            reduce using rule 17 (PRECUERPOE -> CUERPOE .)
    VARIABLE        reduce using rule 17 (PRECUERPOE -> CUERPOE .)
    ID              reduce using rule 17 (PRECUERPOE -> CUERPOE .)
    error           reduce using rule 17 (PRECUERPOE -> CUERPOE .)
    $end            reduce using rule 17 (PRECUERPOE -> CUERPOE .)


state 46

    (18) CUERPOE -> GOTO_LABEL .

    goto            reduce using rule 18 (CUERPOE -> GOTO_LABEL .)
    unset           reduce using rule 18 (CUERPOE -> GOTO_LABEL .)
    print           reduce using rule 18 (CUERPOE -> GOTO_LABEL .)
    if              reduce using rule 18 (CUERPOE -> GOTO_LABEL .)
    exit            reduce using rule 18 (CUERPOE -> GOTO_LABEL .)
    VARIABLE        reduce using rule 18 (CUERPOE -> GOTO_LABEL .)
    ID              reduce using rule 18 (CUERPOE -> GOTO_LABEL .)
    error           reduce using rule 18 (CUERPOE -> GOTO_LABEL .)
    $end            reduce using rule 18 (CUERPOE -> GOTO_LABEL .)


state 47

    (19) CUERPOE -> ASIGNACION .

    goto            reduce using rule 19 (CUERPOE -> ASIGNACION .)
    unset           reduce using rule 19 (CUERPOE -> ASIGNACION .)
    print           reduce using rule 19 (CUERPOE -> ASIGNACION .)
    if              reduce using rule 19 (CUERPOE -> ASIGNACION .)
    exit            reduce using rule 19 (CUERPOE -> ASIGNACION .)
    VARIABLE        reduce using rule 19 (CUERPOE -> ASIGNACION .)
    ID              reduce using rule 19 (CUERPOE -> ASIGNACION .)
    error           reduce using rule 19 (CUERPOE -> ASIGNACION .)
    $end            reduce using rule 19 (CUERPOE -> ASIGNACION .)


state 48

    (20) CUERPOE -> DESTRUYE_VARIABLE .

    goto            reduce using rule 20 (CUERPOE -> DESTRUYE_VARIABLE .)
    unset           reduce using rule 20 (CUERPOE -> DESTRUYE_VARIABLE .)
    print           reduce using rule 20 (CUERPOE -> DESTRUYE_VARIABLE .)
    if              reduce using rule 20 (CUERPOE -> DESTRUYE_VARIABLE .)
    exit            reduce using rule 20 (CUERPOE -> DESTRUYE_VARIABLE .)
    VARIABLE        reduce using rule 20 (CUERPOE -> DESTRUYE_VARIABLE .)
    ID              reduce using rule 20 (CUERPOE -> DESTRUYE_VARIABLE .)
    error           reduce using rule 20 (CUERPOE -> DESTRUYE_VARIABLE .)
    $end            reduce using rule 20 (CUERPOE -> DESTRUYE_VARIABLE .)


state 49

    (21) CUERPOE -> IMPRIME .

    goto            reduce using rule 21 (CUERPOE -> IMPRIME .)
    unset           reduce using rule 21 (CUERPOE -> IMPRIME .)
    print           reduce using rule 21 (CUERPOE -> IMPRIME .)
    if              reduce using rule 21 (CUERPOE -> IMPRIME .)
    exit            reduce using rule 21 (CUERPOE -> IMPRIME .)
    VARIABLE        reduce using rule 21 (CUERPOE -> IMPRIME .)
    ID              reduce using rule 21 (CUERPOE -> IMPRIME .)
    error           reduce using rule 21 (CUERPOE -> IMPRIME .)
    $end            reduce using rule 21 (CUERPOE -> IMPRIME .)


state 50

    (22) CUERPOE -> ESTRUCTURA_IF .

    goto            reduce using rule 22 (CUERPOE -> ESTRUCTURA_IF .)
    unset           reduce using rule 22 (CUERPOE -> ESTRUCTURA_IF .)
    print           reduce using rule 22 (CUERPOE -> ESTRUCTURA_IF .)
    if              reduce using rule 22 (CUERPOE -> ESTRUCTURA_IF .)
    exit            reduce using rule 22 (CUERPOE -> ESTRUCTURA_IF .)
    VARIABLE        reduce using rule 22 (CUERPOE -> ESTRUCTURA_IF .)
    ID              reduce using rule 22 (CUERPOE -> ESTRUCTURA_IF .)
    error           reduce using rule 22 (CUERPOE -> ESTRUCTURA_IF .)
    $end            reduce using rule 22 (CUERPOE -> ESTRUCTURA_IF .)


state 51

    (23) CUERPOE -> EXIT .

    goto            reduce using rule 23 (CUERPOE -> EXIT .)
    unset           reduce using rule 23 (CUERPOE -> EXIT .)
    print           reduce using rule 23 (CUERPOE -> EXIT .)
    if              reduce using rule 23 (CUERPOE -> EXIT .)
    exit            reduce using rule 23 (CUERPOE -> EXIT .)
    VARIABLE        reduce using rule 23 (CUERPOE -> EXIT .)
    ID              reduce using rule 23 (CUERPOE -> EXIT .)
    error           reduce using rule 23 (CUERPOE -> EXIT .)
    $end            reduce using rule 23 (CUERPOE -> EXIT .)


state 52

    (24) ETIQUETA -> ID DOSPUNTOS PRECUERPOE .
    (16) PRECUERPOE -> PRECUERPOE . CUERPOE
    (18) CUERPOE -> . GOTO_LABEL
    (19) CUERPOE -> . ASIGNACION
    (20) CUERPOE -> . DESTRUYE_VARIABLE
    (21) CUERPOE -> . IMPRIME
    (22) CUERPOE -> . ESTRUCTURA_IF
    (23) CUERPOE -> . EXIT
    (26) GOTO_LABEL -> . goto ID PTCOMA
    (27) ASIGNACION -> . NORMAL PTCOMA
    (28) ASIGNACION -> . ARRAY PTCOMA
    (80) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (81) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (79) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (82) EXIT -> . exit PTCOMA
    (29) NORMAL -> . VARIABLE IGUAL EXPRESION
    (30) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

  ! shift/reduce conflict for goto resolved as shift
  ! shift/reduce conflict for unset resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for exit resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    ID              reduce using rule 24 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE .)
    error           reduce using rule 24 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE .)
    $end            reduce using rule 24 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE .)
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

  ! goto            [ reduce using rule 24 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE .) ]
  ! unset           [ reduce using rule 24 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE .) ]
  ! print           [ reduce using rule 24 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE .) ]
  ! if              [ reduce using rule 24 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE .) ]
  ! exit            [ reduce using rule 24 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE .) ]
  ! VARIABLE        [ reduce using rule 24 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE .) ]

    CUERPOE                        shift and go to state 82
    GOTO_LABEL                     shift and go to state 46
    ASIGNACION                     shift and go to state 47
    DESTRUYE_VARIABLE              shift and go to state 48
    IMPRIME                        shift and go to state 49
    ESTRUCTURA_IF                  shift and go to state 50
    EXIT                           shift and go to state 51
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 53

    (26) GOTO_LABEL -> goto ID PTCOMA .

    ID              reduce using rule 26 (GOTO_LABEL -> goto ID PTCOMA .)
    error           reduce using rule 26 (GOTO_LABEL -> goto ID PTCOMA .)
    goto            reduce using rule 26 (GOTO_LABEL -> goto ID PTCOMA .)
    unset           reduce using rule 26 (GOTO_LABEL -> goto ID PTCOMA .)
    print           reduce using rule 26 (GOTO_LABEL -> goto ID PTCOMA .)
    if              reduce using rule 26 (GOTO_LABEL -> goto ID PTCOMA .)
    exit            reduce using rule 26 (GOTO_LABEL -> goto ID PTCOMA .)
    VARIABLE        reduce using rule 26 (GOTO_LABEL -> goto ID PTCOMA .)
    $end            reduce using rule 26 (GOTO_LABEL -> goto ID PTCOMA .)


state 54

    (80) DESTRUYE_VARIABLE -> unset PARA VALOR . PARB PTCOMA

    PARB            shift and go to state 83


state 55

    (34) VALOR -> VARIABLE .
    (68) LLAMADA_ARREGLO -> VARIABLE . LISTA_POS
    (69) LISTA_POS -> . LISTA_POS POS
    (70) LISTA_POS -> . POS
    (71) POS -> . CORA VALOR CORB

    PARB            reduce using rule 34 (VALOR -> VARIABLE .)
    ANDL            reduce using rule 34 (VALOR -> VARIABLE .)
    ORL             reduce using rule 34 (VALOR -> VARIABLE .)
    XORL            reduce using rule 34 (VALOR -> VARIABLE .)
    IGUALR          reduce using rule 34 (VALOR -> VARIABLE .)
    NOIGUALR        reduce using rule 34 (VALOR -> VARIABLE .)
    MAYORR          reduce using rule 34 (VALOR -> VARIABLE .)
    MENORR          reduce using rule 34 (VALOR -> VARIABLE .)
    ANDB            reduce using rule 34 (VALOR -> VARIABLE .)
    ORB             reduce using rule 34 (VALOR -> VARIABLE .)
    XORB            reduce using rule 34 (VALOR -> VARIABLE .)
    MAS             reduce using rule 34 (VALOR -> VARIABLE .)
    MENOS           reduce using rule 34 (VALOR -> VARIABLE .)
    MULTIPLICACION  reduce using rule 34 (VALOR -> VARIABLE .)
    DIVIDIR         reduce using rule 34 (VALOR -> VARIABLE .)
    RESIDUO         reduce using rule 34 (VALOR -> VARIABLE .)
    PTCOMA          reduce using rule 34 (VALOR -> VARIABLE .)
    CORB            reduce using rule 34 (VALOR -> VARIABLE .)
    CORA            shift and go to state 43

    LISTA_POS                      shift and go to state 84
    POS                            shift and go to state 42

state 56

    (35) VALOR -> LLAMADA_ARREGLO .

    PARB            reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    ANDL            reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    ORL             reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    XORL            reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    IGUALR          reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    NOIGUALR        reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    MAYORR          reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    MENORR          reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    ANDB            reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    ORB             reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    XORB            reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    MAS             reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    MENOS           reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    MULTIPLICACION  reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    DIVIDIR         reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    RESIDUO         reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    PTCOMA          reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)
    CORB            reduce using rule 35 (VALOR -> LLAMADA_ARREGLO .)


state 57

    (36) VALOR -> INT .

    PARB            reduce using rule 36 (VALOR -> INT .)
    ANDL            reduce using rule 36 (VALOR -> INT .)
    ORL             reduce using rule 36 (VALOR -> INT .)
    XORL            reduce using rule 36 (VALOR -> INT .)
    IGUALR          reduce using rule 36 (VALOR -> INT .)
    NOIGUALR        reduce using rule 36 (VALOR -> INT .)
    MAYORR          reduce using rule 36 (VALOR -> INT .)
    MENORR          reduce using rule 36 (VALOR -> INT .)
    ANDB            reduce using rule 36 (VALOR -> INT .)
    ORB             reduce using rule 36 (VALOR -> INT .)
    XORB            reduce using rule 36 (VALOR -> INT .)
    MAS             reduce using rule 36 (VALOR -> INT .)
    MENOS           reduce using rule 36 (VALOR -> INT .)
    MULTIPLICACION  reduce using rule 36 (VALOR -> INT .)
    DIVIDIR         reduce using rule 36 (VALOR -> INT .)
    RESIDUO         reduce using rule 36 (VALOR -> INT .)
    PTCOMA          reduce using rule 36 (VALOR -> INT .)
    CORB            reduce using rule 36 (VALOR -> INT .)


state 58

    (37) VALOR -> FLOAT .

    PARB            reduce using rule 37 (VALOR -> FLOAT .)
    ANDL            reduce using rule 37 (VALOR -> FLOAT .)
    ORL             reduce using rule 37 (VALOR -> FLOAT .)
    XORL            reduce using rule 37 (VALOR -> FLOAT .)
    IGUALR          reduce using rule 37 (VALOR -> FLOAT .)
    NOIGUALR        reduce using rule 37 (VALOR -> FLOAT .)
    MAYORR          reduce using rule 37 (VALOR -> FLOAT .)
    MENORR          reduce using rule 37 (VALOR -> FLOAT .)
    ANDB            reduce using rule 37 (VALOR -> FLOAT .)
    ORB             reduce using rule 37 (VALOR -> FLOAT .)
    XORB            reduce using rule 37 (VALOR -> FLOAT .)
    MAS             reduce using rule 37 (VALOR -> FLOAT .)
    MENOS           reduce using rule 37 (VALOR -> FLOAT .)
    MULTIPLICACION  reduce using rule 37 (VALOR -> FLOAT .)
    DIVIDIR         reduce using rule 37 (VALOR -> FLOAT .)
    RESIDUO         reduce using rule 37 (VALOR -> FLOAT .)
    PTCOMA          reduce using rule 37 (VALOR -> FLOAT .)
    CORB            reduce using rule 37 (VALOR -> FLOAT .)


state 59

    (38) VALOR -> CHAR .

    PARB            reduce using rule 38 (VALOR -> CHAR .)
    ANDL            reduce using rule 38 (VALOR -> CHAR .)
    ORL             reduce using rule 38 (VALOR -> CHAR .)
    XORL            reduce using rule 38 (VALOR -> CHAR .)
    IGUALR          reduce using rule 38 (VALOR -> CHAR .)
    NOIGUALR        reduce using rule 38 (VALOR -> CHAR .)
    MAYORR          reduce using rule 38 (VALOR -> CHAR .)
    MENORR          reduce using rule 38 (VALOR -> CHAR .)
    ANDB            reduce using rule 38 (VALOR -> CHAR .)
    ORB             reduce using rule 38 (VALOR -> CHAR .)
    XORB            reduce using rule 38 (VALOR -> CHAR .)
    MAS             reduce using rule 38 (VALOR -> CHAR .)
    MENOS           reduce using rule 38 (VALOR -> CHAR .)
    MULTIPLICACION  reduce using rule 38 (VALOR -> CHAR .)
    DIVIDIR         reduce using rule 38 (VALOR -> CHAR .)
    RESIDUO         reduce using rule 38 (VALOR -> CHAR .)
    PTCOMA          reduce using rule 38 (VALOR -> CHAR .)
    CORB            reduce using rule 38 (VALOR -> CHAR .)


state 60

    (39) VALOR -> array . PARA PARB

    PARA            shift and go to state 85


state 61

    (40) VALOR -> read . PARA PARB

    PARA            shift and go to state 86


state 62

    (33) EXPRESION -> PARA . EXPRESION PARB
    (73) CONVERSION -> PARA . TIPO_CONVERSION PARB VALOR
    (31) EXPRESION -> . VALOR
    (32) EXPRESION -> . error
    (33) EXPRESION -> . PARA EXPRESION PARB
    (41) EXPRESION -> . ARITMETICAS
    (49) EXPRESION -> . LOGICAS
    (54) EXPRESION -> . RELACIONAL
    (61) EXPRESION -> . BIT
    (72) EXPRESION -> . CONVERSION
    (77) EXPRESION -> . PUNTERO
    (74) TIPO_CONVERSION -> . int
    (75) TIPO_CONVERSION -> . char
    (76) TIPO_CONVERSION -> . float
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (42) ARITMETICAS -> . MENOS VALOR
    (43) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (44) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (45) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (47) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (48) ARITMETICAS -> . abs PARA EXPRESION PARB
    (50) LOGICAS -> . NOTL VALOR
    (51) LOGICAS -> . VALOR ANDL VALOR
    (52) LOGICAS -> . VALOR ORL VALOR
    (53) LOGICAS -> . VALOR XORL VALOR
    (55) RELACIONAL -> . VALOR IGUALR VALOR
    (56) RELACIONAL -> . VALOR NOIGUALR VALOR
    (57) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (58) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (59) RELACIONAL -> . VALOR MAYORR VALOR
    (60) RELACIONAL -> . VALOR MENORR VALOR
    (62) BIT -> . NOTB VALOR
    (63) BIT -> . VALOR ANDB VALOR
    (64) BIT -> . VALOR ORB VALOR
    (65) BIT -> . VALOR XORB VALOR
    (66) BIT -> . VALOR MENORR MENORR VALOR
    (67) BIT -> . VALOR MAYORR MAYORR VALOR
    (73) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (78) PUNTERO -> . ANDB VARIABLE
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 65
    PARA            shift and go to state 62
    int             shift and go to state 89
    char            shift and go to state 90
    float           shift and go to state 91
    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61
    MENOS           shift and go to state 72
    abs             shift and go to state 73
    NOTL            shift and go to state 74
    NOTB            shift and go to state 75
    ANDB            shift and go to state 76

    EXPRESION                      shift and go to state 87
    TIPO_CONVERSION                shift and go to state 88
    VALOR                          shift and go to state 64
    ARITMETICAS                    shift and go to state 66
    LOGICAS                        shift and go to state 67
    RELACIONAL                     shift and go to state 68
    BIT                            shift and go to state 69
    CONVERSION                     shift and go to state 70
    PUNTERO                        shift and go to state 71
    LLAMADA_ARREGLO                shift and go to state 56

state 63

    (81) IMPRIME -> print PARA EXPRESION . PARB PTCOMA
    (43) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (44) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (45) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (47) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            shift and go to state 92
    MAS             shift and go to state 93
    MENOS           shift and go to state 94
    MULTIPLICACION  shift and go to state 95
    DIVIDIR         shift and go to state 96
    RESIDUO         shift and go to state 97


state 64

    (31) EXPRESION -> VALOR .
    (51) LOGICAS -> VALOR . ANDL VALOR
    (52) LOGICAS -> VALOR . ORL VALOR
    (53) LOGICAS -> VALOR . XORL VALOR
    (55) RELACIONAL -> VALOR . IGUALR VALOR
    (56) RELACIONAL -> VALOR . NOIGUALR VALOR
    (57) RELACIONAL -> VALOR . MAYORR IGUAL VALOR
    (58) RELACIONAL -> VALOR . MENORR IGUAL VALOR
    (59) RELACIONAL -> VALOR . MAYORR VALOR
    (60) RELACIONAL -> VALOR . MENORR VALOR
    (63) BIT -> VALOR . ANDB VALOR
    (64) BIT -> VALOR . ORB VALOR
    (65) BIT -> VALOR . XORB VALOR
    (66) BIT -> VALOR . MENORR MENORR VALOR
    (67) BIT -> VALOR . MAYORR MAYORR VALOR

    PARB            reduce using rule 31 (EXPRESION -> VALOR .)
    MAS             reduce using rule 31 (EXPRESION -> VALOR .)
    MENOS           reduce using rule 31 (EXPRESION -> VALOR .)
    MULTIPLICACION  reduce using rule 31 (EXPRESION -> VALOR .)
    DIVIDIR         reduce using rule 31 (EXPRESION -> VALOR .)
    RESIDUO         reduce using rule 31 (EXPRESION -> VALOR .)
    PTCOMA          reduce using rule 31 (EXPRESION -> VALOR .)
    ANDL            shift and go to state 98
    ORL             shift and go to state 99
    XORL            shift and go to state 100
    IGUALR          shift and go to state 101
    NOIGUALR        shift and go to state 102
    MAYORR          shift and go to state 103
    MENORR          shift and go to state 104
    ANDB            shift and go to state 105
    ORB             shift and go to state 106
    XORB            shift and go to state 107


state 65

    (32) EXPRESION -> error .

    PARB            reduce using rule 32 (EXPRESION -> error .)
    MAS             reduce using rule 32 (EXPRESION -> error .)
    MENOS           reduce using rule 32 (EXPRESION -> error .)
    MULTIPLICACION  reduce using rule 32 (EXPRESION -> error .)
    DIVIDIR         reduce using rule 32 (EXPRESION -> error .)
    RESIDUO         reduce using rule 32 (EXPRESION -> error .)
    PTCOMA          reduce using rule 32 (EXPRESION -> error .)


state 66

    (41) EXPRESION -> ARITMETICAS .

    PARB            reduce using rule 41 (EXPRESION -> ARITMETICAS .)
    MAS             reduce using rule 41 (EXPRESION -> ARITMETICAS .)
    MENOS           reduce using rule 41 (EXPRESION -> ARITMETICAS .)
    MULTIPLICACION  reduce using rule 41 (EXPRESION -> ARITMETICAS .)
    DIVIDIR         reduce using rule 41 (EXPRESION -> ARITMETICAS .)
    RESIDUO         reduce using rule 41 (EXPRESION -> ARITMETICAS .)
    PTCOMA          reduce using rule 41 (EXPRESION -> ARITMETICAS .)


state 67

    (49) EXPRESION -> LOGICAS .

    PARB            reduce using rule 49 (EXPRESION -> LOGICAS .)
    MAS             reduce using rule 49 (EXPRESION -> LOGICAS .)
    MENOS           reduce using rule 49 (EXPRESION -> LOGICAS .)
    MULTIPLICACION  reduce using rule 49 (EXPRESION -> LOGICAS .)
    DIVIDIR         reduce using rule 49 (EXPRESION -> LOGICAS .)
    RESIDUO         reduce using rule 49 (EXPRESION -> LOGICAS .)
    PTCOMA          reduce using rule 49 (EXPRESION -> LOGICAS .)


state 68

    (54) EXPRESION -> RELACIONAL .

    PARB            reduce using rule 54 (EXPRESION -> RELACIONAL .)
    MAS             reduce using rule 54 (EXPRESION -> RELACIONAL .)
    MENOS           reduce using rule 54 (EXPRESION -> RELACIONAL .)
    MULTIPLICACION  reduce using rule 54 (EXPRESION -> RELACIONAL .)
    DIVIDIR         reduce using rule 54 (EXPRESION -> RELACIONAL .)
    RESIDUO         reduce using rule 54 (EXPRESION -> RELACIONAL .)
    PTCOMA          reduce using rule 54 (EXPRESION -> RELACIONAL .)


state 69

    (61) EXPRESION -> BIT .

    PARB            reduce using rule 61 (EXPRESION -> BIT .)
    MAS             reduce using rule 61 (EXPRESION -> BIT .)
    MENOS           reduce using rule 61 (EXPRESION -> BIT .)
    MULTIPLICACION  reduce using rule 61 (EXPRESION -> BIT .)
    DIVIDIR         reduce using rule 61 (EXPRESION -> BIT .)
    RESIDUO         reduce using rule 61 (EXPRESION -> BIT .)
    PTCOMA          reduce using rule 61 (EXPRESION -> BIT .)


state 70

    (72) EXPRESION -> CONVERSION .

    PARB            reduce using rule 72 (EXPRESION -> CONVERSION .)
    MAS             reduce using rule 72 (EXPRESION -> CONVERSION .)
    MENOS           reduce using rule 72 (EXPRESION -> CONVERSION .)
    MULTIPLICACION  reduce using rule 72 (EXPRESION -> CONVERSION .)
    DIVIDIR         reduce using rule 72 (EXPRESION -> CONVERSION .)
    RESIDUO         reduce using rule 72 (EXPRESION -> CONVERSION .)
    PTCOMA          reduce using rule 72 (EXPRESION -> CONVERSION .)


state 71

    (77) EXPRESION -> PUNTERO .

    PARB            reduce using rule 77 (EXPRESION -> PUNTERO .)
    MAS             reduce using rule 77 (EXPRESION -> PUNTERO .)
    MENOS           reduce using rule 77 (EXPRESION -> PUNTERO .)
    MULTIPLICACION  reduce using rule 77 (EXPRESION -> PUNTERO .)
    DIVIDIR         reduce using rule 77 (EXPRESION -> PUNTERO .)
    RESIDUO         reduce using rule 77 (EXPRESION -> PUNTERO .)
    PTCOMA          reduce using rule 77 (EXPRESION -> PUNTERO .)


state 72

    (42) ARITMETICAS -> MENOS . VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 108
    LLAMADA_ARREGLO                shift and go to state 56

state 73

    (48) ARITMETICAS -> abs . PARA EXPRESION PARB

    PARA            shift and go to state 109


state 74

    (50) LOGICAS -> NOTL . VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 110
    LLAMADA_ARREGLO                shift and go to state 56

state 75

    (62) BIT -> NOTB . VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 111
    LLAMADA_ARREGLO                shift and go to state 56

state 76

    (78) PUNTERO -> ANDB . VARIABLE

    VARIABLE        shift and go to state 112


state 77

    (79) ESTRUCTURA_IF -> if PARA EXPRESION . PARB goto ID PTCOMA
    (43) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (44) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (45) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (47) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            shift and go to state 113
    MAS             shift and go to state 93
    MENOS           shift and go to state 94
    MULTIPLICACION  shift and go to state 95
    DIVIDIR         shift and go to state 96
    RESIDUO         shift and go to state 97


state 78

    (29) NORMAL -> VARIABLE IGUAL EXPRESION .
    (43) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (44) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (45) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (47) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PTCOMA          reduce using rule 29 (NORMAL -> VARIABLE IGUAL EXPRESION .)
    MAS             shift and go to state 93
    MENOS           shift and go to state 94
    MULTIPLICACION  shift and go to state 95
    DIVIDIR         shift and go to state 96
    RESIDUO         shift and go to state 97


state 79

    (30) ARRAY -> VARIABLE LISTA_POS IGUAL . EXPRESION
    (31) EXPRESION -> . VALOR
    (32) EXPRESION -> . error
    (33) EXPRESION -> . PARA EXPRESION PARB
    (41) EXPRESION -> . ARITMETICAS
    (49) EXPRESION -> . LOGICAS
    (54) EXPRESION -> . RELACIONAL
    (61) EXPRESION -> . BIT
    (72) EXPRESION -> . CONVERSION
    (77) EXPRESION -> . PUNTERO
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (42) ARITMETICAS -> . MENOS VALOR
    (43) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (44) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (45) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (47) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (48) ARITMETICAS -> . abs PARA EXPRESION PARB
    (50) LOGICAS -> . NOTL VALOR
    (51) LOGICAS -> . VALOR ANDL VALOR
    (52) LOGICAS -> . VALOR ORL VALOR
    (53) LOGICAS -> . VALOR XORL VALOR
    (55) RELACIONAL -> . VALOR IGUALR VALOR
    (56) RELACIONAL -> . VALOR NOIGUALR VALOR
    (57) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (58) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (59) RELACIONAL -> . VALOR MAYORR VALOR
    (60) RELACIONAL -> . VALOR MENORR VALOR
    (62) BIT -> . NOTB VALOR
    (63) BIT -> . VALOR ANDB VALOR
    (64) BIT -> . VALOR ORB VALOR
    (65) BIT -> . VALOR XORB VALOR
    (66) BIT -> . VALOR MENORR MENORR VALOR
    (67) BIT -> . VALOR MAYORR MAYORR VALOR
    (73) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (78) PUNTERO -> . ANDB VARIABLE
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 65
    PARA            shift and go to state 62
    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61
    MENOS           shift and go to state 72
    abs             shift and go to state 73
    NOTL            shift and go to state 74
    NOTB            shift and go to state 75
    ANDB            shift and go to state 76

    EXPRESION                      shift and go to state 114
    VALOR                          shift and go to state 64
    ARITMETICAS                    shift and go to state 66
    LOGICAS                        shift and go to state 67
    RELACIONAL                     shift and go to state 68
    BIT                            shift and go to state 69
    CONVERSION                     shift and go to state 70
    PUNTERO                        shift and go to state 71
    LLAMADA_ARREGLO                shift and go to state 56

state 80

    (69) LISTA_POS -> LISTA_POS POS .

    IGUAL           reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    CORA            reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    PARB            reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    ANDL            reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    ORL             reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    XORL            reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    IGUALR          reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    NOIGUALR        reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    MAYORR          reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    MENORR          reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    ANDB            reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    ORB             reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    XORB            reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    MAS             reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    MENOS           reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    MULTIPLICACION  reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    DIVIDIR         reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    RESIDUO         reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    PTCOMA          reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)
    CORB            reduce using rule 69 (LISTA_POS -> LISTA_POS POS .)


state 81

    (71) POS -> CORA VALOR . CORB

    CORB            shift and go to state 115


state 82

    (16) PRECUERPOE -> PRECUERPOE CUERPOE .

    goto            reduce using rule 16 (PRECUERPOE -> PRECUERPOE CUERPOE .)
    unset           reduce using rule 16 (PRECUERPOE -> PRECUERPOE CUERPOE .)
    print           reduce using rule 16 (PRECUERPOE -> PRECUERPOE CUERPOE .)
    if              reduce using rule 16 (PRECUERPOE -> PRECUERPOE CUERPOE .)
    exit            reduce using rule 16 (PRECUERPOE -> PRECUERPOE CUERPOE .)
    VARIABLE        reduce using rule 16 (PRECUERPOE -> PRECUERPOE CUERPOE .)
    ID              reduce using rule 16 (PRECUERPOE -> PRECUERPOE CUERPOE .)
    error           reduce using rule 16 (PRECUERPOE -> PRECUERPOE CUERPOE .)
    $end            reduce using rule 16 (PRECUERPOE -> PRECUERPOE CUERPOE .)


state 83

    (80) DESTRUYE_VARIABLE -> unset PARA VALOR PARB . PTCOMA

    PTCOMA          shift and go to state 116


state 84

    (68) LLAMADA_ARREGLO -> VARIABLE LISTA_POS .
    (69) LISTA_POS -> LISTA_POS . POS
    (71) POS -> . CORA VALOR CORB

    PARB            reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    ANDL            reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    ORL             reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    XORL            reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    IGUALR          reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    NOIGUALR        reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    MAYORR          reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    MENORR          reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    ANDB            reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    ORB             reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    XORB            reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    MAS             reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    MENOS           reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    MULTIPLICACION  reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    DIVIDIR         reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    RESIDUO         reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    PTCOMA          reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    CORB            reduce using rule 68 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    CORA            shift and go to state 43

    POS                            shift and go to state 80

state 85

    (39) VALOR -> array PARA . PARB

    PARB            shift and go to state 117


state 86

    (40) VALOR -> read PARA . PARB

    PARB            shift and go to state 118


state 87

    (33) EXPRESION -> PARA EXPRESION . PARB
    (43) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (44) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (45) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (47) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            shift and go to state 119
    MAS             shift and go to state 93
    MENOS           shift and go to state 94
    MULTIPLICACION  shift and go to state 95
    DIVIDIR         shift and go to state 96
    RESIDUO         shift and go to state 97


state 88

    (73) CONVERSION -> PARA TIPO_CONVERSION . PARB VALOR

    PARB            shift and go to state 120


state 89

    (74) TIPO_CONVERSION -> int .

    PARB            reduce using rule 74 (TIPO_CONVERSION -> int .)


state 90

    (75) TIPO_CONVERSION -> char .

    PARB            reduce using rule 75 (TIPO_CONVERSION -> char .)


state 91

    (76) TIPO_CONVERSION -> float .

    PARB            reduce using rule 76 (TIPO_CONVERSION -> float .)


state 92

    (81) IMPRIME -> print PARA EXPRESION PARB . PTCOMA

    PTCOMA          shift and go to state 121


state 93

    (43) ARITMETICAS -> EXPRESION MAS . EXPRESION
    (31) EXPRESION -> . VALOR
    (32) EXPRESION -> . error
    (33) EXPRESION -> . PARA EXPRESION PARB
    (41) EXPRESION -> . ARITMETICAS
    (49) EXPRESION -> . LOGICAS
    (54) EXPRESION -> . RELACIONAL
    (61) EXPRESION -> . BIT
    (72) EXPRESION -> . CONVERSION
    (77) EXPRESION -> . PUNTERO
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (42) ARITMETICAS -> . MENOS VALOR
    (43) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (44) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (45) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (47) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (48) ARITMETICAS -> . abs PARA EXPRESION PARB
    (50) LOGICAS -> . NOTL VALOR
    (51) LOGICAS -> . VALOR ANDL VALOR
    (52) LOGICAS -> . VALOR ORL VALOR
    (53) LOGICAS -> . VALOR XORL VALOR
    (55) RELACIONAL -> . VALOR IGUALR VALOR
    (56) RELACIONAL -> . VALOR NOIGUALR VALOR
    (57) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (58) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (59) RELACIONAL -> . VALOR MAYORR VALOR
    (60) RELACIONAL -> . VALOR MENORR VALOR
    (62) BIT -> . NOTB VALOR
    (63) BIT -> . VALOR ANDB VALOR
    (64) BIT -> . VALOR ORB VALOR
    (65) BIT -> . VALOR XORB VALOR
    (66) BIT -> . VALOR MENORR MENORR VALOR
    (67) BIT -> . VALOR MAYORR MAYORR VALOR
    (73) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (78) PUNTERO -> . ANDB VARIABLE
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 65
    PARA            shift and go to state 62
    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61
    MENOS           shift and go to state 72
    abs             shift and go to state 73
    NOTL            shift and go to state 74
    NOTB            shift and go to state 75
    ANDB            shift and go to state 76

    EXPRESION                      shift and go to state 122
    VALOR                          shift and go to state 64
    ARITMETICAS                    shift and go to state 66
    LOGICAS                        shift and go to state 67
    RELACIONAL                     shift and go to state 68
    BIT                            shift and go to state 69
    CONVERSION                     shift and go to state 70
    PUNTERO                        shift and go to state 71
    LLAMADA_ARREGLO                shift and go to state 56

state 94

    (44) ARITMETICAS -> EXPRESION MENOS . EXPRESION
    (31) EXPRESION -> . VALOR
    (32) EXPRESION -> . error
    (33) EXPRESION -> . PARA EXPRESION PARB
    (41) EXPRESION -> . ARITMETICAS
    (49) EXPRESION -> . LOGICAS
    (54) EXPRESION -> . RELACIONAL
    (61) EXPRESION -> . BIT
    (72) EXPRESION -> . CONVERSION
    (77) EXPRESION -> . PUNTERO
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (42) ARITMETICAS -> . MENOS VALOR
    (43) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (44) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (45) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (47) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (48) ARITMETICAS -> . abs PARA EXPRESION PARB
    (50) LOGICAS -> . NOTL VALOR
    (51) LOGICAS -> . VALOR ANDL VALOR
    (52) LOGICAS -> . VALOR ORL VALOR
    (53) LOGICAS -> . VALOR XORL VALOR
    (55) RELACIONAL -> . VALOR IGUALR VALOR
    (56) RELACIONAL -> . VALOR NOIGUALR VALOR
    (57) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (58) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (59) RELACIONAL -> . VALOR MAYORR VALOR
    (60) RELACIONAL -> . VALOR MENORR VALOR
    (62) BIT -> . NOTB VALOR
    (63) BIT -> . VALOR ANDB VALOR
    (64) BIT -> . VALOR ORB VALOR
    (65) BIT -> . VALOR XORB VALOR
    (66) BIT -> . VALOR MENORR MENORR VALOR
    (67) BIT -> . VALOR MAYORR MAYORR VALOR
    (73) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (78) PUNTERO -> . ANDB VARIABLE
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 65
    PARA            shift and go to state 62
    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61
    MENOS           shift and go to state 72
    abs             shift and go to state 73
    NOTL            shift and go to state 74
    NOTB            shift and go to state 75
    ANDB            shift and go to state 76

    EXPRESION                      shift and go to state 123
    VALOR                          shift and go to state 64
    ARITMETICAS                    shift and go to state 66
    LOGICAS                        shift and go to state 67
    RELACIONAL                     shift and go to state 68
    BIT                            shift and go to state 69
    CONVERSION                     shift and go to state 70
    PUNTERO                        shift and go to state 71
    LLAMADA_ARREGLO                shift and go to state 56

state 95

    (45) ARITMETICAS -> EXPRESION MULTIPLICACION . EXPRESION
    (31) EXPRESION -> . VALOR
    (32) EXPRESION -> . error
    (33) EXPRESION -> . PARA EXPRESION PARB
    (41) EXPRESION -> . ARITMETICAS
    (49) EXPRESION -> . LOGICAS
    (54) EXPRESION -> . RELACIONAL
    (61) EXPRESION -> . BIT
    (72) EXPRESION -> . CONVERSION
    (77) EXPRESION -> . PUNTERO
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (42) ARITMETICAS -> . MENOS VALOR
    (43) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (44) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (45) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (47) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (48) ARITMETICAS -> . abs PARA EXPRESION PARB
    (50) LOGICAS -> . NOTL VALOR
    (51) LOGICAS -> . VALOR ANDL VALOR
    (52) LOGICAS -> . VALOR ORL VALOR
    (53) LOGICAS -> . VALOR XORL VALOR
    (55) RELACIONAL -> . VALOR IGUALR VALOR
    (56) RELACIONAL -> . VALOR NOIGUALR VALOR
    (57) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (58) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (59) RELACIONAL -> . VALOR MAYORR VALOR
    (60) RELACIONAL -> . VALOR MENORR VALOR
    (62) BIT -> . NOTB VALOR
    (63) BIT -> . VALOR ANDB VALOR
    (64) BIT -> . VALOR ORB VALOR
    (65) BIT -> . VALOR XORB VALOR
    (66) BIT -> . VALOR MENORR MENORR VALOR
    (67) BIT -> . VALOR MAYORR MAYORR VALOR
    (73) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (78) PUNTERO -> . ANDB VARIABLE
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 65
    PARA            shift and go to state 62
    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61
    MENOS           shift and go to state 72
    abs             shift and go to state 73
    NOTL            shift and go to state 74
    NOTB            shift and go to state 75
    ANDB            shift and go to state 76

    EXPRESION                      shift and go to state 124
    VALOR                          shift and go to state 64
    ARITMETICAS                    shift and go to state 66
    LOGICAS                        shift and go to state 67
    RELACIONAL                     shift and go to state 68
    BIT                            shift and go to state 69
    CONVERSION                     shift and go to state 70
    PUNTERO                        shift and go to state 71
    LLAMADA_ARREGLO                shift and go to state 56

state 96

    (46) ARITMETICAS -> EXPRESION DIVIDIR . EXPRESION
    (31) EXPRESION -> . VALOR
    (32) EXPRESION -> . error
    (33) EXPRESION -> . PARA EXPRESION PARB
    (41) EXPRESION -> . ARITMETICAS
    (49) EXPRESION -> . LOGICAS
    (54) EXPRESION -> . RELACIONAL
    (61) EXPRESION -> . BIT
    (72) EXPRESION -> . CONVERSION
    (77) EXPRESION -> . PUNTERO
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (42) ARITMETICAS -> . MENOS VALOR
    (43) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (44) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (45) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (47) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (48) ARITMETICAS -> . abs PARA EXPRESION PARB
    (50) LOGICAS -> . NOTL VALOR
    (51) LOGICAS -> . VALOR ANDL VALOR
    (52) LOGICAS -> . VALOR ORL VALOR
    (53) LOGICAS -> . VALOR XORL VALOR
    (55) RELACIONAL -> . VALOR IGUALR VALOR
    (56) RELACIONAL -> . VALOR NOIGUALR VALOR
    (57) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (58) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (59) RELACIONAL -> . VALOR MAYORR VALOR
    (60) RELACIONAL -> . VALOR MENORR VALOR
    (62) BIT -> . NOTB VALOR
    (63) BIT -> . VALOR ANDB VALOR
    (64) BIT -> . VALOR ORB VALOR
    (65) BIT -> . VALOR XORB VALOR
    (66) BIT -> . VALOR MENORR MENORR VALOR
    (67) BIT -> . VALOR MAYORR MAYORR VALOR
    (73) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (78) PUNTERO -> . ANDB VARIABLE
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 65
    PARA            shift and go to state 62
    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61
    MENOS           shift and go to state 72
    abs             shift and go to state 73
    NOTL            shift and go to state 74
    NOTB            shift and go to state 75
    ANDB            shift and go to state 76

    EXPRESION                      shift and go to state 125
    VALOR                          shift and go to state 64
    ARITMETICAS                    shift and go to state 66
    LOGICAS                        shift and go to state 67
    RELACIONAL                     shift and go to state 68
    BIT                            shift and go to state 69
    CONVERSION                     shift and go to state 70
    PUNTERO                        shift and go to state 71
    LLAMADA_ARREGLO                shift and go to state 56

state 97

    (47) ARITMETICAS -> EXPRESION RESIDUO . EXPRESION
    (31) EXPRESION -> . VALOR
    (32) EXPRESION -> . error
    (33) EXPRESION -> . PARA EXPRESION PARB
    (41) EXPRESION -> . ARITMETICAS
    (49) EXPRESION -> . LOGICAS
    (54) EXPRESION -> . RELACIONAL
    (61) EXPRESION -> . BIT
    (72) EXPRESION -> . CONVERSION
    (77) EXPRESION -> . PUNTERO
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (42) ARITMETICAS -> . MENOS VALOR
    (43) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (44) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (45) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (47) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (48) ARITMETICAS -> . abs PARA EXPRESION PARB
    (50) LOGICAS -> . NOTL VALOR
    (51) LOGICAS -> . VALOR ANDL VALOR
    (52) LOGICAS -> . VALOR ORL VALOR
    (53) LOGICAS -> . VALOR XORL VALOR
    (55) RELACIONAL -> . VALOR IGUALR VALOR
    (56) RELACIONAL -> . VALOR NOIGUALR VALOR
    (57) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (58) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (59) RELACIONAL -> . VALOR MAYORR VALOR
    (60) RELACIONAL -> . VALOR MENORR VALOR
    (62) BIT -> . NOTB VALOR
    (63) BIT -> . VALOR ANDB VALOR
    (64) BIT -> . VALOR ORB VALOR
    (65) BIT -> . VALOR XORB VALOR
    (66) BIT -> . VALOR MENORR MENORR VALOR
    (67) BIT -> . VALOR MAYORR MAYORR VALOR
    (73) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (78) PUNTERO -> . ANDB VARIABLE
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 65
    PARA            shift and go to state 62
    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61
    MENOS           shift and go to state 72
    abs             shift and go to state 73
    NOTL            shift and go to state 74
    NOTB            shift and go to state 75
    ANDB            shift and go to state 76

    EXPRESION                      shift and go to state 126
    VALOR                          shift and go to state 64
    ARITMETICAS                    shift and go to state 66
    LOGICAS                        shift and go to state 67
    RELACIONAL                     shift and go to state 68
    BIT                            shift and go to state 69
    CONVERSION                     shift and go to state 70
    PUNTERO                        shift and go to state 71
    LLAMADA_ARREGLO                shift and go to state 56

state 98

    (51) LOGICAS -> VALOR ANDL . VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 127
    LLAMADA_ARREGLO                shift and go to state 56

state 99

    (52) LOGICAS -> VALOR ORL . VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 128
    LLAMADA_ARREGLO                shift and go to state 56

state 100

    (53) LOGICAS -> VALOR XORL . VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 129
    LLAMADA_ARREGLO                shift and go to state 56

state 101

    (55) RELACIONAL -> VALOR IGUALR . VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 130
    LLAMADA_ARREGLO                shift and go to state 56

state 102

    (56) RELACIONAL -> VALOR NOIGUALR . VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 131
    LLAMADA_ARREGLO                shift and go to state 56

state 103

    (57) RELACIONAL -> VALOR MAYORR . IGUAL VALOR
    (59) RELACIONAL -> VALOR MAYORR . VALOR
    (67) BIT -> VALOR MAYORR . MAYORR VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    IGUAL           shift and go to state 134
    MAYORR          shift and go to state 133
    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 132
    LLAMADA_ARREGLO                shift and go to state 56

state 104

    (58) RELACIONAL -> VALOR MENORR . IGUAL VALOR
    (60) RELACIONAL -> VALOR MENORR . VALOR
    (66) BIT -> VALOR MENORR . MENORR VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    IGUAL           shift and go to state 137
    MENORR          shift and go to state 136
    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 135
    LLAMADA_ARREGLO                shift and go to state 56

state 105

    (63) BIT -> VALOR ANDB . VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 138
    LLAMADA_ARREGLO                shift and go to state 56

state 106

    (64) BIT -> VALOR ORB . VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 139
    LLAMADA_ARREGLO                shift and go to state 56

state 107

    (65) BIT -> VALOR XORB . VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 140
    LLAMADA_ARREGLO                shift and go to state 56

state 108

    (42) ARITMETICAS -> MENOS VALOR .

    PARB            reduce using rule 42 (ARITMETICAS -> MENOS VALOR .)
    MAS             reduce using rule 42 (ARITMETICAS -> MENOS VALOR .)
    MENOS           reduce using rule 42 (ARITMETICAS -> MENOS VALOR .)
    MULTIPLICACION  reduce using rule 42 (ARITMETICAS -> MENOS VALOR .)
    DIVIDIR         reduce using rule 42 (ARITMETICAS -> MENOS VALOR .)
    RESIDUO         reduce using rule 42 (ARITMETICAS -> MENOS VALOR .)
    PTCOMA          reduce using rule 42 (ARITMETICAS -> MENOS VALOR .)


state 109

    (48) ARITMETICAS -> abs PARA . EXPRESION PARB
    (31) EXPRESION -> . VALOR
    (32) EXPRESION -> . error
    (33) EXPRESION -> . PARA EXPRESION PARB
    (41) EXPRESION -> . ARITMETICAS
    (49) EXPRESION -> . LOGICAS
    (54) EXPRESION -> . RELACIONAL
    (61) EXPRESION -> . BIT
    (72) EXPRESION -> . CONVERSION
    (77) EXPRESION -> . PUNTERO
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (42) ARITMETICAS -> . MENOS VALOR
    (43) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (44) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (45) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (47) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (48) ARITMETICAS -> . abs PARA EXPRESION PARB
    (50) LOGICAS -> . NOTL VALOR
    (51) LOGICAS -> . VALOR ANDL VALOR
    (52) LOGICAS -> . VALOR ORL VALOR
    (53) LOGICAS -> . VALOR XORL VALOR
    (55) RELACIONAL -> . VALOR IGUALR VALOR
    (56) RELACIONAL -> . VALOR NOIGUALR VALOR
    (57) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (58) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (59) RELACIONAL -> . VALOR MAYORR VALOR
    (60) RELACIONAL -> . VALOR MENORR VALOR
    (62) BIT -> . NOTB VALOR
    (63) BIT -> . VALOR ANDB VALOR
    (64) BIT -> . VALOR ORB VALOR
    (65) BIT -> . VALOR XORB VALOR
    (66) BIT -> . VALOR MENORR MENORR VALOR
    (67) BIT -> . VALOR MAYORR MAYORR VALOR
    (73) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (78) PUNTERO -> . ANDB VARIABLE
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 65
    PARA            shift and go to state 62
    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61
    MENOS           shift and go to state 72
    abs             shift and go to state 73
    NOTL            shift and go to state 74
    NOTB            shift and go to state 75
    ANDB            shift and go to state 76

    EXPRESION                      shift and go to state 141
    VALOR                          shift and go to state 64
    ARITMETICAS                    shift and go to state 66
    LOGICAS                        shift and go to state 67
    RELACIONAL                     shift and go to state 68
    BIT                            shift and go to state 69
    CONVERSION                     shift and go to state 70
    PUNTERO                        shift and go to state 71
    LLAMADA_ARREGLO                shift and go to state 56

state 110

    (50) LOGICAS -> NOTL VALOR .

    PARB            reduce using rule 50 (LOGICAS -> NOTL VALOR .)
    MAS             reduce using rule 50 (LOGICAS -> NOTL VALOR .)
    MENOS           reduce using rule 50 (LOGICAS -> NOTL VALOR .)
    MULTIPLICACION  reduce using rule 50 (LOGICAS -> NOTL VALOR .)
    DIVIDIR         reduce using rule 50 (LOGICAS -> NOTL VALOR .)
    RESIDUO         reduce using rule 50 (LOGICAS -> NOTL VALOR .)
    PTCOMA          reduce using rule 50 (LOGICAS -> NOTL VALOR .)


state 111

    (62) BIT -> NOTB VALOR .

    PARB            reduce using rule 62 (BIT -> NOTB VALOR .)
    MAS             reduce using rule 62 (BIT -> NOTB VALOR .)
    MENOS           reduce using rule 62 (BIT -> NOTB VALOR .)
    MULTIPLICACION  reduce using rule 62 (BIT -> NOTB VALOR .)
    DIVIDIR         reduce using rule 62 (BIT -> NOTB VALOR .)
    RESIDUO         reduce using rule 62 (BIT -> NOTB VALOR .)
    PTCOMA          reduce using rule 62 (BIT -> NOTB VALOR .)


state 112

    (78) PUNTERO -> ANDB VARIABLE .

    PARB            reduce using rule 78 (PUNTERO -> ANDB VARIABLE .)
    MAS             reduce using rule 78 (PUNTERO -> ANDB VARIABLE .)
    MENOS           reduce using rule 78 (PUNTERO -> ANDB VARIABLE .)
    MULTIPLICACION  reduce using rule 78 (PUNTERO -> ANDB VARIABLE .)
    DIVIDIR         reduce using rule 78 (PUNTERO -> ANDB VARIABLE .)
    RESIDUO         reduce using rule 78 (PUNTERO -> ANDB VARIABLE .)
    PTCOMA          reduce using rule 78 (PUNTERO -> ANDB VARIABLE .)


state 113

    (79) ESTRUCTURA_IF -> if PARA EXPRESION PARB . goto ID PTCOMA

    goto            shift and go to state 142


state 114

    (30) ARRAY -> VARIABLE LISTA_POS IGUAL EXPRESION .
    (43) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (44) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (45) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (47) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PTCOMA          reduce using rule 30 (ARRAY -> VARIABLE LISTA_POS IGUAL EXPRESION .)
    MAS             shift and go to state 93
    MENOS           shift and go to state 94
    MULTIPLICACION  shift and go to state 95
    DIVIDIR         shift and go to state 96
    RESIDUO         shift and go to state 97


state 115

    (71) POS -> CORA VALOR CORB .

    IGUAL           reduce using rule 71 (POS -> CORA VALOR CORB .)
    CORA            reduce using rule 71 (POS -> CORA VALOR CORB .)
    PARB            reduce using rule 71 (POS -> CORA VALOR CORB .)
    ANDL            reduce using rule 71 (POS -> CORA VALOR CORB .)
    ORL             reduce using rule 71 (POS -> CORA VALOR CORB .)
    XORL            reduce using rule 71 (POS -> CORA VALOR CORB .)
    IGUALR          reduce using rule 71 (POS -> CORA VALOR CORB .)
    NOIGUALR        reduce using rule 71 (POS -> CORA VALOR CORB .)
    MAYORR          reduce using rule 71 (POS -> CORA VALOR CORB .)
    MENORR          reduce using rule 71 (POS -> CORA VALOR CORB .)
    ANDB            reduce using rule 71 (POS -> CORA VALOR CORB .)
    ORB             reduce using rule 71 (POS -> CORA VALOR CORB .)
    XORB            reduce using rule 71 (POS -> CORA VALOR CORB .)
    MAS             reduce using rule 71 (POS -> CORA VALOR CORB .)
    MENOS           reduce using rule 71 (POS -> CORA VALOR CORB .)
    MULTIPLICACION  reduce using rule 71 (POS -> CORA VALOR CORB .)
    DIVIDIR         reduce using rule 71 (POS -> CORA VALOR CORB .)
    RESIDUO         reduce using rule 71 (POS -> CORA VALOR CORB .)
    PTCOMA          reduce using rule 71 (POS -> CORA VALOR CORB .)
    CORB            reduce using rule 71 (POS -> CORA VALOR CORB .)


state 116

    (80) DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .

    ID              reduce using rule 80 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    error           reduce using rule 80 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    goto            reduce using rule 80 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    unset           reduce using rule 80 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    print           reduce using rule 80 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    if              reduce using rule 80 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    exit            reduce using rule 80 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    VARIABLE        reduce using rule 80 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    $end            reduce using rule 80 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)


state 117

    (39) VALOR -> array PARA PARB .

    PARB            reduce using rule 39 (VALOR -> array PARA PARB .)
    ANDL            reduce using rule 39 (VALOR -> array PARA PARB .)
    ORL             reduce using rule 39 (VALOR -> array PARA PARB .)
    XORL            reduce using rule 39 (VALOR -> array PARA PARB .)
    IGUALR          reduce using rule 39 (VALOR -> array PARA PARB .)
    NOIGUALR        reduce using rule 39 (VALOR -> array PARA PARB .)
    MAYORR          reduce using rule 39 (VALOR -> array PARA PARB .)
    MENORR          reduce using rule 39 (VALOR -> array PARA PARB .)
    ANDB            reduce using rule 39 (VALOR -> array PARA PARB .)
    ORB             reduce using rule 39 (VALOR -> array PARA PARB .)
    XORB            reduce using rule 39 (VALOR -> array PARA PARB .)
    MAS             reduce using rule 39 (VALOR -> array PARA PARB .)
    MENOS           reduce using rule 39 (VALOR -> array PARA PARB .)
    MULTIPLICACION  reduce using rule 39 (VALOR -> array PARA PARB .)
    DIVIDIR         reduce using rule 39 (VALOR -> array PARA PARB .)
    RESIDUO         reduce using rule 39 (VALOR -> array PARA PARB .)
    PTCOMA          reduce using rule 39 (VALOR -> array PARA PARB .)
    CORB            reduce using rule 39 (VALOR -> array PARA PARB .)


state 118

    (40) VALOR -> read PARA PARB .

    PARB            reduce using rule 40 (VALOR -> read PARA PARB .)
    ANDL            reduce using rule 40 (VALOR -> read PARA PARB .)
    ORL             reduce using rule 40 (VALOR -> read PARA PARB .)
    XORL            reduce using rule 40 (VALOR -> read PARA PARB .)
    IGUALR          reduce using rule 40 (VALOR -> read PARA PARB .)
    NOIGUALR        reduce using rule 40 (VALOR -> read PARA PARB .)
    MAYORR          reduce using rule 40 (VALOR -> read PARA PARB .)
    MENORR          reduce using rule 40 (VALOR -> read PARA PARB .)
    ANDB            reduce using rule 40 (VALOR -> read PARA PARB .)
    ORB             reduce using rule 40 (VALOR -> read PARA PARB .)
    XORB            reduce using rule 40 (VALOR -> read PARA PARB .)
    MAS             reduce using rule 40 (VALOR -> read PARA PARB .)
    MENOS           reduce using rule 40 (VALOR -> read PARA PARB .)
    MULTIPLICACION  reduce using rule 40 (VALOR -> read PARA PARB .)
    DIVIDIR         reduce using rule 40 (VALOR -> read PARA PARB .)
    RESIDUO         reduce using rule 40 (VALOR -> read PARA PARB .)
    PTCOMA          reduce using rule 40 (VALOR -> read PARA PARB .)
    CORB            reduce using rule 40 (VALOR -> read PARA PARB .)


state 119

    (33) EXPRESION -> PARA EXPRESION PARB .

    PARB            reduce using rule 33 (EXPRESION -> PARA EXPRESION PARB .)
    MAS             reduce using rule 33 (EXPRESION -> PARA EXPRESION PARB .)
    MENOS           reduce using rule 33 (EXPRESION -> PARA EXPRESION PARB .)
    MULTIPLICACION  reduce using rule 33 (EXPRESION -> PARA EXPRESION PARB .)
    DIVIDIR         reduce using rule 33 (EXPRESION -> PARA EXPRESION PARB .)
    RESIDUO         reduce using rule 33 (EXPRESION -> PARA EXPRESION PARB .)
    PTCOMA          reduce using rule 33 (EXPRESION -> PARA EXPRESION PARB .)


state 120

    (73) CONVERSION -> PARA TIPO_CONVERSION PARB . VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 143
    LLAMADA_ARREGLO                shift and go to state 56

state 121

    (81) IMPRIME -> print PARA EXPRESION PARB PTCOMA .

    ID              reduce using rule 81 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    error           reduce using rule 81 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    goto            reduce using rule 81 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    unset           reduce using rule 81 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    print           reduce using rule 81 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    if              reduce using rule 81 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    exit            reduce using rule 81 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    VARIABLE        reduce using rule 81 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    $end            reduce using rule 81 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)


state 122

    (43) ARITMETICAS -> EXPRESION MAS EXPRESION .
    (43) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (44) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (45) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (47) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            reduce using rule 43 (ARITMETICAS -> EXPRESION MAS EXPRESION .)
    MAS             reduce using rule 43 (ARITMETICAS -> EXPRESION MAS EXPRESION .)
    MENOS           reduce using rule 43 (ARITMETICAS -> EXPRESION MAS EXPRESION .)
    PTCOMA          reduce using rule 43 (ARITMETICAS -> EXPRESION MAS EXPRESION .)
    MULTIPLICACION  shift and go to state 95
    DIVIDIR         shift and go to state 96
    RESIDUO         shift and go to state 97

  ! MULTIPLICACION  [ reduce using rule 43 (ARITMETICAS -> EXPRESION MAS EXPRESION .) ]
  ! DIVIDIR         [ reduce using rule 43 (ARITMETICAS -> EXPRESION MAS EXPRESION .) ]
  ! RESIDUO         [ reduce using rule 43 (ARITMETICAS -> EXPRESION MAS EXPRESION .) ]
  ! MAS             [ shift and go to state 93 ]
  ! MENOS           [ shift and go to state 94 ]


state 123

    (44) ARITMETICAS -> EXPRESION MENOS EXPRESION .
    (43) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (44) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (45) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (47) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            reduce using rule 44 (ARITMETICAS -> EXPRESION MENOS EXPRESION .)
    MAS             reduce using rule 44 (ARITMETICAS -> EXPRESION MENOS EXPRESION .)
    MENOS           reduce using rule 44 (ARITMETICAS -> EXPRESION MENOS EXPRESION .)
    PTCOMA          reduce using rule 44 (ARITMETICAS -> EXPRESION MENOS EXPRESION .)
    MULTIPLICACION  shift and go to state 95
    DIVIDIR         shift and go to state 96
    RESIDUO         shift and go to state 97

  ! MULTIPLICACION  [ reduce using rule 44 (ARITMETICAS -> EXPRESION MENOS EXPRESION .) ]
  ! DIVIDIR         [ reduce using rule 44 (ARITMETICAS -> EXPRESION MENOS EXPRESION .) ]
  ! RESIDUO         [ reduce using rule 44 (ARITMETICAS -> EXPRESION MENOS EXPRESION .) ]
  ! MAS             [ shift and go to state 93 ]
  ! MENOS           [ shift and go to state 94 ]


state 124

    (45) ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .
    (43) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (44) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (45) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (47) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            reduce using rule 45 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    MAS             reduce using rule 45 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    MENOS           reduce using rule 45 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    MULTIPLICACION  reduce using rule 45 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    DIVIDIR         reduce using rule 45 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    PTCOMA          reduce using rule 45 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    RESIDUO         shift and go to state 97

  ! RESIDUO         [ reduce using rule 45 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .) ]
  ! MAS             [ shift and go to state 93 ]
  ! MENOS           [ shift and go to state 94 ]
  ! MULTIPLICACION  [ shift and go to state 95 ]
  ! DIVIDIR         [ shift and go to state 96 ]


state 125

    (46) ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .
    (43) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (44) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (45) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (47) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            reduce using rule 46 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    MAS             reduce using rule 46 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    MENOS           reduce using rule 46 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    MULTIPLICACION  reduce using rule 46 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    DIVIDIR         reduce using rule 46 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    PTCOMA          reduce using rule 46 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    RESIDUO         shift and go to state 97

  ! RESIDUO         [ reduce using rule 46 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .) ]
  ! MAS             [ shift and go to state 93 ]
  ! MENOS           [ shift and go to state 94 ]
  ! MULTIPLICACION  [ shift and go to state 95 ]
  ! DIVIDIR         [ shift and go to state 96 ]


state 126

    (47) ARITMETICAS -> EXPRESION RESIDUO EXPRESION .
    (43) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (44) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (45) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (47) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            reduce using rule 47 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    MAS             reduce using rule 47 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    MENOS           reduce using rule 47 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    MULTIPLICACION  reduce using rule 47 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    DIVIDIR         reduce using rule 47 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    RESIDUO         reduce using rule 47 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    PTCOMA          reduce using rule 47 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)

  ! MAS             [ shift and go to state 93 ]
  ! MENOS           [ shift and go to state 94 ]
  ! MULTIPLICACION  [ shift and go to state 95 ]
  ! DIVIDIR         [ shift and go to state 96 ]
  ! RESIDUO         [ shift and go to state 97 ]


state 127

    (51) LOGICAS -> VALOR ANDL VALOR .

    PARB            reduce using rule 51 (LOGICAS -> VALOR ANDL VALOR .)
    MAS             reduce using rule 51 (LOGICAS -> VALOR ANDL VALOR .)
    MENOS           reduce using rule 51 (LOGICAS -> VALOR ANDL VALOR .)
    MULTIPLICACION  reduce using rule 51 (LOGICAS -> VALOR ANDL VALOR .)
    DIVIDIR         reduce using rule 51 (LOGICAS -> VALOR ANDL VALOR .)
    RESIDUO         reduce using rule 51 (LOGICAS -> VALOR ANDL VALOR .)
    PTCOMA          reduce using rule 51 (LOGICAS -> VALOR ANDL VALOR .)


state 128

    (52) LOGICAS -> VALOR ORL VALOR .

    PARB            reduce using rule 52 (LOGICAS -> VALOR ORL VALOR .)
    MAS             reduce using rule 52 (LOGICAS -> VALOR ORL VALOR .)
    MENOS           reduce using rule 52 (LOGICAS -> VALOR ORL VALOR .)
    MULTIPLICACION  reduce using rule 52 (LOGICAS -> VALOR ORL VALOR .)
    DIVIDIR         reduce using rule 52 (LOGICAS -> VALOR ORL VALOR .)
    RESIDUO         reduce using rule 52 (LOGICAS -> VALOR ORL VALOR .)
    PTCOMA          reduce using rule 52 (LOGICAS -> VALOR ORL VALOR .)


state 129

    (53) LOGICAS -> VALOR XORL VALOR .

    PARB            reduce using rule 53 (LOGICAS -> VALOR XORL VALOR .)
    MAS             reduce using rule 53 (LOGICAS -> VALOR XORL VALOR .)
    MENOS           reduce using rule 53 (LOGICAS -> VALOR XORL VALOR .)
    MULTIPLICACION  reduce using rule 53 (LOGICAS -> VALOR XORL VALOR .)
    DIVIDIR         reduce using rule 53 (LOGICAS -> VALOR XORL VALOR .)
    RESIDUO         reduce using rule 53 (LOGICAS -> VALOR XORL VALOR .)
    PTCOMA          reduce using rule 53 (LOGICAS -> VALOR XORL VALOR .)


state 130

    (55) RELACIONAL -> VALOR IGUALR VALOR .

    PARB            reduce using rule 55 (RELACIONAL -> VALOR IGUALR VALOR .)
    MAS             reduce using rule 55 (RELACIONAL -> VALOR IGUALR VALOR .)
    MENOS           reduce using rule 55 (RELACIONAL -> VALOR IGUALR VALOR .)
    MULTIPLICACION  reduce using rule 55 (RELACIONAL -> VALOR IGUALR VALOR .)
    DIVIDIR         reduce using rule 55 (RELACIONAL -> VALOR IGUALR VALOR .)
    RESIDUO         reduce using rule 55 (RELACIONAL -> VALOR IGUALR VALOR .)
    PTCOMA          reduce using rule 55 (RELACIONAL -> VALOR IGUALR VALOR .)


state 131

    (56) RELACIONAL -> VALOR NOIGUALR VALOR .

    PARB            reduce using rule 56 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    MAS             reduce using rule 56 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    MENOS           reduce using rule 56 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    MULTIPLICACION  reduce using rule 56 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    DIVIDIR         reduce using rule 56 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    RESIDUO         reduce using rule 56 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    PTCOMA          reduce using rule 56 (RELACIONAL -> VALOR NOIGUALR VALOR .)


state 132

    (59) RELACIONAL -> VALOR MAYORR VALOR .

    PARB            reduce using rule 59 (RELACIONAL -> VALOR MAYORR VALOR .)
    MAS             reduce using rule 59 (RELACIONAL -> VALOR MAYORR VALOR .)
    MENOS           reduce using rule 59 (RELACIONAL -> VALOR MAYORR VALOR .)
    MULTIPLICACION  reduce using rule 59 (RELACIONAL -> VALOR MAYORR VALOR .)
    DIVIDIR         reduce using rule 59 (RELACIONAL -> VALOR MAYORR VALOR .)
    RESIDUO         reduce using rule 59 (RELACIONAL -> VALOR MAYORR VALOR .)
    PTCOMA          reduce using rule 59 (RELACIONAL -> VALOR MAYORR VALOR .)


state 133

    (67) BIT -> VALOR MAYORR MAYORR . VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 144
    LLAMADA_ARREGLO                shift and go to state 56

state 134

    (57) RELACIONAL -> VALOR MAYORR IGUAL . VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 145
    LLAMADA_ARREGLO                shift and go to state 56

state 135

    (60) RELACIONAL -> VALOR MENORR VALOR .

    PARB            reduce using rule 60 (RELACIONAL -> VALOR MENORR VALOR .)
    MAS             reduce using rule 60 (RELACIONAL -> VALOR MENORR VALOR .)
    MENOS           reduce using rule 60 (RELACIONAL -> VALOR MENORR VALOR .)
    MULTIPLICACION  reduce using rule 60 (RELACIONAL -> VALOR MENORR VALOR .)
    DIVIDIR         reduce using rule 60 (RELACIONAL -> VALOR MENORR VALOR .)
    RESIDUO         reduce using rule 60 (RELACIONAL -> VALOR MENORR VALOR .)
    PTCOMA          reduce using rule 60 (RELACIONAL -> VALOR MENORR VALOR .)


state 136

    (66) BIT -> VALOR MENORR MENORR . VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 146
    LLAMADA_ARREGLO                shift and go to state 56

state 137

    (58) RELACIONAL -> VALOR MENORR IGUAL . VALOR
    (34) VALOR -> . VARIABLE
    (35) VALOR -> . LLAMADA_ARREGLO
    (36) VALOR -> . INT
    (37) VALOR -> . FLOAT
    (38) VALOR -> . CHAR
    (39) VALOR -> . array PARA PARB
    (40) VALOR -> . read PARA PARB
    (68) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 55
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    CHAR            shift and go to state 59
    array           shift and go to state 60
    read            shift and go to state 61

    VALOR                          shift and go to state 147
    LLAMADA_ARREGLO                shift and go to state 56

state 138

    (63) BIT -> VALOR ANDB VALOR .

    PARB            reduce using rule 63 (BIT -> VALOR ANDB VALOR .)
    MAS             reduce using rule 63 (BIT -> VALOR ANDB VALOR .)
    MENOS           reduce using rule 63 (BIT -> VALOR ANDB VALOR .)
    MULTIPLICACION  reduce using rule 63 (BIT -> VALOR ANDB VALOR .)
    DIVIDIR         reduce using rule 63 (BIT -> VALOR ANDB VALOR .)
    RESIDUO         reduce using rule 63 (BIT -> VALOR ANDB VALOR .)
    PTCOMA          reduce using rule 63 (BIT -> VALOR ANDB VALOR .)


state 139

    (64) BIT -> VALOR ORB VALOR .

    PARB            reduce using rule 64 (BIT -> VALOR ORB VALOR .)
    MAS             reduce using rule 64 (BIT -> VALOR ORB VALOR .)
    MENOS           reduce using rule 64 (BIT -> VALOR ORB VALOR .)
    MULTIPLICACION  reduce using rule 64 (BIT -> VALOR ORB VALOR .)
    DIVIDIR         reduce using rule 64 (BIT -> VALOR ORB VALOR .)
    RESIDUO         reduce using rule 64 (BIT -> VALOR ORB VALOR .)
    PTCOMA          reduce using rule 64 (BIT -> VALOR ORB VALOR .)


state 140

    (65) BIT -> VALOR XORB VALOR .

    PARB            reduce using rule 65 (BIT -> VALOR XORB VALOR .)
    MAS             reduce using rule 65 (BIT -> VALOR XORB VALOR .)
    MENOS           reduce using rule 65 (BIT -> VALOR XORB VALOR .)
    MULTIPLICACION  reduce using rule 65 (BIT -> VALOR XORB VALOR .)
    DIVIDIR         reduce using rule 65 (BIT -> VALOR XORB VALOR .)
    RESIDUO         reduce using rule 65 (BIT -> VALOR XORB VALOR .)
    PTCOMA          reduce using rule 65 (BIT -> VALOR XORB VALOR .)


state 141

    (48) ARITMETICAS -> abs PARA EXPRESION . PARB
    (43) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (44) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (45) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (46) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (47) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            shift and go to state 148
    MAS             shift and go to state 93
    MENOS           shift and go to state 94
    MULTIPLICACION  shift and go to state 95
    DIVIDIR         shift and go to state 96
    RESIDUO         shift and go to state 97


state 142

    (79) ESTRUCTURA_IF -> if PARA EXPRESION PARB goto . ID PTCOMA

    ID              shift and go to state 149


state 143

    (73) CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .

    PARB            reduce using rule 73 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    MAS             reduce using rule 73 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    MENOS           reduce using rule 73 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    MULTIPLICACION  reduce using rule 73 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    DIVIDIR         reduce using rule 73 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    RESIDUO         reduce using rule 73 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    PTCOMA          reduce using rule 73 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)


state 144

    (67) BIT -> VALOR MAYORR MAYORR VALOR .

    PARB            reduce using rule 67 (BIT -> VALOR MAYORR MAYORR VALOR .)
    MAS             reduce using rule 67 (BIT -> VALOR MAYORR MAYORR VALOR .)
    MENOS           reduce using rule 67 (BIT -> VALOR MAYORR MAYORR VALOR .)
    MULTIPLICACION  reduce using rule 67 (BIT -> VALOR MAYORR MAYORR VALOR .)
    DIVIDIR         reduce using rule 67 (BIT -> VALOR MAYORR MAYORR VALOR .)
    RESIDUO         reduce using rule 67 (BIT -> VALOR MAYORR MAYORR VALOR .)
    PTCOMA          reduce using rule 67 (BIT -> VALOR MAYORR MAYORR VALOR .)


state 145

    (57) RELACIONAL -> VALOR MAYORR IGUAL VALOR .

    PARB            reduce using rule 57 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    MAS             reduce using rule 57 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    MENOS           reduce using rule 57 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    MULTIPLICACION  reduce using rule 57 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    DIVIDIR         reduce using rule 57 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    RESIDUO         reduce using rule 57 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    PTCOMA          reduce using rule 57 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)


state 146

    (66) BIT -> VALOR MENORR MENORR VALOR .

    PARB            reduce using rule 66 (BIT -> VALOR MENORR MENORR VALOR .)
    MAS             reduce using rule 66 (BIT -> VALOR MENORR MENORR VALOR .)
    MENOS           reduce using rule 66 (BIT -> VALOR MENORR MENORR VALOR .)
    MULTIPLICACION  reduce using rule 66 (BIT -> VALOR MENORR MENORR VALOR .)
    DIVIDIR         reduce using rule 66 (BIT -> VALOR MENORR MENORR VALOR .)
    RESIDUO         reduce using rule 66 (BIT -> VALOR MENORR MENORR VALOR .)
    PTCOMA          reduce using rule 66 (BIT -> VALOR MENORR MENORR VALOR .)


state 147

    (58) RELACIONAL -> VALOR MENORR IGUAL VALOR .

    PARB            reduce using rule 58 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    MAS             reduce using rule 58 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    MENOS           reduce using rule 58 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    MULTIPLICACION  reduce using rule 58 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    DIVIDIR         reduce using rule 58 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    RESIDUO         reduce using rule 58 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    PTCOMA          reduce using rule 58 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)


state 148

    (48) ARITMETICAS -> abs PARA EXPRESION PARB .

    PARB            reduce using rule 48 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    MAS             reduce using rule 48 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    MENOS           reduce using rule 48 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    MULTIPLICACION  reduce using rule 48 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    DIVIDIR         reduce using rule 48 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    RESIDUO         reduce using rule 48 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    PTCOMA          reduce using rule 48 (ARITMETICAS -> abs PARA EXPRESION PARB .)


state 149

    (79) ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID . PTCOMA

    PTCOMA          shift and go to state 150


state 150

    (79) ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .

    ID              reduce using rule 79 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    error           reduce using rule 79 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    goto            reduce using rule 79 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    unset           reduce using rule 79 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    print           reduce using rule 79 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    if              reduce using rule 79 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    exit            reduce using rule 79 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    VARIABLE        reduce using rule 79 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    $end            reduce using rule 79 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for goto in state 44 resolved as shift
WARNING: shift/reduce conflict for unset in state 44 resolved as shift
WARNING: shift/reduce conflict for print in state 44 resolved as shift
WARNING: shift/reduce conflict for if in state 44 resolved as shift
WARNING: shift/reduce conflict for exit in state 44 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 44 resolved as shift
WARNING: shift/reduce conflict for goto in state 52 resolved as shift
WARNING: shift/reduce conflict for unset in state 52 resolved as shift
WARNING: shift/reduce conflict for print in state 52 resolved as shift
WARNING: shift/reduce conflict for if in state 52 resolved as shift
WARNING: shift/reduce conflict for exit in state 52 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 52 resolved as shift

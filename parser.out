Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NEWLINE

Grammar

Rule 0     S' -> S
Rule 1     S -> ESTRUCTURAMAIN
Rule 2     S -> error
Rule 3     ESTRUCTURAMAIN -> main DOSPUNTOS PRECUERPO1
Rule 4     ESTRUCTURAMAIN -> error DOSPUNTOS PRECUERPO
Rule 5     ESTRUCTURAMAIN -> main error PRECUERPO
Rule 6     ESTRUCTURAMAIN -> main DOSPUNTOS error
Rule 7     PRECUERPO1 -> CUERPO PRECUERPO
Rule 8     PRECUERPO -> CUERPO PRECUERPO1
Rule 9     PRECUERPO -> CUERPO
Rule 10    CUERPO -> ETIQUETA
Rule 11    CUERPO -> GOTO_LABEL
Rule 12    CUERPO -> ASIGNACION
Rule 13    CUERPO -> DESTRUYE_VARIABLE
Rule 14    CUERPO -> IMPRIME
Rule 15    CUERPO -> ESTRUCTURA_IF
Rule 16    CUERPO -> EXIT
Rule 17    CUERPO -> <empty>
Rule 18    PRECUERPOE1 -> CUERPOE PRECUERPOE
Rule 19    PRECUERPOE -> CUERPOE PRECUERPOE1
Rule 20    PRECUERPOE -> CUERPOE
Rule 21    CUERPOE -> GOTO_LABEL
Rule 22    CUERPOE -> ASIGNACION
Rule 23    CUERPOE -> DESTRUYE_VARIABLE
Rule 24    CUERPOE -> IMPRIME
Rule 25    CUERPOE -> ESTRUCTURA_IF
Rule 26    CUERPOE -> EXIT
Rule 27    CUERPOE -> <empty>
Rule 28    ETIQUETA -> ID DOSPUNTOS PRECUERPOE1
Rule 29    ETIQUETA -> error DOSPUNTOS PRECUERPOE1
Rule 30    GOTO_LABEL -> goto ID PTCOMA
Rule 31    ASIGNACION -> NORMAL PTCOMA
Rule 32    ASIGNACION -> ARRAY PTCOMA
Rule 33    NORMAL -> VARIABLE IGUAL EXPRESION
Rule 34    ARRAY -> VARIABLE LISTA_POS IGUAL EXPRESION
Rule 35    EXPRESION -> VALOR
Rule 36    EXPRESION -> error
Rule 37    EXPRESION -> PARA EXPRESION PARB
Rule 38    VALOR -> VARIABLE
Rule 39    VALOR -> LLAMADA_ARREGLO
Rule 40    VALOR -> INT
Rule 41    VALOR -> FLOAT
Rule 42    VALOR -> CHAR
Rule 43    VALOR -> array PARA PARB
Rule 44    VALOR -> read PARA PARB
Rule 45    EXPRESION -> ARITMETICAS
Rule 46    ARITMETICAS -> MENOS VALOR
Rule 47    ARITMETICAS -> EXPRESION MAS EXPRESION
Rule 48    ARITMETICAS -> EXPRESION MENOS EXPRESION
Rule 49    ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION
Rule 50    ARITMETICAS -> EXPRESION DIVIDIR EXPRESION
Rule 51    ARITMETICAS -> EXPRESION RESIDUO EXPRESION
Rule 52    ARITMETICAS -> abs PARA EXPRESION PARB
Rule 53    EXPRESION -> LOGICAS
Rule 54    LOGICAS -> NOTL VALOR
Rule 55    LOGICAS -> VALOR ANDL VALOR
Rule 56    LOGICAS -> VALOR ORL VALOR
Rule 57    LOGICAS -> VALOR XORL VALOR
Rule 58    EXPRESION -> RELACIONAL
Rule 59    RELACIONAL -> VALOR IGUALR VALOR
Rule 60    RELACIONAL -> VALOR NOIGUALR VALOR
Rule 61    RELACIONAL -> VALOR MAYORR IGUAL VALOR
Rule 62    RELACIONAL -> VALOR MENORR IGUAL VALOR
Rule 63    RELACIONAL -> VALOR MAYORR VALOR
Rule 64    RELACIONAL -> VALOR MENORR VALOR
Rule 65    EXPRESION -> BIT
Rule 66    BIT -> NOTB VALOR
Rule 67    BIT -> VALOR ANDB VALOR
Rule 68    BIT -> VALOR ORB VALOR
Rule 69    BIT -> VALOR XORB VALOR
Rule 70    BIT -> VALOR MENORR MENORR VALOR
Rule 71    BIT -> VALOR MAYORR MAYORR VALOR
Rule 72    LLAMADA_ARREGLO -> VARIABLE LISTA_POS
Rule 73    LISTA_POS -> POS LISTA_POS1
Rule 74    LISTA_POS1 -> POS LISTA_POS
Rule 75    LISTA_POS -> POS
Rule 76    LISTA_POS -> <empty>
Rule 77    POS -> CORA VALOR CORB
Rule 78    EXPRESION -> CONVERSION
Rule 79    CONVERSION -> PARA TIPO_CONVERSION PARB VALOR
Rule 80    TIPO_CONVERSION -> int
Rule 81    TIPO_CONVERSION -> char
Rule 82    TIPO_CONVERSION -> float
Rule 83    EXPRESION -> PUNTERO
Rule 84    PUNTERO -> ANDB VARIABLE
Rule 85    ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA
Rule 86    DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA
Rule 87    IMPRIME -> print PARA EXPRESION PARB PTCOMA
Rule 88    EXIT -> exit PTCOMA

Terminals, with rules where they appear

ANDB                 : 67 84
ANDL                 : 55
CHAR                 : 42
CORA                 : 77
CORB                 : 77
DIVIDIR              : 50
DOSPUNTOS            : 3 4 6 28 29
FLOAT                : 41
ID                   : 28 30 85
IGUAL                : 33 34 61 62
IGUALR               : 59
INT                  : 40
MAS                  : 47
MAYORR               : 61 63 71 71
MENORR               : 62 64 70 70
MENOS                : 46 48
MULTIPLICACION       : 49
NEWLINE              : 
NOIGUALR             : 60
NOTB                 : 66
NOTL                 : 54
ORB                  : 68
ORL                  : 56
PARA                 : 37 43 44 52 79 85 86 87
PARB                 : 37 43 44 52 79 85 86 87
PTCOMA               : 30 31 32 85 86 87 88
RESIDUO              : 51
VARIABLE             : 33 34 38 72 84
XORB                 : 69
XORL                 : 57
abs                  : 52
array                : 43
char                 : 81
error                : 2 4 5 6 29 36
exit                 : 88
float                : 82
goto                 : 30 85
if                   : 85
int                  : 80
main                 : 3 5 6
print                : 87
read                 : 44
unset                : 86

Nonterminals, with rules where they appear

ARITMETICAS          : 45
ARRAY                : 32
ASIGNACION           : 12 22
BIT                  : 65
CONVERSION           : 78
CUERPO               : 7 8 9
CUERPOE              : 18 19 20
DESTRUYE_VARIABLE    : 13 23
ESTRUCTURAMAIN       : 1
ESTRUCTURA_IF        : 15 25
ETIQUETA             : 10
EXIT                 : 16 26
EXPRESION            : 33 34 37 47 47 48 48 49 49 50 50 51 51 52 85 87
GOTO_LABEL           : 11 21
IMPRIME              : 14 24
LISTA_POS            : 34 72 74
LISTA_POS1           : 73
LLAMADA_ARREGLO      : 39
LOGICAS              : 53
NORMAL               : 31
POS                  : 73 74 75
PRECUERPO            : 4 5 7
PRECUERPO1           : 3 8
PRECUERPOE           : 18
PRECUERPOE1          : 19 28 29
PUNTERO              : 83
RELACIONAL           : 58
S                    : 0
TIPO_CONVERSION      : 79
VALOR                : 35 46 54 55 55 56 56 57 57 59 59 60 60 61 61 62 62 63 63 64 64 66 67 67 68 68 69 69 70 70 71 71 77 79 86

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . ESTRUCTURAMAIN
    (2) S -> . error
    (3) ESTRUCTURAMAIN -> . main DOSPUNTOS PRECUERPO1
    (4) ESTRUCTURAMAIN -> . error DOSPUNTOS PRECUERPO
    (5) ESTRUCTURAMAIN -> . main error PRECUERPO
    (6) ESTRUCTURAMAIN -> . main DOSPUNTOS error

    error           shift and go to state 3
    main            shift and go to state 4

    S                              shift and go to state 1
    ESTRUCTURAMAIN                 shift and go to state 2

state 1

    (0) S' -> S .



state 2

    (1) S -> ESTRUCTURAMAIN .

    $end            reduce using rule 1 (S -> ESTRUCTURAMAIN .)


state 3

    (2) S -> error .
    (4) ESTRUCTURAMAIN -> error . DOSPUNTOS PRECUERPO

    $end            reduce using rule 2 (S -> error .)
    DOSPUNTOS       shift and go to state 5


state 4

    (3) ESTRUCTURAMAIN -> main . DOSPUNTOS PRECUERPO1
    (5) ESTRUCTURAMAIN -> main . error PRECUERPO
    (6) ESTRUCTURAMAIN -> main . DOSPUNTOS error

    DOSPUNTOS       shift and go to state 6
    error           shift and go to state 7


state 5

    (4) ESTRUCTURAMAIN -> error DOSPUNTOS . PRECUERPO
    (8) PRECUERPO -> . CUERPO PRECUERPO1
    (9) PRECUERPO -> . CUERPO
    (10) CUERPO -> . ETIQUETA
    (11) CUERPO -> . GOTO_LABEL
    (12) CUERPO -> . ASIGNACION
    (13) CUERPO -> . DESTRUYE_VARIABLE
    (14) CUERPO -> . IMPRIME
    (15) CUERPO -> . ESTRUCTURA_IF
    (16) CUERPO -> . EXIT
    (17) CUERPO -> .
    (28) ETIQUETA -> . ID DOSPUNTOS PRECUERPOE1
    (29) ETIQUETA -> . error DOSPUNTOS PRECUERPOE1
    (30) GOTO_LABEL -> . goto ID PTCOMA
    (31) ASIGNACION -> . NORMAL PTCOMA
    (32) ASIGNACION -> . ARRAY PTCOMA
    (86) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (87) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (85) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (88) EXIT -> . exit PTCOMA
    (33) NORMAL -> . VARIABLE IGUAL EXPRESION
    (34) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for goto resolved as shift
  ! shift/reduce conflict for unset resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for exit resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    $end            reduce using rule 17 (CUERPO -> .)
    ID              shift and go to state 18
    error           shift and go to state 8
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

  ! ID              [ reduce using rule 17 (CUERPO -> .) ]
  ! error           [ reduce using rule 17 (CUERPO -> .) ]
  ! goto            [ reduce using rule 17 (CUERPO -> .) ]
  ! unset           [ reduce using rule 17 (CUERPO -> .) ]
  ! print           [ reduce using rule 17 (CUERPO -> .) ]
  ! if              [ reduce using rule 17 (CUERPO -> .) ]
  ! exit            [ reduce using rule 17 (CUERPO -> .) ]
  ! VARIABLE        [ reduce using rule 17 (CUERPO -> .) ]

    PRECUERPO                      shift and go to state 9
    CUERPO                         shift and go to state 10
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 6

    (3) ESTRUCTURAMAIN -> main DOSPUNTOS . PRECUERPO1
    (6) ESTRUCTURAMAIN -> main DOSPUNTOS . error
    (7) PRECUERPO1 -> . CUERPO PRECUERPO
    (10) CUERPO -> . ETIQUETA
    (11) CUERPO -> . GOTO_LABEL
    (12) CUERPO -> . ASIGNACION
    (13) CUERPO -> . DESTRUYE_VARIABLE
    (14) CUERPO -> . IMPRIME
    (15) CUERPO -> . ESTRUCTURA_IF
    (16) CUERPO -> . EXIT
    (17) CUERPO -> .
    (28) ETIQUETA -> . ID DOSPUNTOS PRECUERPOE1
    (29) ETIQUETA -> . error DOSPUNTOS PRECUERPOE1
    (30) GOTO_LABEL -> . goto ID PTCOMA
    (31) ASIGNACION -> . NORMAL PTCOMA
    (32) ASIGNACION -> . ARRAY PTCOMA
    (86) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (87) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (85) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (88) EXIT -> . exit PTCOMA
    (33) NORMAL -> . VARIABLE IGUAL EXPRESION
    (34) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for goto resolved as shift
  ! shift/reduce conflict for unset resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for exit resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    error           shift and go to state 28
    $end            reduce using rule 17 (CUERPO -> .)
    ID              shift and go to state 18
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

  ! ID              [ reduce using rule 17 (CUERPO -> .) ]
  ! error           [ reduce using rule 17 (CUERPO -> .) ]
  ! goto            [ reduce using rule 17 (CUERPO -> .) ]
  ! unset           [ reduce using rule 17 (CUERPO -> .) ]
  ! print           [ reduce using rule 17 (CUERPO -> .) ]
  ! if              [ reduce using rule 17 (CUERPO -> .) ]
  ! exit            [ reduce using rule 17 (CUERPO -> .) ]
  ! VARIABLE        [ reduce using rule 17 (CUERPO -> .) ]

    PRECUERPO1                     shift and go to state 27
    CUERPO                         shift and go to state 29
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 7

    (5) ESTRUCTURAMAIN -> main error . PRECUERPO
    (8) PRECUERPO -> . CUERPO PRECUERPO1
    (9) PRECUERPO -> . CUERPO
    (10) CUERPO -> . ETIQUETA
    (11) CUERPO -> . GOTO_LABEL
    (12) CUERPO -> . ASIGNACION
    (13) CUERPO -> . DESTRUYE_VARIABLE
    (14) CUERPO -> . IMPRIME
    (15) CUERPO -> . ESTRUCTURA_IF
    (16) CUERPO -> . EXIT
    (17) CUERPO -> .
    (28) ETIQUETA -> . ID DOSPUNTOS PRECUERPOE1
    (29) ETIQUETA -> . error DOSPUNTOS PRECUERPOE1
    (30) GOTO_LABEL -> . goto ID PTCOMA
    (31) ASIGNACION -> . NORMAL PTCOMA
    (32) ASIGNACION -> . ARRAY PTCOMA
    (86) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (87) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (85) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (88) EXIT -> . exit PTCOMA
    (33) NORMAL -> . VARIABLE IGUAL EXPRESION
    (34) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for goto resolved as shift
  ! shift/reduce conflict for unset resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for exit resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    $end            reduce using rule 17 (CUERPO -> .)
    ID              shift and go to state 18
    error           shift and go to state 8
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

  ! ID              [ reduce using rule 17 (CUERPO -> .) ]
  ! error           [ reduce using rule 17 (CUERPO -> .) ]
  ! goto            [ reduce using rule 17 (CUERPO -> .) ]
  ! unset           [ reduce using rule 17 (CUERPO -> .) ]
  ! print           [ reduce using rule 17 (CUERPO -> .) ]
  ! if              [ reduce using rule 17 (CUERPO -> .) ]
  ! exit            [ reduce using rule 17 (CUERPO -> .) ]
  ! VARIABLE        [ reduce using rule 17 (CUERPO -> .) ]

    PRECUERPO                      shift and go to state 30
    CUERPO                         shift and go to state 10
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 8

    (29) ETIQUETA -> error . DOSPUNTOS PRECUERPOE1

    DOSPUNTOS       shift and go to state 31


state 9

    (4) ESTRUCTURAMAIN -> error DOSPUNTOS PRECUERPO .

    $end            reduce using rule 4 (ESTRUCTURAMAIN -> error DOSPUNTOS PRECUERPO .)


state 10

    (8) PRECUERPO -> CUERPO . PRECUERPO1
    (9) PRECUERPO -> CUERPO .
    (7) PRECUERPO1 -> . CUERPO PRECUERPO
    (10) CUERPO -> . ETIQUETA
    (11) CUERPO -> . GOTO_LABEL
    (12) CUERPO -> . ASIGNACION
    (13) CUERPO -> . DESTRUYE_VARIABLE
    (14) CUERPO -> . IMPRIME
    (15) CUERPO -> . ESTRUCTURA_IF
    (16) CUERPO -> . EXIT
    (17) CUERPO -> .
    (28) ETIQUETA -> . ID DOSPUNTOS PRECUERPOE1
    (29) ETIQUETA -> . error DOSPUNTOS PRECUERPOE1
    (30) GOTO_LABEL -> . goto ID PTCOMA
    (31) ASIGNACION -> . NORMAL PTCOMA
    (32) ASIGNACION -> . ARRAY PTCOMA
    (86) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (87) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (85) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (88) EXIT -> . exit PTCOMA
    (33) NORMAL -> . VARIABLE IGUAL EXPRESION
    (34) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

  ! reduce/reduce conflict for $end resolved using rule 9 (PRECUERPO -> CUERPO .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for goto resolved as shift
  ! shift/reduce conflict for unset resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for exit resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    $end            reduce using rule 9 (PRECUERPO -> CUERPO .)
    ID              shift and go to state 18
    error           shift and go to state 8
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

  ! ID              [ reduce using rule 17 (CUERPO -> .) ]
  ! error           [ reduce using rule 17 (CUERPO -> .) ]
  ! goto            [ reduce using rule 17 (CUERPO -> .) ]
  ! unset           [ reduce using rule 17 (CUERPO -> .) ]
  ! print           [ reduce using rule 17 (CUERPO -> .) ]
  ! if              [ reduce using rule 17 (CUERPO -> .) ]
  ! exit            [ reduce using rule 17 (CUERPO -> .) ]
  ! VARIABLE        [ reduce using rule 17 (CUERPO -> .) ]
  ! $end            [ reduce using rule 17 (CUERPO -> .) ]

    CUERPO                         shift and go to state 29
    PRECUERPO1                     shift and go to state 32
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 11

    (10) CUERPO -> ETIQUETA .

    ID              reduce using rule 10 (CUERPO -> ETIQUETA .)
    error           reduce using rule 10 (CUERPO -> ETIQUETA .)
    goto            reduce using rule 10 (CUERPO -> ETIQUETA .)
    unset           reduce using rule 10 (CUERPO -> ETIQUETA .)
    print           reduce using rule 10 (CUERPO -> ETIQUETA .)
    if              reduce using rule 10 (CUERPO -> ETIQUETA .)
    exit            reduce using rule 10 (CUERPO -> ETIQUETA .)
    VARIABLE        reduce using rule 10 (CUERPO -> ETIQUETA .)
    $end            reduce using rule 10 (CUERPO -> ETIQUETA .)


state 12

    (11) CUERPO -> GOTO_LABEL .

    ID              reduce using rule 11 (CUERPO -> GOTO_LABEL .)
    error           reduce using rule 11 (CUERPO -> GOTO_LABEL .)
    goto            reduce using rule 11 (CUERPO -> GOTO_LABEL .)
    unset           reduce using rule 11 (CUERPO -> GOTO_LABEL .)
    print           reduce using rule 11 (CUERPO -> GOTO_LABEL .)
    if              reduce using rule 11 (CUERPO -> GOTO_LABEL .)
    exit            reduce using rule 11 (CUERPO -> GOTO_LABEL .)
    VARIABLE        reduce using rule 11 (CUERPO -> GOTO_LABEL .)
    $end            reduce using rule 11 (CUERPO -> GOTO_LABEL .)


state 13

    (12) CUERPO -> ASIGNACION .

    ID              reduce using rule 12 (CUERPO -> ASIGNACION .)
    error           reduce using rule 12 (CUERPO -> ASIGNACION .)
    goto            reduce using rule 12 (CUERPO -> ASIGNACION .)
    unset           reduce using rule 12 (CUERPO -> ASIGNACION .)
    print           reduce using rule 12 (CUERPO -> ASIGNACION .)
    if              reduce using rule 12 (CUERPO -> ASIGNACION .)
    exit            reduce using rule 12 (CUERPO -> ASIGNACION .)
    VARIABLE        reduce using rule 12 (CUERPO -> ASIGNACION .)
    $end            reduce using rule 12 (CUERPO -> ASIGNACION .)


state 14

    (13) CUERPO -> DESTRUYE_VARIABLE .

    ID              reduce using rule 13 (CUERPO -> DESTRUYE_VARIABLE .)
    error           reduce using rule 13 (CUERPO -> DESTRUYE_VARIABLE .)
    goto            reduce using rule 13 (CUERPO -> DESTRUYE_VARIABLE .)
    unset           reduce using rule 13 (CUERPO -> DESTRUYE_VARIABLE .)
    print           reduce using rule 13 (CUERPO -> DESTRUYE_VARIABLE .)
    if              reduce using rule 13 (CUERPO -> DESTRUYE_VARIABLE .)
    exit            reduce using rule 13 (CUERPO -> DESTRUYE_VARIABLE .)
    VARIABLE        reduce using rule 13 (CUERPO -> DESTRUYE_VARIABLE .)
    $end            reduce using rule 13 (CUERPO -> DESTRUYE_VARIABLE .)


state 15

    (14) CUERPO -> IMPRIME .

    ID              reduce using rule 14 (CUERPO -> IMPRIME .)
    error           reduce using rule 14 (CUERPO -> IMPRIME .)
    goto            reduce using rule 14 (CUERPO -> IMPRIME .)
    unset           reduce using rule 14 (CUERPO -> IMPRIME .)
    print           reduce using rule 14 (CUERPO -> IMPRIME .)
    if              reduce using rule 14 (CUERPO -> IMPRIME .)
    exit            reduce using rule 14 (CUERPO -> IMPRIME .)
    VARIABLE        reduce using rule 14 (CUERPO -> IMPRIME .)
    $end            reduce using rule 14 (CUERPO -> IMPRIME .)


state 16

    (15) CUERPO -> ESTRUCTURA_IF .

    ID              reduce using rule 15 (CUERPO -> ESTRUCTURA_IF .)
    error           reduce using rule 15 (CUERPO -> ESTRUCTURA_IF .)
    goto            reduce using rule 15 (CUERPO -> ESTRUCTURA_IF .)
    unset           reduce using rule 15 (CUERPO -> ESTRUCTURA_IF .)
    print           reduce using rule 15 (CUERPO -> ESTRUCTURA_IF .)
    if              reduce using rule 15 (CUERPO -> ESTRUCTURA_IF .)
    exit            reduce using rule 15 (CUERPO -> ESTRUCTURA_IF .)
    VARIABLE        reduce using rule 15 (CUERPO -> ESTRUCTURA_IF .)
    $end            reduce using rule 15 (CUERPO -> ESTRUCTURA_IF .)


state 17

    (16) CUERPO -> EXIT .

    ID              reduce using rule 16 (CUERPO -> EXIT .)
    error           reduce using rule 16 (CUERPO -> EXIT .)
    goto            reduce using rule 16 (CUERPO -> EXIT .)
    unset           reduce using rule 16 (CUERPO -> EXIT .)
    print           reduce using rule 16 (CUERPO -> EXIT .)
    if              reduce using rule 16 (CUERPO -> EXIT .)
    exit            reduce using rule 16 (CUERPO -> EXIT .)
    VARIABLE        reduce using rule 16 (CUERPO -> EXIT .)
    $end            reduce using rule 16 (CUERPO -> EXIT .)


state 18

    (28) ETIQUETA -> ID . DOSPUNTOS PRECUERPOE1

    DOSPUNTOS       shift and go to state 33


state 19

    (30) GOTO_LABEL -> goto . ID PTCOMA

    ID              shift and go to state 34


state 20

    (31) ASIGNACION -> NORMAL . PTCOMA

    PTCOMA          shift and go to state 35


state 21

    (32) ASIGNACION -> ARRAY . PTCOMA

    PTCOMA          shift and go to state 36


state 22

    (86) DESTRUYE_VARIABLE -> unset . PARA VALOR PARB PTCOMA

    PARA            shift and go to state 37


state 23

    (87) IMPRIME -> print . PARA EXPRESION PARB PTCOMA

    PARA            shift and go to state 38


state 24

    (85) ESTRUCTURA_IF -> if . PARA EXPRESION PARB goto ID PTCOMA

    PARA            shift and go to state 39


state 25

    (88) EXIT -> exit . PTCOMA

    PTCOMA          shift and go to state 40


state 26

    (33) NORMAL -> VARIABLE . IGUAL EXPRESION
    (34) ARRAY -> VARIABLE . LISTA_POS IGUAL EXPRESION
    (73) LISTA_POS -> . POS LISTA_POS1
    (75) LISTA_POS -> . POS
    (76) LISTA_POS -> .
    (77) POS -> . CORA VALOR CORB

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 41
    CORA            shift and go to state 44

  ! IGUAL           [ reduce using rule 76 (LISTA_POS -> .) ]

    LISTA_POS                      shift and go to state 42
    POS                            shift and go to state 43

state 27

    (3) ESTRUCTURAMAIN -> main DOSPUNTOS PRECUERPO1 .

    $end            reduce using rule 3 (ESTRUCTURAMAIN -> main DOSPUNTOS PRECUERPO1 .)


state 28

    (6) ESTRUCTURAMAIN -> main DOSPUNTOS error .
    (29) ETIQUETA -> error . DOSPUNTOS PRECUERPOE1

    $end            reduce using rule 6 (ESTRUCTURAMAIN -> main DOSPUNTOS error .)
    DOSPUNTOS       shift and go to state 31


state 29

    (7) PRECUERPO1 -> CUERPO . PRECUERPO
    (8) PRECUERPO -> . CUERPO PRECUERPO1
    (9) PRECUERPO -> . CUERPO
    (10) CUERPO -> . ETIQUETA
    (11) CUERPO -> . GOTO_LABEL
    (12) CUERPO -> . ASIGNACION
    (13) CUERPO -> . DESTRUYE_VARIABLE
    (14) CUERPO -> . IMPRIME
    (15) CUERPO -> . ESTRUCTURA_IF
    (16) CUERPO -> . EXIT
    (17) CUERPO -> .
    (28) ETIQUETA -> . ID DOSPUNTOS PRECUERPOE1
    (29) ETIQUETA -> . error DOSPUNTOS PRECUERPOE1
    (30) GOTO_LABEL -> . goto ID PTCOMA
    (31) ASIGNACION -> . NORMAL PTCOMA
    (32) ASIGNACION -> . ARRAY PTCOMA
    (86) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (87) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (85) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (88) EXIT -> . exit PTCOMA
    (33) NORMAL -> . VARIABLE IGUAL EXPRESION
    (34) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for goto resolved as shift
  ! shift/reduce conflict for unset resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for exit resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    $end            reduce using rule 17 (CUERPO -> .)
    ID              shift and go to state 18
    error           shift and go to state 8
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

  ! ID              [ reduce using rule 17 (CUERPO -> .) ]
  ! error           [ reduce using rule 17 (CUERPO -> .) ]
  ! goto            [ reduce using rule 17 (CUERPO -> .) ]
  ! unset           [ reduce using rule 17 (CUERPO -> .) ]
  ! print           [ reduce using rule 17 (CUERPO -> .) ]
  ! if              [ reduce using rule 17 (CUERPO -> .) ]
  ! exit            [ reduce using rule 17 (CUERPO -> .) ]
  ! VARIABLE        [ reduce using rule 17 (CUERPO -> .) ]

    CUERPO                         shift and go to state 10
    PRECUERPO                      shift and go to state 45
    ETIQUETA                       shift and go to state 11
    GOTO_LABEL                     shift and go to state 12
    ASIGNACION                     shift and go to state 13
    DESTRUYE_VARIABLE              shift and go to state 14
    IMPRIME                        shift and go to state 15
    ESTRUCTURA_IF                  shift and go to state 16
    EXIT                           shift and go to state 17
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 30

    (5) ESTRUCTURAMAIN -> main error PRECUERPO .

    $end            reduce using rule 5 (ESTRUCTURAMAIN -> main error PRECUERPO .)


state 31

    (29) ETIQUETA -> error DOSPUNTOS . PRECUERPOE1
    (18) PRECUERPOE1 -> . CUERPOE PRECUERPOE
    (21) CUERPOE -> . GOTO_LABEL
    (22) CUERPOE -> . ASIGNACION
    (23) CUERPOE -> . DESTRUYE_VARIABLE
    (24) CUERPOE -> . IMPRIME
    (25) CUERPOE -> . ESTRUCTURA_IF
    (26) CUERPOE -> . EXIT
    (27) CUERPOE -> .
    (30) GOTO_LABEL -> . goto ID PTCOMA
    (31) ASIGNACION -> . NORMAL PTCOMA
    (32) ASIGNACION -> . ARRAY PTCOMA
    (86) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (87) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (85) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (88) EXIT -> . exit PTCOMA
    (33) NORMAL -> . VARIABLE IGUAL EXPRESION
    (34) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

  ! shift/reduce conflict for goto resolved as shift
  ! shift/reduce conflict for unset resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for exit resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    ID              reduce using rule 27 (CUERPOE -> .)
    error           reduce using rule 27 (CUERPOE -> .)
    $end            reduce using rule 27 (CUERPOE -> .)
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

  ! goto            [ reduce using rule 27 (CUERPOE -> .) ]
  ! unset           [ reduce using rule 27 (CUERPOE -> .) ]
  ! print           [ reduce using rule 27 (CUERPOE -> .) ]
  ! if              [ reduce using rule 27 (CUERPOE -> .) ]
  ! exit            [ reduce using rule 27 (CUERPOE -> .) ]
  ! VARIABLE        [ reduce using rule 27 (CUERPOE -> .) ]

    PRECUERPOE1                    shift and go to state 46
    CUERPOE                        shift and go to state 47
    GOTO_LABEL                     shift and go to state 48
    ASIGNACION                     shift and go to state 49
    DESTRUYE_VARIABLE              shift and go to state 50
    IMPRIME                        shift and go to state 51
    ESTRUCTURA_IF                  shift and go to state 52
    EXIT                           shift and go to state 53
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 32

    (8) PRECUERPO -> CUERPO PRECUERPO1 .

    $end            reduce using rule 8 (PRECUERPO -> CUERPO PRECUERPO1 .)


state 33

    (28) ETIQUETA -> ID DOSPUNTOS . PRECUERPOE1
    (18) PRECUERPOE1 -> . CUERPOE PRECUERPOE
    (21) CUERPOE -> . GOTO_LABEL
    (22) CUERPOE -> . ASIGNACION
    (23) CUERPOE -> . DESTRUYE_VARIABLE
    (24) CUERPOE -> . IMPRIME
    (25) CUERPOE -> . ESTRUCTURA_IF
    (26) CUERPOE -> . EXIT
    (27) CUERPOE -> .
    (30) GOTO_LABEL -> . goto ID PTCOMA
    (31) ASIGNACION -> . NORMAL PTCOMA
    (32) ASIGNACION -> . ARRAY PTCOMA
    (86) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (87) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (85) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (88) EXIT -> . exit PTCOMA
    (33) NORMAL -> . VARIABLE IGUAL EXPRESION
    (34) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

  ! shift/reduce conflict for goto resolved as shift
  ! shift/reduce conflict for unset resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for exit resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    ID              reduce using rule 27 (CUERPOE -> .)
    error           reduce using rule 27 (CUERPOE -> .)
    $end            reduce using rule 27 (CUERPOE -> .)
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

  ! goto            [ reduce using rule 27 (CUERPOE -> .) ]
  ! unset           [ reduce using rule 27 (CUERPOE -> .) ]
  ! print           [ reduce using rule 27 (CUERPOE -> .) ]
  ! if              [ reduce using rule 27 (CUERPOE -> .) ]
  ! exit            [ reduce using rule 27 (CUERPOE -> .) ]
  ! VARIABLE        [ reduce using rule 27 (CUERPOE -> .) ]

    PRECUERPOE1                    shift and go to state 54
    CUERPOE                        shift and go to state 47
    GOTO_LABEL                     shift and go to state 48
    ASIGNACION                     shift and go to state 49
    DESTRUYE_VARIABLE              shift and go to state 50
    IMPRIME                        shift and go to state 51
    ESTRUCTURA_IF                  shift and go to state 52
    EXIT                           shift and go to state 53
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 34

    (30) GOTO_LABEL -> goto ID . PTCOMA

    PTCOMA          shift and go to state 55


state 35

    (31) ASIGNACION -> NORMAL PTCOMA .

    ID              reduce using rule 31 (ASIGNACION -> NORMAL PTCOMA .)
    error           reduce using rule 31 (ASIGNACION -> NORMAL PTCOMA .)
    goto            reduce using rule 31 (ASIGNACION -> NORMAL PTCOMA .)
    unset           reduce using rule 31 (ASIGNACION -> NORMAL PTCOMA .)
    print           reduce using rule 31 (ASIGNACION -> NORMAL PTCOMA .)
    if              reduce using rule 31 (ASIGNACION -> NORMAL PTCOMA .)
    exit            reduce using rule 31 (ASIGNACION -> NORMAL PTCOMA .)
    VARIABLE        reduce using rule 31 (ASIGNACION -> NORMAL PTCOMA .)
    $end            reduce using rule 31 (ASIGNACION -> NORMAL PTCOMA .)


state 36

    (32) ASIGNACION -> ARRAY PTCOMA .

    ID              reduce using rule 32 (ASIGNACION -> ARRAY PTCOMA .)
    error           reduce using rule 32 (ASIGNACION -> ARRAY PTCOMA .)
    goto            reduce using rule 32 (ASIGNACION -> ARRAY PTCOMA .)
    unset           reduce using rule 32 (ASIGNACION -> ARRAY PTCOMA .)
    print           reduce using rule 32 (ASIGNACION -> ARRAY PTCOMA .)
    if              reduce using rule 32 (ASIGNACION -> ARRAY PTCOMA .)
    exit            reduce using rule 32 (ASIGNACION -> ARRAY PTCOMA .)
    VARIABLE        reduce using rule 32 (ASIGNACION -> ARRAY PTCOMA .)
    $end            reduce using rule 32 (ASIGNACION -> ARRAY PTCOMA .)


state 37

    (86) DESTRUYE_VARIABLE -> unset PARA . VALOR PARB PTCOMA
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 56
    LLAMADA_ARREGLO                shift and go to state 58

state 38

    (87) IMPRIME -> print PARA . EXPRESION PARB PTCOMA
    (35) EXPRESION -> . VALOR
    (36) EXPRESION -> . error
    (37) EXPRESION -> . PARA EXPRESION PARB
    (45) EXPRESION -> . ARITMETICAS
    (53) EXPRESION -> . LOGICAS
    (58) EXPRESION -> . RELACIONAL
    (65) EXPRESION -> . BIT
    (78) EXPRESION -> . CONVERSION
    (83) EXPRESION -> . PUNTERO
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (46) ARITMETICAS -> . MENOS VALOR
    (47) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (48) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (49) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (51) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (52) ARITMETICAS -> . abs PARA EXPRESION PARB
    (54) LOGICAS -> . NOTL VALOR
    (55) LOGICAS -> . VALOR ANDL VALOR
    (56) LOGICAS -> . VALOR ORL VALOR
    (57) LOGICAS -> . VALOR XORL VALOR
    (59) RELACIONAL -> . VALOR IGUALR VALOR
    (60) RELACIONAL -> . VALOR NOIGUALR VALOR
    (61) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (62) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (63) RELACIONAL -> . VALOR MAYORR VALOR
    (64) RELACIONAL -> . VALOR MENORR VALOR
    (66) BIT -> . NOTB VALOR
    (67) BIT -> . VALOR ANDB VALOR
    (68) BIT -> . VALOR ORB VALOR
    (69) BIT -> . VALOR XORB VALOR
    (70) BIT -> . VALOR MENORR MENORR VALOR
    (71) BIT -> . VALOR MAYORR MAYORR VALOR
    (79) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (84) PUNTERO -> . ANDB VARIABLE
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 67
    PARA            shift and go to state 64
    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63
    MENOS           shift and go to state 74
    abs             shift and go to state 75
    NOTL            shift and go to state 76
    NOTB            shift and go to state 77
    ANDB            shift and go to state 78

    EXPRESION                      shift and go to state 65
    VALOR                          shift and go to state 66
    ARITMETICAS                    shift and go to state 68
    LOGICAS                        shift and go to state 69
    RELACIONAL                     shift and go to state 70
    BIT                            shift and go to state 71
    CONVERSION                     shift and go to state 72
    PUNTERO                        shift and go to state 73
    LLAMADA_ARREGLO                shift and go to state 58

state 39

    (85) ESTRUCTURA_IF -> if PARA . EXPRESION PARB goto ID PTCOMA
    (35) EXPRESION -> . VALOR
    (36) EXPRESION -> . error
    (37) EXPRESION -> . PARA EXPRESION PARB
    (45) EXPRESION -> . ARITMETICAS
    (53) EXPRESION -> . LOGICAS
    (58) EXPRESION -> . RELACIONAL
    (65) EXPRESION -> . BIT
    (78) EXPRESION -> . CONVERSION
    (83) EXPRESION -> . PUNTERO
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (46) ARITMETICAS -> . MENOS VALOR
    (47) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (48) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (49) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (51) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (52) ARITMETICAS -> . abs PARA EXPRESION PARB
    (54) LOGICAS -> . NOTL VALOR
    (55) LOGICAS -> . VALOR ANDL VALOR
    (56) LOGICAS -> . VALOR ORL VALOR
    (57) LOGICAS -> . VALOR XORL VALOR
    (59) RELACIONAL -> . VALOR IGUALR VALOR
    (60) RELACIONAL -> . VALOR NOIGUALR VALOR
    (61) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (62) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (63) RELACIONAL -> . VALOR MAYORR VALOR
    (64) RELACIONAL -> . VALOR MENORR VALOR
    (66) BIT -> . NOTB VALOR
    (67) BIT -> . VALOR ANDB VALOR
    (68) BIT -> . VALOR ORB VALOR
    (69) BIT -> . VALOR XORB VALOR
    (70) BIT -> . VALOR MENORR MENORR VALOR
    (71) BIT -> . VALOR MAYORR MAYORR VALOR
    (79) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (84) PUNTERO -> . ANDB VARIABLE
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 67
    PARA            shift and go to state 64
    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63
    MENOS           shift and go to state 74
    abs             shift and go to state 75
    NOTL            shift and go to state 76
    NOTB            shift and go to state 77
    ANDB            shift and go to state 78

    EXPRESION                      shift and go to state 79
    VALOR                          shift and go to state 66
    ARITMETICAS                    shift and go to state 68
    LOGICAS                        shift and go to state 69
    RELACIONAL                     shift and go to state 70
    BIT                            shift and go to state 71
    CONVERSION                     shift and go to state 72
    PUNTERO                        shift and go to state 73
    LLAMADA_ARREGLO                shift and go to state 58

state 40

    (88) EXIT -> exit PTCOMA .

    ID              reduce using rule 88 (EXIT -> exit PTCOMA .)
    error           reduce using rule 88 (EXIT -> exit PTCOMA .)
    goto            reduce using rule 88 (EXIT -> exit PTCOMA .)
    unset           reduce using rule 88 (EXIT -> exit PTCOMA .)
    print           reduce using rule 88 (EXIT -> exit PTCOMA .)
    if              reduce using rule 88 (EXIT -> exit PTCOMA .)
    exit            reduce using rule 88 (EXIT -> exit PTCOMA .)
    VARIABLE        reduce using rule 88 (EXIT -> exit PTCOMA .)
    $end            reduce using rule 88 (EXIT -> exit PTCOMA .)


state 41

    (33) NORMAL -> VARIABLE IGUAL . EXPRESION
    (35) EXPRESION -> . VALOR
    (36) EXPRESION -> . error
    (37) EXPRESION -> . PARA EXPRESION PARB
    (45) EXPRESION -> . ARITMETICAS
    (53) EXPRESION -> . LOGICAS
    (58) EXPRESION -> . RELACIONAL
    (65) EXPRESION -> . BIT
    (78) EXPRESION -> . CONVERSION
    (83) EXPRESION -> . PUNTERO
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (46) ARITMETICAS -> . MENOS VALOR
    (47) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (48) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (49) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (51) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (52) ARITMETICAS -> . abs PARA EXPRESION PARB
    (54) LOGICAS -> . NOTL VALOR
    (55) LOGICAS -> . VALOR ANDL VALOR
    (56) LOGICAS -> . VALOR ORL VALOR
    (57) LOGICAS -> . VALOR XORL VALOR
    (59) RELACIONAL -> . VALOR IGUALR VALOR
    (60) RELACIONAL -> . VALOR NOIGUALR VALOR
    (61) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (62) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (63) RELACIONAL -> . VALOR MAYORR VALOR
    (64) RELACIONAL -> . VALOR MENORR VALOR
    (66) BIT -> . NOTB VALOR
    (67) BIT -> . VALOR ANDB VALOR
    (68) BIT -> . VALOR ORB VALOR
    (69) BIT -> . VALOR XORB VALOR
    (70) BIT -> . VALOR MENORR MENORR VALOR
    (71) BIT -> . VALOR MAYORR MAYORR VALOR
    (79) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (84) PUNTERO -> . ANDB VARIABLE
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 67
    PARA            shift and go to state 64
    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63
    MENOS           shift and go to state 74
    abs             shift and go to state 75
    NOTL            shift and go to state 76
    NOTB            shift and go to state 77
    ANDB            shift and go to state 78

    EXPRESION                      shift and go to state 80
    VALOR                          shift and go to state 66
    ARITMETICAS                    shift and go to state 68
    LOGICAS                        shift and go to state 69
    RELACIONAL                     shift and go to state 70
    BIT                            shift and go to state 71
    CONVERSION                     shift and go to state 72
    PUNTERO                        shift and go to state 73
    LLAMADA_ARREGLO                shift and go to state 58

state 42

    (34) ARRAY -> VARIABLE LISTA_POS . IGUAL EXPRESION

    IGUAL           shift and go to state 81


state 43

    (73) LISTA_POS -> POS . LISTA_POS1
    (75) LISTA_POS -> POS .
    (74) LISTA_POS1 -> . POS LISTA_POS
    (77) POS -> . CORA VALOR CORB

    IGUAL           reduce using rule 75 (LISTA_POS -> POS .)
    PARB            reduce using rule 75 (LISTA_POS -> POS .)
    ANDL            reduce using rule 75 (LISTA_POS -> POS .)
    ORL             reduce using rule 75 (LISTA_POS -> POS .)
    XORL            reduce using rule 75 (LISTA_POS -> POS .)
    IGUALR          reduce using rule 75 (LISTA_POS -> POS .)
    NOIGUALR        reduce using rule 75 (LISTA_POS -> POS .)
    MAYORR          reduce using rule 75 (LISTA_POS -> POS .)
    MENORR          reduce using rule 75 (LISTA_POS -> POS .)
    ANDB            reduce using rule 75 (LISTA_POS -> POS .)
    ORB             reduce using rule 75 (LISTA_POS -> POS .)
    XORB            reduce using rule 75 (LISTA_POS -> POS .)
    MAS             reduce using rule 75 (LISTA_POS -> POS .)
    MENOS           reduce using rule 75 (LISTA_POS -> POS .)
    MULTIPLICACION  reduce using rule 75 (LISTA_POS -> POS .)
    DIVIDIR         reduce using rule 75 (LISTA_POS -> POS .)
    RESIDUO         reduce using rule 75 (LISTA_POS -> POS .)
    PTCOMA          reduce using rule 75 (LISTA_POS -> POS .)
    CORB            reduce using rule 75 (LISTA_POS -> POS .)
    CORA            shift and go to state 44

    POS                            shift and go to state 82
    LISTA_POS1                     shift and go to state 83

state 44

    (77) POS -> CORA . VALOR CORB
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 84
    LLAMADA_ARREGLO                shift and go to state 58

state 45

    (7) PRECUERPO1 -> CUERPO PRECUERPO .

    $end            reduce using rule 7 (PRECUERPO1 -> CUERPO PRECUERPO .)


state 46

    (29) ETIQUETA -> error DOSPUNTOS PRECUERPOE1 .

    ID              reduce using rule 29 (ETIQUETA -> error DOSPUNTOS PRECUERPOE1 .)
    error           reduce using rule 29 (ETIQUETA -> error DOSPUNTOS PRECUERPOE1 .)
    goto            reduce using rule 29 (ETIQUETA -> error DOSPUNTOS PRECUERPOE1 .)
    unset           reduce using rule 29 (ETIQUETA -> error DOSPUNTOS PRECUERPOE1 .)
    print           reduce using rule 29 (ETIQUETA -> error DOSPUNTOS PRECUERPOE1 .)
    if              reduce using rule 29 (ETIQUETA -> error DOSPUNTOS PRECUERPOE1 .)
    exit            reduce using rule 29 (ETIQUETA -> error DOSPUNTOS PRECUERPOE1 .)
    VARIABLE        reduce using rule 29 (ETIQUETA -> error DOSPUNTOS PRECUERPOE1 .)
    $end            reduce using rule 29 (ETIQUETA -> error DOSPUNTOS PRECUERPOE1 .)


state 47

    (18) PRECUERPOE1 -> CUERPOE . PRECUERPOE
    (19) PRECUERPOE -> . CUERPOE PRECUERPOE1
    (20) PRECUERPOE -> . CUERPOE
    (21) CUERPOE -> . GOTO_LABEL
    (22) CUERPOE -> . ASIGNACION
    (23) CUERPOE -> . DESTRUYE_VARIABLE
    (24) CUERPOE -> . IMPRIME
    (25) CUERPOE -> . ESTRUCTURA_IF
    (26) CUERPOE -> . EXIT
    (27) CUERPOE -> .
    (30) GOTO_LABEL -> . goto ID PTCOMA
    (31) ASIGNACION -> . NORMAL PTCOMA
    (32) ASIGNACION -> . ARRAY PTCOMA
    (86) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (87) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (85) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (88) EXIT -> . exit PTCOMA
    (33) NORMAL -> . VARIABLE IGUAL EXPRESION
    (34) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

  ! shift/reduce conflict for goto resolved as shift
  ! shift/reduce conflict for unset resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for exit resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    ID              reduce using rule 27 (CUERPOE -> .)
    error           reduce using rule 27 (CUERPOE -> .)
    $end            reduce using rule 27 (CUERPOE -> .)
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

  ! goto            [ reduce using rule 27 (CUERPOE -> .) ]
  ! unset           [ reduce using rule 27 (CUERPOE -> .) ]
  ! print           [ reduce using rule 27 (CUERPOE -> .) ]
  ! if              [ reduce using rule 27 (CUERPOE -> .) ]
  ! exit            [ reduce using rule 27 (CUERPOE -> .) ]
  ! VARIABLE        [ reduce using rule 27 (CUERPOE -> .) ]

    CUERPOE                        shift and go to state 85
    PRECUERPOE                     shift and go to state 86
    GOTO_LABEL                     shift and go to state 48
    ASIGNACION                     shift and go to state 49
    DESTRUYE_VARIABLE              shift and go to state 50
    IMPRIME                        shift and go to state 51
    ESTRUCTURA_IF                  shift and go to state 52
    EXIT                           shift and go to state 53
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 48

    (21) CUERPOE -> GOTO_LABEL .

    goto            reduce using rule 21 (CUERPOE -> GOTO_LABEL .)
    unset           reduce using rule 21 (CUERPOE -> GOTO_LABEL .)
    print           reduce using rule 21 (CUERPOE -> GOTO_LABEL .)
    if              reduce using rule 21 (CUERPOE -> GOTO_LABEL .)
    exit            reduce using rule 21 (CUERPOE -> GOTO_LABEL .)
    VARIABLE        reduce using rule 21 (CUERPOE -> GOTO_LABEL .)
    ID              reduce using rule 21 (CUERPOE -> GOTO_LABEL .)
    error           reduce using rule 21 (CUERPOE -> GOTO_LABEL .)
    $end            reduce using rule 21 (CUERPOE -> GOTO_LABEL .)


state 49

    (22) CUERPOE -> ASIGNACION .

    goto            reduce using rule 22 (CUERPOE -> ASIGNACION .)
    unset           reduce using rule 22 (CUERPOE -> ASIGNACION .)
    print           reduce using rule 22 (CUERPOE -> ASIGNACION .)
    if              reduce using rule 22 (CUERPOE -> ASIGNACION .)
    exit            reduce using rule 22 (CUERPOE -> ASIGNACION .)
    VARIABLE        reduce using rule 22 (CUERPOE -> ASIGNACION .)
    ID              reduce using rule 22 (CUERPOE -> ASIGNACION .)
    error           reduce using rule 22 (CUERPOE -> ASIGNACION .)
    $end            reduce using rule 22 (CUERPOE -> ASIGNACION .)


state 50

    (23) CUERPOE -> DESTRUYE_VARIABLE .

    goto            reduce using rule 23 (CUERPOE -> DESTRUYE_VARIABLE .)
    unset           reduce using rule 23 (CUERPOE -> DESTRUYE_VARIABLE .)
    print           reduce using rule 23 (CUERPOE -> DESTRUYE_VARIABLE .)
    if              reduce using rule 23 (CUERPOE -> DESTRUYE_VARIABLE .)
    exit            reduce using rule 23 (CUERPOE -> DESTRUYE_VARIABLE .)
    VARIABLE        reduce using rule 23 (CUERPOE -> DESTRUYE_VARIABLE .)
    ID              reduce using rule 23 (CUERPOE -> DESTRUYE_VARIABLE .)
    error           reduce using rule 23 (CUERPOE -> DESTRUYE_VARIABLE .)
    $end            reduce using rule 23 (CUERPOE -> DESTRUYE_VARIABLE .)


state 51

    (24) CUERPOE -> IMPRIME .

    goto            reduce using rule 24 (CUERPOE -> IMPRIME .)
    unset           reduce using rule 24 (CUERPOE -> IMPRIME .)
    print           reduce using rule 24 (CUERPOE -> IMPRIME .)
    if              reduce using rule 24 (CUERPOE -> IMPRIME .)
    exit            reduce using rule 24 (CUERPOE -> IMPRIME .)
    VARIABLE        reduce using rule 24 (CUERPOE -> IMPRIME .)
    ID              reduce using rule 24 (CUERPOE -> IMPRIME .)
    error           reduce using rule 24 (CUERPOE -> IMPRIME .)
    $end            reduce using rule 24 (CUERPOE -> IMPRIME .)


state 52

    (25) CUERPOE -> ESTRUCTURA_IF .

    goto            reduce using rule 25 (CUERPOE -> ESTRUCTURA_IF .)
    unset           reduce using rule 25 (CUERPOE -> ESTRUCTURA_IF .)
    print           reduce using rule 25 (CUERPOE -> ESTRUCTURA_IF .)
    if              reduce using rule 25 (CUERPOE -> ESTRUCTURA_IF .)
    exit            reduce using rule 25 (CUERPOE -> ESTRUCTURA_IF .)
    VARIABLE        reduce using rule 25 (CUERPOE -> ESTRUCTURA_IF .)
    ID              reduce using rule 25 (CUERPOE -> ESTRUCTURA_IF .)
    error           reduce using rule 25 (CUERPOE -> ESTRUCTURA_IF .)
    $end            reduce using rule 25 (CUERPOE -> ESTRUCTURA_IF .)


state 53

    (26) CUERPOE -> EXIT .

    goto            reduce using rule 26 (CUERPOE -> EXIT .)
    unset           reduce using rule 26 (CUERPOE -> EXIT .)
    print           reduce using rule 26 (CUERPOE -> EXIT .)
    if              reduce using rule 26 (CUERPOE -> EXIT .)
    exit            reduce using rule 26 (CUERPOE -> EXIT .)
    VARIABLE        reduce using rule 26 (CUERPOE -> EXIT .)
    ID              reduce using rule 26 (CUERPOE -> EXIT .)
    error           reduce using rule 26 (CUERPOE -> EXIT .)
    $end            reduce using rule 26 (CUERPOE -> EXIT .)


state 54

    (28) ETIQUETA -> ID DOSPUNTOS PRECUERPOE1 .

    ID              reduce using rule 28 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE1 .)
    error           reduce using rule 28 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE1 .)
    goto            reduce using rule 28 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE1 .)
    unset           reduce using rule 28 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE1 .)
    print           reduce using rule 28 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE1 .)
    if              reduce using rule 28 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE1 .)
    exit            reduce using rule 28 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE1 .)
    VARIABLE        reduce using rule 28 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE1 .)
    $end            reduce using rule 28 (ETIQUETA -> ID DOSPUNTOS PRECUERPOE1 .)


state 55

    (30) GOTO_LABEL -> goto ID PTCOMA .

    ID              reduce using rule 30 (GOTO_LABEL -> goto ID PTCOMA .)
    error           reduce using rule 30 (GOTO_LABEL -> goto ID PTCOMA .)
    goto            reduce using rule 30 (GOTO_LABEL -> goto ID PTCOMA .)
    unset           reduce using rule 30 (GOTO_LABEL -> goto ID PTCOMA .)
    print           reduce using rule 30 (GOTO_LABEL -> goto ID PTCOMA .)
    if              reduce using rule 30 (GOTO_LABEL -> goto ID PTCOMA .)
    exit            reduce using rule 30 (GOTO_LABEL -> goto ID PTCOMA .)
    VARIABLE        reduce using rule 30 (GOTO_LABEL -> goto ID PTCOMA .)
    $end            reduce using rule 30 (GOTO_LABEL -> goto ID PTCOMA .)


state 56

    (86) DESTRUYE_VARIABLE -> unset PARA VALOR . PARB PTCOMA

    PARB            shift and go to state 87


state 57

    (38) VALOR -> VARIABLE .
    (72) LLAMADA_ARREGLO -> VARIABLE . LISTA_POS
    (73) LISTA_POS -> . POS LISTA_POS1
    (75) LISTA_POS -> . POS
    (76) LISTA_POS -> .
    (77) POS -> . CORA VALOR CORB

  ! reduce/reduce conflict for PARB resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for ANDL resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for ORL resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for XORL resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for IGUALR resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for NOIGUALR resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for MAYORR resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for MENORR resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for ANDB resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for ORB resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for XORB resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for MAS resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for MENOS resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for DIVIDIR resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for RESIDUO resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 38 (VALOR -> VARIABLE .)
  ! reduce/reduce conflict for CORB resolved using rule 38 (VALOR -> VARIABLE .)
    PARB            reduce using rule 38 (VALOR -> VARIABLE .)
    ANDL            reduce using rule 38 (VALOR -> VARIABLE .)
    ORL             reduce using rule 38 (VALOR -> VARIABLE .)
    XORL            reduce using rule 38 (VALOR -> VARIABLE .)
    IGUALR          reduce using rule 38 (VALOR -> VARIABLE .)
    NOIGUALR        reduce using rule 38 (VALOR -> VARIABLE .)
    MAYORR          reduce using rule 38 (VALOR -> VARIABLE .)
    MENORR          reduce using rule 38 (VALOR -> VARIABLE .)
    ANDB            reduce using rule 38 (VALOR -> VARIABLE .)
    ORB             reduce using rule 38 (VALOR -> VARIABLE .)
    XORB            reduce using rule 38 (VALOR -> VARIABLE .)
    MAS             reduce using rule 38 (VALOR -> VARIABLE .)
    MENOS           reduce using rule 38 (VALOR -> VARIABLE .)
    MULTIPLICACION  reduce using rule 38 (VALOR -> VARIABLE .)
    DIVIDIR         reduce using rule 38 (VALOR -> VARIABLE .)
    RESIDUO         reduce using rule 38 (VALOR -> VARIABLE .)
    PTCOMA          reduce using rule 38 (VALOR -> VARIABLE .)
    CORB            reduce using rule 38 (VALOR -> VARIABLE .)
    CORA            shift and go to state 44

  ! PARB            [ reduce using rule 76 (LISTA_POS -> .) ]
  ! ANDL            [ reduce using rule 76 (LISTA_POS -> .) ]
  ! ORL             [ reduce using rule 76 (LISTA_POS -> .) ]
  ! XORL            [ reduce using rule 76 (LISTA_POS -> .) ]
  ! IGUALR          [ reduce using rule 76 (LISTA_POS -> .) ]
  ! NOIGUALR        [ reduce using rule 76 (LISTA_POS -> .) ]
  ! MAYORR          [ reduce using rule 76 (LISTA_POS -> .) ]
  ! MENORR          [ reduce using rule 76 (LISTA_POS -> .) ]
  ! ANDB            [ reduce using rule 76 (LISTA_POS -> .) ]
  ! ORB             [ reduce using rule 76 (LISTA_POS -> .) ]
  ! XORB            [ reduce using rule 76 (LISTA_POS -> .) ]
  ! MAS             [ reduce using rule 76 (LISTA_POS -> .) ]
  ! MENOS           [ reduce using rule 76 (LISTA_POS -> .) ]
  ! MULTIPLICACION  [ reduce using rule 76 (LISTA_POS -> .) ]
  ! DIVIDIR         [ reduce using rule 76 (LISTA_POS -> .) ]
  ! RESIDUO         [ reduce using rule 76 (LISTA_POS -> .) ]
  ! PTCOMA          [ reduce using rule 76 (LISTA_POS -> .) ]
  ! CORB            [ reduce using rule 76 (LISTA_POS -> .) ]

    LISTA_POS                      shift and go to state 88
    POS                            shift and go to state 43

state 58

    (39) VALOR -> LLAMADA_ARREGLO .

    PARB            reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    ANDL            reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    ORL             reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    XORL            reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    IGUALR          reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    NOIGUALR        reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    MAYORR          reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    MENORR          reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    ANDB            reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    ORB             reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    XORB            reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    MAS             reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    MENOS           reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    MULTIPLICACION  reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    DIVIDIR         reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    RESIDUO         reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    PTCOMA          reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)
    CORB            reduce using rule 39 (VALOR -> LLAMADA_ARREGLO .)


state 59

    (40) VALOR -> INT .

    PARB            reduce using rule 40 (VALOR -> INT .)
    ANDL            reduce using rule 40 (VALOR -> INT .)
    ORL             reduce using rule 40 (VALOR -> INT .)
    XORL            reduce using rule 40 (VALOR -> INT .)
    IGUALR          reduce using rule 40 (VALOR -> INT .)
    NOIGUALR        reduce using rule 40 (VALOR -> INT .)
    MAYORR          reduce using rule 40 (VALOR -> INT .)
    MENORR          reduce using rule 40 (VALOR -> INT .)
    ANDB            reduce using rule 40 (VALOR -> INT .)
    ORB             reduce using rule 40 (VALOR -> INT .)
    XORB            reduce using rule 40 (VALOR -> INT .)
    MAS             reduce using rule 40 (VALOR -> INT .)
    MENOS           reduce using rule 40 (VALOR -> INT .)
    MULTIPLICACION  reduce using rule 40 (VALOR -> INT .)
    DIVIDIR         reduce using rule 40 (VALOR -> INT .)
    RESIDUO         reduce using rule 40 (VALOR -> INT .)
    PTCOMA          reduce using rule 40 (VALOR -> INT .)
    CORB            reduce using rule 40 (VALOR -> INT .)


state 60

    (41) VALOR -> FLOAT .

    PARB            reduce using rule 41 (VALOR -> FLOAT .)
    ANDL            reduce using rule 41 (VALOR -> FLOAT .)
    ORL             reduce using rule 41 (VALOR -> FLOAT .)
    XORL            reduce using rule 41 (VALOR -> FLOAT .)
    IGUALR          reduce using rule 41 (VALOR -> FLOAT .)
    NOIGUALR        reduce using rule 41 (VALOR -> FLOAT .)
    MAYORR          reduce using rule 41 (VALOR -> FLOAT .)
    MENORR          reduce using rule 41 (VALOR -> FLOAT .)
    ANDB            reduce using rule 41 (VALOR -> FLOAT .)
    ORB             reduce using rule 41 (VALOR -> FLOAT .)
    XORB            reduce using rule 41 (VALOR -> FLOAT .)
    MAS             reduce using rule 41 (VALOR -> FLOAT .)
    MENOS           reduce using rule 41 (VALOR -> FLOAT .)
    MULTIPLICACION  reduce using rule 41 (VALOR -> FLOAT .)
    DIVIDIR         reduce using rule 41 (VALOR -> FLOAT .)
    RESIDUO         reduce using rule 41 (VALOR -> FLOAT .)
    PTCOMA          reduce using rule 41 (VALOR -> FLOAT .)
    CORB            reduce using rule 41 (VALOR -> FLOAT .)


state 61

    (42) VALOR -> CHAR .

    PARB            reduce using rule 42 (VALOR -> CHAR .)
    ANDL            reduce using rule 42 (VALOR -> CHAR .)
    ORL             reduce using rule 42 (VALOR -> CHAR .)
    XORL            reduce using rule 42 (VALOR -> CHAR .)
    IGUALR          reduce using rule 42 (VALOR -> CHAR .)
    NOIGUALR        reduce using rule 42 (VALOR -> CHAR .)
    MAYORR          reduce using rule 42 (VALOR -> CHAR .)
    MENORR          reduce using rule 42 (VALOR -> CHAR .)
    ANDB            reduce using rule 42 (VALOR -> CHAR .)
    ORB             reduce using rule 42 (VALOR -> CHAR .)
    XORB            reduce using rule 42 (VALOR -> CHAR .)
    MAS             reduce using rule 42 (VALOR -> CHAR .)
    MENOS           reduce using rule 42 (VALOR -> CHAR .)
    MULTIPLICACION  reduce using rule 42 (VALOR -> CHAR .)
    DIVIDIR         reduce using rule 42 (VALOR -> CHAR .)
    RESIDUO         reduce using rule 42 (VALOR -> CHAR .)
    PTCOMA          reduce using rule 42 (VALOR -> CHAR .)
    CORB            reduce using rule 42 (VALOR -> CHAR .)


state 62

    (43) VALOR -> array . PARA PARB

    PARA            shift and go to state 89


state 63

    (44) VALOR -> read . PARA PARB

    PARA            shift and go to state 90


state 64

    (37) EXPRESION -> PARA . EXPRESION PARB
    (79) CONVERSION -> PARA . TIPO_CONVERSION PARB VALOR
    (35) EXPRESION -> . VALOR
    (36) EXPRESION -> . error
    (37) EXPRESION -> . PARA EXPRESION PARB
    (45) EXPRESION -> . ARITMETICAS
    (53) EXPRESION -> . LOGICAS
    (58) EXPRESION -> . RELACIONAL
    (65) EXPRESION -> . BIT
    (78) EXPRESION -> . CONVERSION
    (83) EXPRESION -> . PUNTERO
    (80) TIPO_CONVERSION -> . int
    (81) TIPO_CONVERSION -> . char
    (82) TIPO_CONVERSION -> . float
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (46) ARITMETICAS -> . MENOS VALOR
    (47) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (48) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (49) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (51) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (52) ARITMETICAS -> . abs PARA EXPRESION PARB
    (54) LOGICAS -> . NOTL VALOR
    (55) LOGICAS -> . VALOR ANDL VALOR
    (56) LOGICAS -> . VALOR ORL VALOR
    (57) LOGICAS -> . VALOR XORL VALOR
    (59) RELACIONAL -> . VALOR IGUALR VALOR
    (60) RELACIONAL -> . VALOR NOIGUALR VALOR
    (61) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (62) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (63) RELACIONAL -> . VALOR MAYORR VALOR
    (64) RELACIONAL -> . VALOR MENORR VALOR
    (66) BIT -> . NOTB VALOR
    (67) BIT -> . VALOR ANDB VALOR
    (68) BIT -> . VALOR ORB VALOR
    (69) BIT -> . VALOR XORB VALOR
    (70) BIT -> . VALOR MENORR MENORR VALOR
    (71) BIT -> . VALOR MAYORR MAYORR VALOR
    (79) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (84) PUNTERO -> . ANDB VARIABLE
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 67
    PARA            shift and go to state 64
    int             shift and go to state 93
    char            shift and go to state 94
    float           shift and go to state 95
    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63
    MENOS           shift and go to state 74
    abs             shift and go to state 75
    NOTL            shift and go to state 76
    NOTB            shift and go to state 77
    ANDB            shift and go to state 78

    EXPRESION                      shift and go to state 91
    TIPO_CONVERSION                shift and go to state 92
    VALOR                          shift and go to state 66
    ARITMETICAS                    shift and go to state 68
    LOGICAS                        shift and go to state 69
    RELACIONAL                     shift and go to state 70
    BIT                            shift and go to state 71
    CONVERSION                     shift and go to state 72
    PUNTERO                        shift and go to state 73
    LLAMADA_ARREGLO                shift and go to state 58

state 65

    (87) IMPRIME -> print PARA EXPRESION . PARB PTCOMA
    (47) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (48) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (49) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (51) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            shift and go to state 96
    MAS             shift and go to state 97
    MENOS           shift and go to state 98
    MULTIPLICACION  shift and go to state 99
    DIVIDIR         shift and go to state 100
    RESIDUO         shift and go to state 101


state 66

    (35) EXPRESION -> VALOR .
    (55) LOGICAS -> VALOR . ANDL VALOR
    (56) LOGICAS -> VALOR . ORL VALOR
    (57) LOGICAS -> VALOR . XORL VALOR
    (59) RELACIONAL -> VALOR . IGUALR VALOR
    (60) RELACIONAL -> VALOR . NOIGUALR VALOR
    (61) RELACIONAL -> VALOR . MAYORR IGUAL VALOR
    (62) RELACIONAL -> VALOR . MENORR IGUAL VALOR
    (63) RELACIONAL -> VALOR . MAYORR VALOR
    (64) RELACIONAL -> VALOR . MENORR VALOR
    (67) BIT -> VALOR . ANDB VALOR
    (68) BIT -> VALOR . ORB VALOR
    (69) BIT -> VALOR . XORB VALOR
    (70) BIT -> VALOR . MENORR MENORR VALOR
    (71) BIT -> VALOR . MAYORR MAYORR VALOR

    PARB            reduce using rule 35 (EXPRESION -> VALOR .)
    MAS             reduce using rule 35 (EXPRESION -> VALOR .)
    MENOS           reduce using rule 35 (EXPRESION -> VALOR .)
    MULTIPLICACION  reduce using rule 35 (EXPRESION -> VALOR .)
    DIVIDIR         reduce using rule 35 (EXPRESION -> VALOR .)
    RESIDUO         reduce using rule 35 (EXPRESION -> VALOR .)
    PTCOMA          reduce using rule 35 (EXPRESION -> VALOR .)
    ANDL            shift and go to state 102
    ORL             shift and go to state 103
    XORL            shift and go to state 104
    IGUALR          shift and go to state 105
    NOIGUALR        shift and go to state 106
    MAYORR          shift and go to state 107
    MENORR          shift and go to state 108
    ANDB            shift and go to state 109
    ORB             shift and go to state 110
    XORB            shift and go to state 111


state 67

    (36) EXPRESION -> error .

    PARB            reduce using rule 36 (EXPRESION -> error .)
    MAS             reduce using rule 36 (EXPRESION -> error .)
    MENOS           reduce using rule 36 (EXPRESION -> error .)
    MULTIPLICACION  reduce using rule 36 (EXPRESION -> error .)
    DIVIDIR         reduce using rule 36 (EXPRESION -> error .)
    RESIDUO         reduce using rule 36 (EXPRESION -> error .)
    PTCOMA          reduce using rule 36 (EXPRESION -> error .)


state 68

    (45) EXPRESION -> ARITMETICAS .

    PARB            reduce using rule 45 (EXPRESION -> ARITMETICAS .)
    MAS             reduce using rule 45 (EXPRESION -> ARITMETICAS .)
    MENOS           reduce using rule 45 (EXPRESION -> ARITMETICAS .)
    MULTIPLICACION  reduce using rule 45 (EXPRESION -> ARITMETICAS .)
    DIVIDIR         reduce using rule 45 (EXPRESION -> ARITMETICAS .)
    RESIDUO         reduce using rule 45 (EXPRESION -> ARITMETICAS .)
    PTCOMA          reduce using rule 45 (EXPRESION -> ARITMETICAS .)


state 69

    (53) EXPRESION -> LOGICAS .

    PARB            reduce using rule 53 (EXPRESION -> LOGICAS .)
    MAS             reduce using rule 53 (EXPRESION -> LOGICAS .)
    MENOS           reduce using rule 53 (EXPRESION -> LOGICAS .)
    MULTIPLICACION  reduce using rule 53 (EXPRESION -> LOGICAS .)
    DIVIDIR         reduce using rule 53 (EXPRESION -> LOGICAS .)
    RESIDUO         reduce using rule 53 (EXPRESION -> LOGICAS .)
    PTCOMA          reduce using rule 53 (EXPRESION -> LOGICAS .)


state 70

    (58) EXPRESION -> RELACIONAL .

    PARB            reduce using rule 58 (EXPRESION -> RELACIONAL .)
    MAS             reduce using rule 58 (EXPRESION -> RELACIONAL .)
    MENOS           reduce using rule 58 (EXPRESION -> RELACIONAL .)
    MULTIPLICACION  reduce using rule 58 (EXPRESION -> RELACIONAL .)
    DIVIDIR         reduce using rule 58 (EXPRESION -> RELACIONAL .)
    RESIDUO         reduce using rule 58 (EXPRESION -> RELACIONAL .)
    PTCOMA          reduce using rule 58 (EXPRESION -> RELACIONAL .)


state 71

    (65) EXPRESION -> BIT .

    PARB            reduce using rule 65 (EXPRESION -> BIT .)
    MAS             reduce using rule 65 (EXPRESION -> BIT .)
    MENOS           reduce using rule 65 (EXPRESION -> BIT .)
    MULTIPLICACION  reduce using rule 65 (EXPRESION -> BIT .)
    DIVIDIR         reduce using rule 65 (EXPRESION -> BIT .)
    RESIDUO         reduce using rule 65 (EXPRESION -> BIT .)
    PTCOMA          reduce using rule 65 (EXPRESION -> BIT .)


state 72

    (78) EXPRESION -> CONVERSION .

    PARB            reduce using rule 78 (EXPRESION -> CONVERSION .)
    MAS             reduce using rule 78 (EXPRESION -> CONVERSION .)
    MENOS           reduce using rule 78 (EXPRESION -> CONVERSION .)
    MULTIPLICACION  reduce using rule 78 (EXPRESION -> CONVERSION .)
    DIVIDIR         reduce using rule 78 (EXPRESION -> CONVERSION .)
    RESIDUO         reduce using rule 78 (EXPRESION -> CONVERSION .)
    PTCOMA          reduce using rule 78 (EXPRESION -> CONVERSION .)


state 73

    (83) EXPRESION -> PUNTERO .

    PARB            reduce using rule 83 (EXPRESION -> PUNTERO .)
    MAS             reduce using rule 83 (EXPRESION -> PUNTERO .)
    MENOS           reduce using rule 83 (EXPRESION -> PUNTERO .)
    MULTIPLICACION  reduce using rule 83 (EXPRESION -> PUNTERO .)
    DIVIDIR         reduce using rule 83 (EXPRESION -> PUNTERO .)
    RESIDUO         reduce using rule 83 (EXPRESION -> PUNTERO .)
    PTCOMA          reduce using rule 83 (EXPRESION -> PUNTERO .)


state 74

    (46) ARITMETICAS -> MENOS . VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 112
    LLAMADA_ARREGLO                shift and go to state 58

state 75

    (52) ARITMETICAS -> abs . PARA EXPRESION PARB

    PARA            shift and go to state 113


state 76

    (54) LOGICAS -> NOTL . VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 114
    LLAMADA_ARREGLO                shift and go to state 58

state 77

    (66) BIT -> NOTB . VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 115
    LLAMADA_ARREGLO                shift and go to state 58

state 78

    (84) PUNTERO -> ANDB . VARIABLE

    VARIABLE        shift and go to state 116


state 79

    (85) ESTRUCTURA_IF -> if PARA EXPRESION . PARB goto ID PTCOMA
    (47) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (48) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (49) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (51) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            shift and go to state 117
    MAS             shift and go to state 97
    MENOS           shift and go to state 98
    MULTIPLICACION  shift and go to state 99
    DIVIDIR         shift and go to state 100
    RESIDUO         shift and go to state 101


state 80

    (33) NORMAL -> VARIABLE IGUAL EXPRESION .
    (47) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (48) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (49) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (51) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PTCOMA          reduce using rule 33 (NORMAL -> VARIABLE IGUAL EXPRESION .)
    MAS             shift and go to state 97
    MENOS           shift and go to state 98
    MULTIPLICACION  shift and go to state 99
    DIVIDIR         shift and go to state 100
    RESIDUO         shift and go to state 101


state 81

    (34) ARRAY -> VARIABLE LISTA_POS IGUAL . EXPRESION
    (35) EXPRESION -> . VALOR
    (36) EXPRESION -> . error
    (37) EXPRESION -> . PARA EXPRESION PARB
    (45) EXPRESION -> . ARITMETICAS
    (53) EXPRESION -> . LOGICAS
    (58) EXPRESION -> . RELACIONAL
    (65) EXPRESION -> . BIT
    (78) EXPRESION -> . CONVERSION
    (83) EXPRESION -> . PUNTERO
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (46) ARITMETICAS -> . MENOS VALOR
    (47) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (48) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (49) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (51) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (52) ARITMETICAS -> . abs PARA EXPRESION PARB
    (54) LOGICAS -> . NOTL VALOR
    (55) LOGICAS -> . VALOR ANDL VALOR
    (56) LOGICAS -> . VALOR ORL VALOR
    (57) LOGICAS -> . VALOR XORL VALOR
    (59) RELACIONAL -> . VALOR IGUALR VALOR
    (60) RELACIONAL -> . VALOR NOIGUALR VALOR
    (61) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (62) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (63) RELACIONAL -> . VALOR MAYORR VALOR
    (64) RELACIONAL -> . VALOR MENORR VALOR
    (66) BIT -> . NOTB VALOR
    (67) BIT -> . VALOR ANDB VALOR
    (68) BIT -> . VALOR ORB VALOR
    (69) BIT -> . VALOR XORB VALOR
    (70) BIT -> . VALOR MENORR MENORR VALOR
    (71) BIT -> . VALOR MAYORR MAYORR VALOR
    (79) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (84) PUNTERO -> . ANDB VARIABLE
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 67
    PARA            shift and go to state 64
    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63
    MENOS           shift and go to state 74
    abs             shift and go to state 75
    NOTL            shift and go to state 76
    NOTB            shift and go to state 77
    ANDB            shift and go to state 78

    EXPRESION                      shift and go to state 118
    VALOR                          shift and go to state 66
    ARITMETICAS                    shift and go to state 68
    LOGICAS                        shift and go to state 69
    RELACIONAL                     shift and go to state 70
    BIT                            shift and go to state 71
    CONVERSION                     shift and go to state 72
    PUNTERO                        shift and go to state 73
    LLAMADA_ARREGLO                shift and go to state 58

state 82

    (74) LISTA_POS1 -> POS . LISTA_POS
    (73) LISTA_POS -> . POS LISTA_POS1
    (75) LISTA_POS -> . POS
    (76) LISTA_POS -> .
    (77) POS -> . CORA VALOR CORB

    IGUAL           reduce using rule 76 (LISTA_POS -> .)
    PARB            reduce using rule 76 (LISTA_POS -> .)
    ANDL            reduce using rule 76 (LISTA_POS -> .)
    ORL             reduce using rule 76 (LISTA_POS -> .)
    XORL            reduce using rule 76 (LISTA_POS -> .)
    IGUALR          reduce using rule 76 (LISTA_POS -> .)
    NOIGUALR        reduce using rule 76 (LISTA_POS -> .)
    MAYORR          reduce using rule 76 (LISTA_POS -> .)
    MENORR          reduce using rule 76 (LISTA_POS -> .)
    ANDB            reduce using rule 76 (LISTA_POS -> .)
    ORB             reduce using rule 76 (LISTA_POS -> .)
    XORB            reduce using rule 76 (LISTA_POS -> .)
    MAS             reduce using rule 76 (LISTA_POS -> .)
    MENOS           reduce using rule 76 (LISTA_POS -> .)
    MULTIPLICACION  reduce using rule 76 (LISTA_POS -> .)
    DIVIDIR         reduce using rule 76 (LISTA_POS -> .)
    RESIDUO         reduce using rule 76 (LISTA_POS -> .)
    PTCOMA          reduce using rule 76 (LISTA_POS -> .)
    CORB            reduce using rule 76 (LISTA_POS -> .)
    CORA            shift and go to state 44

    POS                            shift and go to state 43
    LISTA_POS                      shift and go to state 119

state 83

    (73) LISTA_POS -> POS LISTA_POS1 .

    IGUAL           reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    PARB            reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    ANDL            reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    ORL             reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    XORL            reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    IGUALR          reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    NOIGUALR        reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    MAYORR          reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    MENORR          reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    ANDB            reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    ORB             reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    XORB            reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    MAS             reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    MENOS           reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    MULTIPLICACION  reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    DIVIDIR         reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    RESIDUO         reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    PTCOMA          reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)
    CORB            reduce using rule 73 (LISTA_POS -> POS LISTA_POS1 .)


state 84

    (77) POS -> CORA VALOR . CORB

    CORB            shift and go to state 120


state 85

    (19) PRECUERPOE -> CUERPOE . PRECUERPOE1
    (20) PRECUERPOE -> CUERPOE .
    (18) PRECUERPOE1 -> . CUERPOE PRECUERPOE
    (21) CUERPOE -> . GOTO_LABEL
    (22) CUERPOE -> . ASIGNACION
    (23) CUERPOE -> . DESTRUYE_VARIABLE
    (24) CUERPOE -> . IMPRIME
    (25) CUERPOE -> . ESTRUCTURA_IF
    (26) CUERPOE -> . EXIT
    (27) CUERPOE -> .
    (30) GOTO_LABEL -> . goto ID PTCOMA
    (31) ASIGNACION -> . NORMAL PTCOMA
    (32) ASIGNACION -> . ARRAY PTCOMA
    (86) DESTRUYE_VARIABLE -> . unset PARA VALOR PARB PTCOMA
    (87) IMPRIME -> . print PARA EXPRESION PARB PTCOMA
    (85) ESTRUCTURA_IF -> . if PARA EXPRESION PARB goto ID PTCOMA
    (88) EXIT -> . exit PTCOMA
    (33) NORMAL -> . VARIABLE IGUAL EXPRESION
    (34) ARRAY -> . VARIABLE LISTA_POS IGUAL EXPRESION

  ! reduce/reduce conflict for goto resolved using rule 20 (PRECUERPOE -> CUERPOE .)
  ! reduce/reduce conflict for unset resolved using rule 20 (PRECUERPOE -> CUERPOE .)
  ! reduce/reduce conflict for print resolved using rule 20 (PRECUERPOE -> CUERPOE .)
  ! reduce/reduce conflict for if resolved using rule 20 (PRECUERPOE -> CUERPOE .)
  ! reduce/reduce conflict for exit resolved using rule 20 (PRECUERPOE -> CUERPOE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 20 (PRECUERPOE -> CUERPOE .)
  ! reduce/reduce conflict for ID resolved using rule 20 (PRECUERPOE -> CUERPOE .)
  ! reduce/reduce conflict for error resolved using rule 20 (PRECUERPOE -> CUERPOE .)
  ! reduce/reduce conflict for $end resolved using rule 20 (PRECUERPOE -> CUERPOE .)
  ! shift/reduce conflict for goto resolved as shift
  ! shift/reduce conflict for unset resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for exit resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    ID              reduce using rule 20 (PRECUERPOE -> CUERPOE .)
    error           reduce using rule 20 (PRECUERPOE -> CUERPOE .)
    $end            reduce using rule 20 (PRECUERPOE -> CUERPOE .)
    goto            shift and go to state 19
    unset           shift and go to state 22
    print           shift and go to state 23
    if              shift and go to state 24
    exit            shift and go to state 25
    VARIABLE        shift and go to state 26

  ! goto            [ reduce using rule 20 (PRECUERPOE -> CUERPOE .) ]
  ! unset           [ reduce using rule 20 (PRECUERPOE -> CUERPOE .) ]
  ! print           [ reduce using rule 20 (PRECUERPOE -> CUERPOE .) ]
  ! if              [ reduce using rule 20 (PRECUERPOE -> CUERPOE .) ]
  ! exit            [ reduce using rule 20 (PRECUERPOE -> CUERPOE .) ]
  ! VARIABLE        [ reduce using rule 20 (PRECUERPOE -> CUERPOE .) ]
  ! goto            [ reduce using rule 27 (CUERPOE -> .) ]
  ! unset           [ reduce using rule 27 (CUERPOE -> .) ]
  ! print           [ reduce using rule 27 (CUERPOE -> .) ]
  ! if              [ reduce using rule 27 (CUERPOE -> .) ]
  ! exit            [ reduce using rule 27 (CUERPOE -> .) ]
  ! VARIABLE        [ reduce using rule 27 (CUERPOE -> .) ]
  ! ID              [ reduce using rule 27 (CUERPOE -> .) ]
  ! error           [ reduce using rule 27 (CUERPOE -> .) ]
  ! $end            [ reduce using rule 27 (CUERPOE -> .) ]

    CUERPOE                        shift and go to state 47
    PRECUERPOE1                    shift and go to state 121
    GOTO_LABEL                     shift and go to state 48
    ASIGNACION                     shift and go to state 49
    DESTRUYE_VARIABLE              shift and go to state 50
    IMPRIME                        shift and go to state 51
    ESTRUCTURA_IF                  shift and go to state 52
    EXIT                           shift and go to state 53
    NORMAL                         shift and go to state 20
    ARRAY                          shift and go to state 21

state 86

    (18) PRECUERPOE1 -> CUERPOE PRECUERPOE .

    ID              reduce using rule 18 (PRECUERPOE1 -> CUERPOE PRECUERPOE .)
    error           reduce using rule 18 (PRECUERPOE1 -> CUERPOE PRECUERPOE .)
    goto            reduce using rule 18 (PRECUERPOE1 -> CUERPOE PRECUERPOE .)
    unset           reduce using rule 18 (PRECUERPOE1 -> CUERPOE PRECUERPOE .)
    print           reduce using rule 18 (PRECUERPOE1 -> CUERPOE PRECUERPOE .)
    if              reduce using rule 18 (PRECUERPOE1 -> CUERPOE PRECUERPOE .)
    exit            reduce using rule 18 (PRECUERPOE1 -> CUERPOE PRECUERPOE .)
    VARIABLE        reduce using rule 18 (PRECUERPOE1 -> CUERPOE PRECUERPOE .)
    $end            reduce using rule 18 (PRECUERPOE1 -> CUERPOE PRECUERPOE .)


state 87

    (86) DESTRUYE_VARIABLE -> unset PARA VALOR PARB . PTCOMA

    PTCOMA          shift and go to state 122


state 88

    (72) LLAMADA_ARREGLO -> VARIABLE LISTA_POS .

    PARB            reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    ANDL            reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    ORL             reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    XORL            reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    IGUALR          reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    NOIGUALR        reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    MAYORR          reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    MENORR          reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    ANDB            reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    ORB             reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    XORB            reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    MAS             reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    MENOS           reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    MULTIPLICACION  reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    DIVIDIR         reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    RESIDUO         reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    PTCOMA          reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)
    CORB            reduce using rule 72 (LLAMADA_ARREGLO -> VARIABLE LISTA_POS .)


state 89

    (43) VALOR -> array PARA . PARB

    PARB            shift and go to state 123


state 90

    (44) VALOR -> read PARA . PARB

    PARB            shift and go to state 124


state 91

    (37) EXPRESION -> PARA EXPRESION . PARB
    (47) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (48) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (49) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (51) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            shift and go to state 125
    MAS             shift and go to state 97
    MENOS           shift and go to state 98
    MULTIPLICACION  shift and go to state 99
    DIVIDIR         shift and go to state 100
    RESIDUO         shift and go to state 101


state 92

    (79) CONVERSION -> PARA TIPO_CONVERSION . PARB VALOR

    PARB            shift and go to state 126


state 93

    (80) TIPO_CONVERSION -> int .

    PARB            reduce using rule 80 (TIPO_CONVERSION -> int .)


state 94

    (81) TIPO_CONVERSION -> char .

    PARB            reduce using rule 81 (TIPO_CONVERSION -> char .)


state 95

    (82) TIPO_CONVERSION -> float .

    PARB            reduce using rule 82 (TIPO_CONVERSION -> float .)


state 96

    (87) IMPRIME -> print PARA EXPRESION PARB . PTCOMA

    PTCOMA          shift and go to state 127


state 97

    (47) ARITMETICAS -> EXPRESION MAS . EXPRESION
    (35) EXPRESION -> . VALOR
    (36) EXPRESION -> . error
    (37) EXPRESION -> . PARA EXPRESION PARB
    (45) EXPRESION -> . ARITMETICAS
    (53) EXPRESION -> . LOGICAS
    (58) EXPRESION -> . RELACIONAL
    (65) EXPRESION -> . BIT
    (78) EXPRESION -> . CONVERSION
    (83) EXPRESION -> . PUNTERO
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (46) ARITMETICAS -> . MENOS VALOR
    (47) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (48) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (49) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (51) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (52) ARITMETICAS -> . abs PARA EXPRESION PARB
    (54) LOGICAS -> . NOTL VALOR
    (55) LOGICAS -> . VALOR ANDL VALOR
    (56) LOGICAS -> . VALOR ORL VALOR
    (57) LOGICAS -> . VALOR XORL VALOR
    (59) RELACIONAL -> . VALOR IGUALR VALOR
    (60) RELACIONAL -> . VALOR NOIGUALR VALOR
    (61) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (62) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (63) RELACIONAL -> . VALOR MAYORR VALOR
    (64) RELACIONAL -> . VALOR MENORR VALOR
    (66) BIT -> . NOTB VALOR
    (67) BIT -> . VALOR ANDB VALOR
    (68) BIT -> . VALOR ORB VALOR
    (69) BIT -> . VALOR XORB VALOR
    (70) BIT -> . VALOR MENORR MENORR VALOR
    (71) BIT -> . VALOR MAYORR MAYORR VALOR
    (79) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (84) PUNTERO -> . ANDB VARIABLE
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 67
    PARA            shift and go to state 64
    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63
    MENOS           shift and go to state 74
    abs             shift and go to state 75
    NOTL            shift and go to state 76
    NOTB            shift and go to state 77
    ANDB            shift and go to state 78

    EXPRESION                      shift and go to state 128
    VALOR                          shift and go to state 66
    ARITMETICAS                    shift and go to state 68
    LOGICAS                        shift and go to state 69
    RELACIONAL                     shift and go to state 70
    BIT                            shift and go to state 71
    CONVERSION                     shift and go to state 72
    PUNTERO                        shift and go to state 73
    LLAMADA_ARREGLO                shift and go to state 58

state 98

    (48) ARITMETICAS -> EXPRESION MENOS . EXPRESION
    (35) EXPRESION -> . VALOR
    (36) EXPRESION -> . error
    (37) EXPRESION -> . PARA EXPRESION PARB
    (45) EXPRESION -> . ARITMETICAS
    (53) EXPRESION -> . LOGICAS
    (58) EXPRESION -> . RELACIONAL
    (65) EXPRESION -> . BIT
    (78) EXPRESION -> . CONVERSION
    (83) EXPRESION -> . PUNTERO
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (46) ARITMETICAS -> . MENOS VALOR
    (47) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (48) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (49) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (51) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (52) ARITMETICAS -> . abs PARA EXPRESION PARB
    (54) LOGICAS -> . NOTL VALOR
    (55) LOGICAS -> . VALOR ANDL VALOR
    (56) LOGICAS -> . VALOR ORL VALOR
    (57) LOGICAS -> . VALOR XORL VALOR
    (59) RELACIONAL -> . VALOR IGUALR VALOR
    (60) RELACIONAL -> . VALOR NOIGUALR VALOR
    (61) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (62) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (63) RELACIONAL -> . VALOR MAYORR VALOR
    (64) RELACIONAL -> . VALOR MENORR VALOR
    (66) BIT -> . NOTB VALOR
    (67) BIT -> . VALOR ANDB VALOR
    (68) BIT -> . VALOR ORB VALOR
    (69) BIT -> . VALOR XORB VALOR
    (70) BIT -> . VALOR MENORR MENORR VALOR
    (71) BIT -> . VALOR MAYORR MAYORR VALOR
    (79) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (84) PUNTERO -> . ANDB VARIABLE
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 67
    PARA            shift and go to state 64
    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63
    MENOS           shift and go to state 74
    abs             shift and go to state 75
    NOTL            shift and go to state 76
    NOTB            shift and go to state 77
    ANDB            shift and go to state 78

    EXPRESION                      shift and go to state 129
    VALOR                          shift and go to state 66
    ARITMETICAS                    shift and go to state 68
    LOGICAS                        shift and go to state 69
    RELACIONAL                     shift and go to state 70
    BIT                            shift and go to state 71
    CONVERSION                     shift and go to state 72
    PUNTERO                        shift and go to state 73
    LLAMADA_ARREGLO                shift and go to state 58

state 99

    (49) ARITMETICAS -> EXPRESION MULTIPLICACION . EXPRESION
    (35) EXPRESION -> . VALOR
    (36) EXPRESION -> . error
    (37) EXPRESION -> . PARA EXPRESION PARB
    (45) EXPRESION -> . ARITMETICAS
    (53) EXPRESION -> . LOGICAS
    (58) EXPRESION -> . RELACIONAL
    (65) EXPRESION -> . BIT
    (78) EXPRESION -> . CONVERSION
    (83) EXPRESION -> . PUNTERO
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (46) ARITMETICAS -> . MENOS VALOR
    (47) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (48) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (49) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (51) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (52) ARITMETICAS -> . abs PARA EXPRESION PARB
    (54) LOGICAS -> . NOTL VALOR
    (55) LOGICAS -> . VALOR ANDL VALOR
    (56) LOGICAS -> . VALOR ORL VALOR
    (57) LOGICAS -> . VALOR XORL VALOR
    (59) RELACIONAL -> . VALOR IGUALR VALOR
    (60) RELACIONAL -> . VALOR NOIGUALR VALOR
    (61) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (62) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (63) RELACIONAL -> . VALOR MAYORR VALOR
    (64) RELACIONAL -> . VALOR MENORR VALOR
    (66) BIT -> . NOTB VALOR
    (67) BIT -> . VALOR ANDB VALOR
    (68) BIT -> . VALOR ORB VALOR
    (69) BIT -> . VALOR XORB VALOR
    (70) BIT -> . VALOR MENORR MENORR VALOR
    (71) BIT -> . VALOR MAYORR MAYORR VALOR
    (79) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (84) PUNTERO -> . ANDB VARIABLE
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 67
    PARA            shift and go to state 64
    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63
    MENOS           shift and go to state 74
    abs             shift and go to state 75
    NOTL            shift and go to state 76
    NOTB            shift and go to state 77
    ANDB            shift and go to state 78

    EXPRESION                      shift and go to state 130
    VALOR                          shift and go to state 66
    ARITMETICAS                    shift and go to state 68
    LOGICAS                        shift and go to state 69
    RELACIONAL                     shift and go to state 70
    BIT                            shift and go to state 71
    CONVERSION                     shift and go to state 72
    PUNTERO                        shift and go to state 73
    LLAMADA_ARREGLO                shift and go to state 58

state 100

    (50) ARITMETICAS -> EXPRESION DIVIDIR . EXPRESION
    (35) EXPRESION -> . VALOR
    (36) EXPRESION -> . error
    (37) EXPRESION -> . PARA EXPRESION PARB
    (45) EXPRESION -> . ARITMETICAS
    (53) EXPRESION -> . LOGICAS
    (58) EXPRESION -> . RELACIONAL
    (65) EXPRESION -> . BIT
    (78) EXPRESION -> . CONVERSION
    (83) EXPRESION -> . PUNTERO
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (46) ARITMETICAS -> . MENOS VALOR
    (47) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (48) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (49) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (51) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (52) ARITMETICAS -> . abs PARA EXPRESION PARB
    (54) LOGICAS -> . NOTL VALOR
    (55) LOGICAS -> . VALOR ANDL VALOR
    (56) LOGICAS -> . VALOR ORL VALOR
    (57) LOGICAS -> . VALOR XORL VALOR
    (59) RELACIONAL -> . VALOR IGUALR VALOR
    (60) RELACIONAL -> . VALOR NOIGUALR VALOR
    (61) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (62) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (63) RELACIONAL -> . VALOR MAYORR VALOR
    (64) RELACIONAL -> . VALOR MENORR VALOR
    (66) BIT -> . NOTB VALOR
    (67) BIT -> . VALOR ANDB VALOR
    (68) BIT -> . VALOR ORB VALOR
    (69) BIT -> . VALOR XORB VALOR
    (70) BIT -> . VALOR MENORR MENORR VALOR
    (71) BIT -> . VALOR MAYORR MAYORR VALOR
    (79) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (84) PUNTERO -> . ANDB VARIABLE
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 67
    PARA            shift and go to state 64
    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63
    MENOS           shift and go to state 74
    abs             shift and go to state 75
    NOTL            shift and go to state 76
    NOTB            shift and go to state 77
    ANDB            shift and go to state 78

    EXPRESION                      shift and go to state 131
    VALOR                          shift and go to state 66
    ARITMETICAS                    shift and go to state 68
    LOGICAS                        shift and go to state 69
    RELACIONAL                     shift and go to state 70
    BIT                            shift and go to state 71
    CONVERSION                     shift and go to state 72
    PUNTERO                        shift and go to state 73
    LLAMADA_ARREGLO                shift and go to state 58

state 101

    (51) ARITMETICAS -> EXPRESION RESIDUO . EXPRESION
    (35) EXPRESION -> . VALOR
    (36) EXPRESION -> . error
    (37) EXPRESION -> . PARA EXPRESION PARB
    (45) EXPRESION -> . ARITMETICAS
    (53) EXPRESION -> . LOGICAS
    (58) EXPRESION -> . RELACIONAL
    (65) EXPRESION -> . BIT
    (78) EXPRESION -> . CONVERSION
    (83) EXPRESION -> . PUNTERO
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (46) ARITMETICAS -> . MENOS VALOR
    (47) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (48) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (49) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (51) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (52) ARITMETICAS -> . abs PARA EXPRESION PARB
    (54) LOGICAS -> . NOTL VALOR
    (55) LOGICAS -> . VALOR ANDL VALOR
    (56) LOGICAS -> . VALOR ORL VALOR
    (57) LOGICAS -> . VALOR XORL VALOR
    (59) RELACIONAL -> . VALOR IGUALR VALOR
    (60) RELACIONAL -> . VALOR NOIGUALR VALOR
    (61) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (62) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (63) RELACIONAL -> . VALOR MAYORR VALOR
    (64) RELACIONAL -> . VALOR MENORR VALOR
    (66) BIT -> . NOTB VALOR
    (67) BIT -> . VALOR ANDB VALOR
    (68) BIT -> . VALOR ORB VALOR
    (69) BIT -> . VALOR XORB VALOR
    (70) BIT -> . VALOR MENORR MENORR VALOR
    (71) BIT -> . VALOR MAYORR MAYORR VALOR
    (79) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (84) PUNTERO -> . ANDB VARIABLE
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 67
    PARA            shift and go to state 64
    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63
    MENOS           shift and go to state 74
    abs             shift and go to state 75
    NOTL            shift and go to state 76
    NOTB            shift and go to state 77
    ANDB            shift and go to state 78

    EXPRESION                      shift and go to state 132
    VALOR                          shift and go to state 66
    ARITMETICAS                    shift and go to state 68
    LOGICAS                        shift and go to state 69
    RELACIONAL                     shift and go to state 70
    BIT                            shift and go to state 71
    CONVERSION                     shift and go to state 72
    PUNTERO                        shift and go to state 73
    LLAMADA_ARREGLO                shift and go to state 58

state 102

    (55) LOGICAS -> VALOR ANDL . VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 133
    LLAMADA_ARREGLO                shift and go to state 58

state 103

    (56) LOGICAS -> VALOR ORL . VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 134
    LLAMADA_ARREGLO                shift and go to state 58

state 104

    (57) LOGICAS -> VALOR XORL . VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 135
    LLAMADA_ARREGLO                shift and go to state 58

state 105

    (59) RELACIONAL -> VALOR IGUALR . VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 136
    LLAMADA_ARREGLO                shift and go to state 58

state 106

    (60) RELACIONAL -> VALOR NOIGUALR . VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 137
    LLAMADA_ARREGLO                shift and go to state 58

state 107

    (61) RELACIONAL -> VALOR MAYORR . IGUAL VALOR
    (63) RELACIONAL -> VALOR MAYORR . VALOR
    (71) BIT -> VALOR MAYORR . MAYORR VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    IGUAL           shift and go to state 140
    MAYORR          shift and go to state 139
    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 138
    LLAMADA_ARREGLO                shift and go to state 58

state 108

    (62) RELACIONAL -> VALOR MENORR . IGUAL VALOR
    (64) RELACIONAL -> VALOR MENORR . VALOR
    (70) BIT -> VALOR MENORR . MENORR VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    IGUAL           shift and go to state 143
    MENORR          shift and go to state 142
    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 141
    LLAMADA_ARREGLO                shift and go to state 58

state 109

    (67) BIT -> VALOR ANDB . VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 144
    LLAMADA_ARREGLO                shift and go to state 58

state 110

    (68) BIT -> VALOR ORB . VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 145
    LLAMADA_ARREGLO                shift and go to state 58

state 111

    (69) BIT -> VALOR XORB . VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 146
    LLAMADA_ARREGLO                shift and go to state 58

state 112

    (46) ARITMETICAS -> MENOS VALOR .

    PARB            reduce using rule 46 (ARITMETICAS -> MENOS VALOR .)
    MAS             reduce using rule 46 (ARITMETICAS -> MENOS VALOR .)
    MENOS           reduce using rule 46 (ARITMETICAS -> MENOS VALOR .)
    MULTIPLICACION  reduce using rule 46 (ARITMETICAS -> MENOS VALOR .)
    DIVIDIR         reduce using rule 46 (ARITMETICAS -> MENOS VALOR .)
    RESIDUO         reduce using rule 46 (ARITMETICAS -> MENOS VALOR .)
    PTCOMA          reduce using rule 46 (ARITMETICAS -> MENOS VALOR .)


state 113

    (52) ARITMETICAS -> abs PARA . EXPRESION PARB
    (35) EXPRESION -> . VALOR
    (36) EXPRESION -> . error
    (37) EXPRESION -> . PARA EXPRESION PARB
    (45) EXPRESION -> . ARITMETICAS
    (53) EXPRESION -> . LOGICAS
    (58) EXPRESION -> . RELACIONAL
    (65) EXPRESION -> . BIT
    (78) EXPRESION -> . CONVERSION
    (83) EXPRESION -> . PUNTERO
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (46) ARITMETICAS -> . MENOS VALOR
    (47) ARITMETICAS -> . EXPRESION MAS EXPRESION
    (48) ARITMETICAS -> . EXPRESION MENOS EXPRESION
    (49) ARITMETICAS -> . EXPRESION MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> . EXPRESION DIVIDIR EXPRESION
    (51) ARITMETICAS -> . EXPRESION RESIDUO EXPRESION
    (52) ARITMETICAS -> . abs PARA EXPRESION PARB
    (54) LOGICAS -> . NOTL VALOR
    (55) LOGICAS -> . VALOR ANDL VALOR
    (56) LOGICAS -> . VALOR ORL VALOR
    (57) LOGICAS -> . VALOR XORL VALOR
    (59) RELACIONAL -> . VALOR IGUALR VALOR
    (60) RELACIONAL -> . VALOR NOIGUALR VALOR
    (61) RELACIONAL -> . VALOR MAYORR IGUAL VALOR
    (62) RELACIONAL -> . VALOR MENORR IGUAL VALOR
    (63) RELACIONAL -> . VALOR MAYORR VALOR
    (64) RELACIONAL -> . VALOR MENORR VALOR
    (66) BIT -> . NOTB VALOR
    (67) BIT -> . VALOR ANDB VALOR
    (68) BIT -> . VALOR ORB VALOR
    (69) BIT -> . VALOR XORB VALOR
    (70) BIT -> . VALOR MENORR MENORR VALOR
    (71) BIT -> . VALOR MAYORR MAYORR VALOR
    (79) CONVERSION -> . PARA TIPO_CONVERSION PARB VALOR
    (84) PUNTERO -> . ANDB VARIABLE
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    error           shift and go to state 67
    PARA            shift and go to state 64
    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63
    MENOS           shift and go to state 74
    abs             shift and go to state 75
    NOTL            shift and go to state 76
    NOTB            shift and go to state 77
    ANDB            shift and go to state 78

    EXPRESION                      shift and go to state 147
    VALOR                          shift and go to state 66
    ARITMETICAS                    shift and go to state 68
    LOGICAS                        shift and go to state 69
    RELACIONAL                     shift and go to state 70
    BIT                            shift and go to state 71
    CONVERSION                     shift and go to state 72
    PUNTERO                        shift and go to state 73
    LLAMADA_ARREGLO                shift and go to state 58

state 114

    (54) LOGICAS -> NOTL VALOR .

    PARB            reduce using rule 54 (LOGICAS -> NOTL VALOR .)
    MAS             reduce using rule 54 (LOGICAS -> NOTL VALOR .)
    MENOS           reduce using rule 54 (LOGICAS -> NOTL VALOR .)
    MULTIPLICACION  reduce using rule 54 (LOGICAS -> NOTL VALOR .)
    DIVIDIR         reduce using rule 54 (LOGICAS -> NOTL VALOR .)
    RESIDUO         reduce using rule 54 (LOGICAS -> NOTL VALOR .)
    PTCOMA          reduce using rule 54 (LOGICAS -> NOTL VALOR .)


state 115

    (66) BIT -> NOTB VALOR .

    PARB            reduce using rule 66 (BIT -> NOTB VALOR .)
    MAS             reduce using rule 66 (BIT -> NOTB VALOR .)
    MENOS           reduce using rule 66 (BIT -> NOTB VALOR .)
    MULTIPLICACION  reduce using rule 66 (BIT -> NOTB VALOR .)
    DIVIDIR         reduce using rule 66 (BIT -> NOTB VALOR .)
    RESIDUO         reduce using rule 66 (BIT -> NOTB VALOR .)
    PTCOMA          reduce using rule 66 (BIT -> NOTB VALOR .)


state 116

    (84) PUNTERO -> ANDB VARIABLE .

    PARB            reduce using rule 84 (PUNTERO -> ANDB VARIABLE .)
    MAS             reduce using rule 84 (PUNTERO -> ANDB VARIABLE .)
    MENOS           reduce using rule 84 (PUNTERO -> ANDB VARIABLE .)
    MULTIPLICACION  reduce using rule 84 (PUNTERO -> ANDB VARIABLE .)
    DIVIDIR         reduce using rule 84 (PUNTERO -> ANDB VARIABLE .)
    RESIDUO         reduce using rule 84 (PUNTERO -> ANDB VARIABLE .)
    PTCOMA          reduce using rule 84 (PUNTERO -> ANDB VARIABLE .)


state 117

    (85) ESTRUCTURA_IF -> if PARA EXPRESION PARB . goto ID PTCOMA

    goto            shift and go to state 148


state 118

    (34) ARRAY -> VARIABLE LISTA_POS IGUAL EXPRESION .
    (47) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (48) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (49) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (51) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PTCOMA          reduce using rule 34 (ARRAY -> VARIABLE LISTA_POS IGUAL EXPRESION .)
    MAS             shift and go to state 97
    MENOS           shift and go to state 98
    MULTIPLICACION  shift and go to state 99
    DIVIDIR         shift and go to state 100
    RESIDUO         shift and go to state 101


state 119

    (74) LISTA_POS1 -> POS LISTA_POS .

    IGUAL           reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    PARB            reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    ANDL            reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    ORL             reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    XORL            reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    IGUALR          reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    NOIGUALR        reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    MAYORR          reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    MENORR          reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    ANDB            reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    ORB             reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    XORB            reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    MAS             reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    MENOS           reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    MULTIPLICACION  reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    DIVIDIR         reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    RESIDUO         reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    PTCOMA          reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)
    CORB            reduce using rule 74 (LISTA_POS1 -> POS LISTA_POS .)


state 120

    (77) POS -> CORA VALOR CORB .

    CORA            reduce using rule 77 (POS -> CORA VALOR CORB .)
    IGUAL           reduce using rule 77 (POS -> CORA VALOR CORB .)
    PARB            reduce using rule 77 (POS -> CORA VALOR CORB .)
    ANDL            reduce using rule 77 (POS -> CORA VALOR CORB .)
    ORL             reduce using rule 77 (POS -> CORA VALOR CORB .)
    XORL            reduce using rule 77 (POS -> CORA VALOR CORB .)
    IGUALR          reduce using rule 77 (POS -> CORA VALOR CORB .)
    NOIGUALR        reduce using rule 77 (POS -> CORA VALOR CORB .)
    MAYORR          reduce using rule 77 (POS -> CORA VALOR CORB .)
    MENORR          reduce using rule 77 (POS -> CORA VALOR CORB .)
    ANDB            reduce using rule 77 (POS -> CORA VALOR CORB .)
    ORB             reduce using rule 77 (POS -> CORA VALOR CORB .)
    XORB            reduce using rule 77 (POS -> CORA VALOR CORB .)
    MAS             reduce using rule 77 (POS -> CORA VALOR CORB .)
    MENOS           reduce using rule 77 (POS -> CORA VALOR CORB .)
    MULTIPLICACION  reduce using rule 77 (POS -> CORA VALOR CORB .)
    DIVIDIR         reduce using rule 77 (POS -> CORA VALOR CORB .)
    RESIDUO         reduce using rule 77 (POS -> CORA VALOR CORB .)
    PTCOMA          reduce using rule 77 (POS -> CORA VALOR CORB .)
    CORB            reduce using rule 77 (POS -> CORA VALOR CORB .)


state 121

    (19) PRECUERPOE -> CUERPOE PRECUERPOE1 .

    ID              reduce using rule 19 (PRECUERPOE -> CUERPOE PRECUERPOE1 .)
    error           reduce using rule 19 (PRECUERPOE -> CUERPOE PRECUERPOE1 .)
    goto            reduce using rule 19 (PRECUERPOE -> CUERPOE PRECUERPOE1 .)
    unset           reduce using rule 19 (PRECUERPOE -> CUERPOE PRECUERPOE1 .)
    print           reduce using rule 19 (PRECUERPOE -> CUERPOE PRECUERPOE1 .)
    if              reduce using rule 19 (PRECUERPOE -> CUERPOE PRECUERPOE1 .)
    exit            reduce using rule 19 (PRECUERPOE -> CUERPOE PRECUERPOE1 .)
    VARIABLE        reduce using rule 19 (PRECUERPOE -> CUERPOE PRECUERPOE1 .)
    $end            reduce using rule 19 (PRECUERPOE -> CUERPOE PRECUERPOE1 .)


state 122

    (86) DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .

    ID              reduce using rule 86 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    error           reduce using rule 86 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    goto            reduce using rule 86 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    unset           reduce using rule 86 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    print           reduce using rule 86 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    if              reduce using rule 86 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    exit            reduce using rule 86 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    VARIABLE        reduce using rule 86 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)
    $end            reduce using rule 86 (DESTRUYE_VARIABLE -> unset PARA VALOR PARB PTCOMA .)


state 123

    (43) VALOR -> array PARA PARB .

    PARB            reduce using rule 43 (VALOR -> array PARA PARB .)
    ANDL            reduce using rule 43 (VALOR -> array PARA PARB .)
    ORL             reduce using rule 43 (VALOR -> array PARA PARB .)
    XORL            reduce using rule 43 (VALOR -> array PARA PARB .)
    IGUALR          reduce using rule 43 (VALOR -> array PARA PARB .)
    NOIGUALR        reduce using rule 43 (VALOR -> array PARA PARB .)
    MAYORR          reduce using rule 43 (VALOR -> array PARA PARB .)
    MENORR          reduce using rule 43 (VALOR -> array PARA PARB .)
    ANDB            reduce using rule 43 (VALOR -> array PARA PARB .)
    ORB             reduce using rule 43 (VALOR -> array PARA PARB .)
    XORB            reduce using rule 43 (VALOR -> array PARA PARB .)
    MAS             reduce using rule 43 (VALOR -> array PARA PARB .)
    MENOS           reduce using rule 43 (VALOR -> array PARA PARB .)
    MULTIPLICACION  reduce using rule 43 (VALOR -> array PARA PARB .)
    DIVIDIR         reduce using rule 43 (VALOR -> array PARA PARB .)
    RESIDUO         reduce using rule 43 (VALOR -> array PARA PARB .)
    PTCOMA          reduce using rule 43 (VALOR -> array PARA PARB .)
    CORB            reduce using rule 43 (VALOR -> array PARA PARB .)


state 124

    (44) VALOR -> read PARA PARB .

    PARB            reduce using rule 44 (VALOR -> read PARA PARB .)
    ANDL            reduce using rule 44 (VALOR -> read PARA PARB .)
    ORL             reduce using rule 44 (VALOR -> read PARA PARB .)
    XORL            reduce using rule 44 (VALOR -> read PARA PARB .)
    IGUALR          reduce using rule 44 (VALOR -> read PARA PARB .)
    NOIGUALR        reduce using rule 44 (VALOR -> read PARA PARB .)
    MAYORR          reduce using rule 44 (VALOR -> read PARA PARB .)
    MENORR          reduce using rule 44 (VALOR -> read PARA PARB .)
    ANDB            reduce using rule 44 (VALOR -> read PARA PARB .)
    ORB             reduce using rule 44 (VALOR -> read PARA PARB .)
    XORB            reduce using rule 44 (VALOR -> read PARA PARB .)
    MAS             reduce using rule 44 (VALOR -> read PARA PARB .)
    MENOS           reduce using rule 44 (VALOR -> read PARA PARB .)
    MULTIPLICACION  reduce using rule 44 (VALOR -> read PARA PARB .)
    DIVIDIR         reduce using rule 44 (VALOR -> read PARA PARB .)
    RESIDUO         reduce using rule 44 (VALOR -> read PARA PARB .)
    PTCOMA          reduce using rule 44 (VALOR -> read PARA PARB .)
    CORB            reduce using rule 44 (VALOR -> read PARA PARB .)


state 125

    (37) EXPRESION -> PARA EXPRESION PARB .

    PARB            reduce using rule 37 (EXPRESION -> PARA EXPRESION PARB .)
    MAS             reduce using rule 37 (EXPRESION -> PARA EXPRESION PARB .)
    MENOS           reduce using rule 37 (EXPRESION -> PARA EXPRESION PARB .)
    MULTIPLICACION  reduce using rule 37 (EXPRESION -> PARA EXPRESION PARB .)
    DIVIDIR         reduce using rule 37 (EXPRESION -> PARA EXPRESION PARB .)
    RESIDUO         reduce using rule 37 (EXPRESION -> PARA EXPRESION PARB .)
    PTCOMA          reduce using rule 37 (EXPRESION -> PARA EXPRESION PARB .)


state 126

    (79) CONVERSION -> PARA TIPO_CONVERSION PARB . VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 149
    LLAMADA_ARREGLO                shift and go to state 58

state 127

    (87) IMPRIME -> print PARA EXPRESION PARB PTCOMA .

    ID              reduce using rule 87 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    error           reduce using rule 87 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    goto            reduce using rule 87 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    unset           reduce using rule 87 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    print           reduce using rule 87 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    if              reduce using rule 87 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    exit            reduce using rule 87 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    VARIABLE        reduce using rule 87 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)
    $end            reduce using rule 87 (IMPRIME -> print PARA EXPRESION PARB PTCOMA .)


state 128

    (47) ARITMETICAS -> EXPRESION MAS EXPRESION .
    (47) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (48) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (49) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (51) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            reduce using rule 47 (ARITMETICAS -> EXPRESION MAS EXPRESION .)
    MAS             reduce using rule 47 (ARITMETICAS -> EXPRESION MAS EXPRESION .)
    MENOS           reduce using rule 47 (ARITMETICAS -> EXPRESION MAS EXPRESION .)
    PTCOMA          reduce using rule 47 (ARITMETICAS -> EXPRESION MAS EXPRESION .)
    MULTIPLICACION  shift and go to state 99
    DIVIDIR         shift and go to state 100
    RESIDUO         shift and go to state 101

  ! MULTIPLICACION  [ reduce using rule 47 (ARITMETICAS -> EXPRESION MAS EXPRESION .) ]
  ! DIVIDIR         [ reduce using rule 47 (ARITMETICAS -> EXPRESION MAS EXPRESION .) ]
  ! RESIDUO         [ reduce using rule 47 (ARITMETICAS -> EXPRESION MAS EXPRESION .) ]
  ! MAS             [ shift and go to state 97 ]
  ! MENOS           [ shift and go to state 98 ]


state 129

    (48) ARITMETICAS -> EXPRESION MENOS EXPRESION .
    (47) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (48) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (49) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (51) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            reduce using rule 48 (ARITMETICAS -> EXPRESION MENOS EXPRESION .)
    MAS             reduce using rule 48 (ARITMETICAS -> EXPRESION MENOS EXPRESION .)
    MENOS           reduce using rule 48 (ARITMETICAS -> EXPRESION MENOS EXPRESION .)
    PTCOMA          reduce using rule 48 (ARITMETICAS -> EXPRESION MENOS EXPRESION .)
    MULTIPLICACION  shift and go to state 99
    DIVIDIR         shift and go to state 100
    RESIDUO         shift and go to state 101

  ! MULTIPLICACION  [ reduce using rule 48 (ARITMETICAS -> EXPRESION MENOS EXPRESION .) ]
  ! DIVIDIR         [ reduce using rule 48 (ARITMETICAS -> EXPRESION MENOS EXPRESION .) ]
  ! RESIDUO         [ reduce using rule 48 (ARITMETICAS -> EXPRESION MENOS EXPRESION .) ]
  ! MAS             [ shift and go to state 97 ]
  ! MENOS           [ shift and go to state 98 ]


state 130

    (49) ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .
    (47) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (48) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (49) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (51) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            reduce using rule 49 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    MAS             reduce using rule 49 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    MENOS           reduce using rule 49 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    MULTIPLICACION  reduce using rule 49 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    DIVIDIR         reduce using rule 49 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    PTCOMA          reduce using rule 49 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .)
    RESIDUO         shift and go to state 101

  ! RESIDUO         [ reduce using rule 49 (ARITMETICAS -> EXPRESION MULTIPLICACION EXPRESION .) ]
  ! MAS             [ shift and go to state 97 ]
  ! MENOS           [ shift and go to state 98 ]
  ! MULTIPLICACION  [ shift and go to state 99 ]
  ! DIVIDIR         [ shift and go to state 100 ]


state 131

    (50) ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .
    (47) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (48) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (49) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (51) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            reduce using rule 50 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    MAS             reduce using rule 50 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    MENOS           reduce using rule 50 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    MULTIPLICACION  reduce using rule 50 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    DIVIDIR         reduce using rule 50 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    PTCOMA          reduce using rule 50 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .)
    RESIDUO         shift and go to state 101

  ! RESIDUO         [ reduce using rule 50 (ARITMETICAS -> EXPRESION DIVIDIR EXPRESION .) ]
  ! MAS             [ shift and go to state 97 ]
  ! MENOS           [ shift and go to state 98 ]
  ! MULTIPLICACION  [ shift and go to state 99 ]
  ! DIVIDIR         [ shift and go to state 100 ]


state 132

    (51) ARITMETICAS -> EXPRESION RESIDUO EXPRESION .
    (47) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (48) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (49) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (51) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            reduce using rule 51 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    MAS             reduce using rule 51 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    MENOS           reduce using rule 51 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    MULTIPLICACION  reduce using rule 51 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    DIVIDIR         reduce using rule 51 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    RESIDUO         reduce using rule 51 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)
    PTCOMA          reduce using rule 51 (ARITMETICAS -> EXPRESION RESIDUO EXPRESION .)

  ! MAS             [ shift and go to state 97 ]
  ! MENOS           [ shift and go to state 98 ]
  ! MULTIPLICACION  [ shift and go to state 99 ]
  ! DIVIDIR         [ shift and go to state 100 ]
  ! RESIDUO         [ shift and go to state 101 ]


state 133

    (55) LOGICAS -> VALOR ANDL VALOR .

    PARB            reduce using rule 55 (LOGICAS -> VALOR ANDL VALOR .)
    MAS             reduce using rule 55 (LOGICAS -> VALOR ANDL VALOR .)
    MENOS           reduce using rule 55 (LOGICAS -> VALOR ANDL VALOR .)
    MULTIPLICACION  reduce using rule 55 (LOGICAS -> VALOR ANDL VALOR .)
    DIVIDIR         reduce using rule 55 (LOGICAS -> VALOR ANDL VALOR .)
    RESIDUO         reduce using rule 55 (LOGICAS -> VALOR ANDL VALOR .)
    PTCOMA          reduce using rule 55 (LOGICAS -> VALOR ANDL VALOR .)


state 134

    (56) LOGICAS -> VALOR ORL VALOR .

    PARB            reduce using rule 56 (LOGICAS -> VALOR ORL VALOR .)
    MAS             reduce using rule 56 (LOGICAS -> VALOR ORL VALOR .)
    MENOS           reduce using rule 56 (LOGICAS -> VALOR ORL VALOR .)
    MULTIPLICACION  reduce using rule 56 (LOGICAS -> VALOR ORL VALOR .)
    DIVIDIR         reduce using rule 56 (LOGICAS -> VALOR ORL VALOR .)
    RESIDUO         reduce using rule 56 (LOGICAS -> VALOR ORL VALOR .)
    PTCOMA          reduce using rule 56 (LOGICAS -> VALOR ORL VALOR .)


state 135

    (57) LOGICAS -> VALOR XORL VALOR .

    PARB            reduce using rule 57 (LOGICAS -> VALOR XORL VALOR .)
    MAS             reduce using rule 57 (LOGICAS -> VALOR XORL VALOR .)
    MENOS           reduce using rule 57 (LOGICAS -> VALOR XORL VALOR .)
    MULTIPLICACION  reduce using rule 57 (LOGICAS -> VALOR XORL VALOR .)
    DIVIDIR         reduce using rule 57 (LOGICAS -> VALOR XORL VALOR .)
    RESIDUO         reduce using rule 57 (LOGICAS -> VALOR XORL VALOR .)
    PTCOMA          reduce using rule 57 (LOGICAS -> VALOR XORL VALOR .)


state 136

    (59) RELACIONAL -> VALOR IGUALR VALOR .

    PARB            reduce using rule 59 (RELACIONAL -> VALOR IGUALR VALOR .)
    MAS             reduce using rule 59 (RELACIONAL -> VALOR IGUALR VALOR .)
    MENOS           reduce using rule 59 (RELACIONAL -> VALOR IGUALR VALOR .)
    MULTIPLICACION  reduce using rule 59 (RELACIONAL -> VALOR IGUALR VALOR .)
    DIVIDIR         reduce using rule 59 (RELACIONAL -> VALOR IGUALR VALOR .)
    RESIDUO         reduce using rule 59 (RELACIONAL -> VALOR IGUALR VALOR .)
    PTCOMA          reduce using rule 59 (RELACIONAL -> VALOR IGUALR VALOR .)


state 137

    (60) RELACIONAL -> VALOR NOIGUALR VALOR .

    PARB            reduce using rule 60 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    MAS             reduce using rule 60 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    MENOS           reduce using rule 60 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    MULTIPLICACION  reduce using rule 60 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    DIVIDIR         reduce using rule 60 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    RESIDUO         reduce using rule 60 (RELACIONAL -> VALOR NOIGUALR VALOR .)
    PTCOMA          reduce using rule 60 (RELACIONAL -> VALOR NOIGUALR VALOR .)


state 138

    (63) RELACIONAL -> VALOR MAYORR VALOR .

    PARB            reduce using rule 63 (RELACIONAL -> VALOR MAYORR VALOR .)
    MAS             reduce using rule 63 (RELACIONAL -> VALOR MAYORR VALOR .)
    MENOS           reduce using rule 63 (RELACIONAL -> VALOR MAYORR VALOR .)
    MULTIPLICACION  reduce using rule 63 (RELACIONAL -> VALOR MAYORR VALOR .)
    DIVIDIR         reduce using rule 63 (RELACIONAL -> VALOR MAYORR VALOR .)
    RESIDUO         reduce using rule 63 (RELACIONAL -> VALOR MAYORR VALOR .)
    PTCOMA          reduce using rule 63 (RELACIONAL -> VALOR MAYORR VALOR .)


state 139

    (71) BIT -> VALOR MAYORR MAYORR . VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 150
    LLAMADA_ARREGLO                shift and go to state 58

state 140

    (61) RELACIONAL -> VALOR MAYORR IGUAL . VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 151
    LLAMADA_ARREGLO                shift and go to state 58

state 141

    (64) RELACIONAL -> VALOR MENORR VALOR .

    PARB            reduce using rule 64 (RELACIONAL -> VALOR MENORR VALOR .)
    MAS             reduce using rule 64 (RELACIONAL -> VALOR MENORR VALOR .)
    MENOS           reduce using rule 64 (RELACIONAL -> VALOR MENORR VALOR .)
    MULTIPLICACION  reduce using rule 64 (RELACIONAL -> VALOR MENORR VALOR .)
    DIVIDIR         reduce using rule 64 (RELACIONAL -> VALOR MENORR VALOR .)
    RESIDUO         reduce using rule 64 (RELACIONAL -> VALOR MENORR VALOR .)
    PTCOMA          reduce using rule 64 (RELACIONAL -> VALOR MENORR VALOR .)


state 142

    (70) BIT -> VALOR MENORR MENORR . VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 152
    LLAMADA_ARREGLO                shift and go to state 58

state 143

    (62) RELACIONAL -> VALOR MENORR IGUAL . VALOR
    (38) VALOR -> . VARIABLE
    (39) VALOR -> . LLAMADA_ARREGLO
    (40) VALOR -> . INT
    (41) VALOR -> . FLOAT
    (42) VALOR -> . CHAR
    (43) VALOR -> . array PARA PARB
    (44) VALOR -> . read PARA PARB
    (72) LLAMADA_ARREGLO -> . VARIABLE LISTA_POS

    VARIABLE        shift and go to state 57
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    array           shift and go to state 62
    read            shift and go to state 63

    VALOR                          shift and go to state 153
    LLAMADA_ARREGLO                shift and go to state 58

state 144

    (67) BIT -> VALOR ANDB VALOR .

    PARB            reduce using rule 67 (BIT -> VALOR ANDB VALOR .)
    MAS             reduce using rule 67 (BIT -> VALOR ANDB VALOR .)
    MENOS           reduce using rule 67 (BIT -> VALOR ANDB VALOR .)
    MULTIPLICACION  reduce using rule 67 (BIT -> VALOR ANDB VALOR .)
    DIVIDIR         reduce using rule 67 (BIT -> VALOR ANDB VALOR .)
    RESIDUO         reduce using rule 67 (BIT -> VALOR ANDB VALOR .)
    PTCOMA          reduce using rule 67 (BIT -> VALOR ANDB VALOR .)


state 145

    (68) BIT -> VALOR ORB VALOR .

    PARB            reduce using rule 68 (BIT -> VALOR ORB VALOR .)
    MAS             reduce using rule 68 (BIT -> VALOR ORB VALOR .)
    MENOS           reduce using rule 68 (BIT -> VALOR ORB VALOR .)
    MULTIPLICACION  reduce using rule 68 (BIT -> VALOR ORB VALOR .)
    DIVIDIR         reduce using rule 68 (BIT -> VALOR ORB VALOR .)
    RESIDUO         reduce using rule 68 (BIT -> VALOR ORB VALOR .)
    PTCOMA          reduce using rule 68 (BIT -> VALOR ORB VALOR .)


state 146

    (69) BIT -> VALOR XORB VALOR .

    PARB            reduce using rule 69 (BIT -> VALOR XORB VALOR .)
    MAS             reduce using rule 69 (BIT -> VALOR XORB VALOR .)
    MENOS           reduce using rule 69 (BIT -> VALOR XORB VALOR .)
    MULTIPLICACION  reduce using rule 69 (BIT -> VALOR XORB VALOR .)
    DIVIDIR         reduce using rule 69 (BIT -> VALOR XORB VALOR .)
    RESIDUO         reduce using rule 69 (BIT -> VALOR XORB VALOR .)
    PTCOMA          reduce using rule 69 (BIT -> VALOR XORB VALOR .)


state 147

    (52) ARITMETICAS -> abs PARA EXPRESION . PARB
    (47) ARITMETICAS -> EXPRESION . MAS EXPRESION
    (48) ARITMETICAS -> EXPRESION . MENOS EXPRESION
    (49) ARITMETICAS -> EXPRESION . MULTIPLICACION EXPRESION
    (50) ARITMETICAS -> EXPRESION . DIVIDIR EXPRESION
    (51) ARITMETICAS -> EXPRESION . RESIDUO EXPRESION

    PARB            shift and go to state 154
    MAS             shift and go to state 97
    MENOS           shift and go to state 98
    MULTIPLICACION  shift and go to state 99
    DIVIDIR         shift and go to state 100
    RESIDUO         shift and go to state 101


state 148

    (85) ESTRUCTURA_IF -> if PARA EXPRESION PARB goto . ID PTCOMA

    ID              shift and go to state 155


state 149

    (79) CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .

    PARB            reduce using rule 79 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    MAS             reduce using rule 79 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    MENOS           reduce using rule 79 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    MULTIPLICACION  reduce using rule 79 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    DIVIDIR         reduce using rule 79 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    RESIDUO         reduce using rule 79 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)
    PTCOMA          reduce using rule 79 (CONVERSION -> PARA TIPO_CONVERSION PARB VALOR .)


state 150

    (71) BIT -> VALOR MAYORR MAYORR VALOR .

    PARB            reduce using rule 71 (BIT -> VALOR MAYORR MAYORR VALOR .)
    MAS             reduce using rule 71 (BIT -> VALOR MAYORR MAYORR VALOR .)
    MENOS           reduce using rule 71 (BIT -> VALOR MAYORR MAYORR VALOR .)
    MULTIPLICACION  reduce using rule 71 (BIT -> VALOR MAYORR MAYORR VALOR .)
    DIVIDIR         reduce using rule 71 (BIT -> VALOR MAYORR MAYORR VALOR .)
    RESIDUO         reduce using rule 71 (BIT -> VALOR MAYORR MAYORR VALOR .)
    PTCOMA          reduce using rule 71 (BIT -> VALOR MAYORR MAYORR VALOR .)


state 151

    (61) RELACIONAL -> VALOR MAYORR IGUAL VALOR .

    PARB            reduce using rule 61 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    MAS             reduce using rule 61 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    MENOS           reduce using rule 61 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    MULTIPLICACION  reduce using rule 61 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    DIVIDIR         reduce using rule 61 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    RESIDUO         reduce using rule 61 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)
    PTCOMA          reduce using rule 61 (RELACIONAL -> VALOR MAYORR IGUAL VALOR .)


state 152

    (70) BIT -> VALOR MENORR MENORR VALOR .

    PARB            reduce using rule 70 (BIT -> VALOR MENORR MENORR VALOR .)
    MAS             reduce using rule 70 (BIT -> VALOR MENORR MENORR VALOR .)
    MENOS           reduce using rule 70 (BIT -> VALOR MENORR MENORR VALOR .)
    MULTIPLICACION  reduce using rule 70 (BIT -> VALOR MENORR MENORR VALOR .)
    DIVIDIR         reduce using rule 70 (BIT -> VALOR MENORR MENORR VALOR .)
    RESIDUO         reduce using rule 70 (BIT -> VALOR MENORR MENORR VALOR .)
    PTCOMA          reduce using rule 70 (BIT -> VALOR MENORR MENORR VALOR .)


state 153

    (62) RELACIONAL -> VALOR MENORR IGUAL VALOR .

    PARB            reduce using rule 62 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    MAS             reduce using rule 62 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    MENOS           reduce using rule 62 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    MULTIPLICACION  reduce using rule 62 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    DIVIDIR         reduce using rule 62 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    RESIDUO         reduce using rule 62 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)
    PTCOMA          reduce using rule 62 (RELACIONAL -> VALOR MENORR IGUAL VALOR .)


state 154

    (52) ARITMETICAS -> abs PARA EXPRESION PARB .

    PARB            reduce using rule 52 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    MAS             reduce using rule 52 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    MENOS           reduce using rule 52 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    MULTIPLICACION  reduce using rule 52 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    DIVIDIR         reduce using rule 52 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    RESIDUO         reduce using rule 52 (ARITMETICAS -> abs PARA EXPRESION PARB .)
    PTCOMA          reduce using rule 52 (ARITMETICAS -> abs PARA EXPRESION PARB .)


state 155

    (85) ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID . PTCOMA

    PTCOMA          shift and go to state 156


state 156

    (85) ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .

    ID              reduce using rule 85 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    error           reduce using rule 85 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    goto            reduce using rule 85 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    unset           reduce using rule 85 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    print           reduce using rule 85 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    if              reduce using rule 85 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    exit            reduce using rule 85 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    VARIABLE        reduce using rule 85 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)
    $end            reduce using rule 85 (ESTRUCTURA_IF -> if PARA EXPRESION PARB goto ID PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 5 resolved as shift
WARNING: shift/reduce conflict for error in state 5 resolved as shift
WARNING: shift/reduce conflict for goto in state 5 resolved as shift
WARNING: shift/reduce conflict for unset in state 5 resolved as shift
WARNING: shift/reduce conflict for print in state 5 resolved as shift
WARNING: shift/reduce conflict for if in state 5 resolved as shift
WARNING: shift/reduce conflict for exit in state 5 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 5 resolved as shift
WARNING: shift/reduce conflict for error in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 6 resolved as shift
WARNING: shift/reduce conflict for goto in state 6 resolved as shift
WARNING: shift/reduce conflict for unset in state 6 resolved as shift
WARNING: shift/reduce conflict for print in state 6 resolved as shift
WARNING: shift/reduce conflict for if in state 6 resolved as shift
WARNING: shift/reduce conflict for exit in state 6 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 7 resolved as shift
WARNING: shift/reduce conflict for error in state 7 resolved as shift
WARNING: shift/reduce conflict for goto in state 7 resolved as shift
WARNING: shift/reduce conflict for unset in state 7 resolved as shift
WARNING: shift/reduce conflict for print in state 7 resolved as shift
WARNING: shift/reduce conflict for if in state 7 resolved as shift
WARNING: shift/reduce conflict for exit in state 7 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 7 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for error in state 10 resolved as shift
WARNING: shift/reduce conflict for goto in state 10 resolved as shift
WARNING: shift/reduce conflict for unset in state 10 resolved as shift
WARNING: shift/reduce conflict for print in state 10 resolved as shift
WARNING: shift/reduce conflict for if in state 10 resolved as shift
WARNING: shift/reduce conflict for exit in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 26 resolved as shift
WARNING: shift/reduce conflict for ID in state 29 resolved as shift
WARNING: shift/reduce conflict for error in state 29 resolved as shift
WARNING: shift/reduce conflict for goto in state 29 resolved as shift
WARNING: shift/reduce conflict for unset in state 29 resolved as shift
WARNING: shift/reduce conflict for print in state 29 resolved as shift
WARNING: shift/reduce conflict for if in state 29 resolved as shift
WARNING: shift/reduce conflict for exit in state 29 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 29 resolved as shift
WARNING: shift/reduce conflict for goto in state 31 resolved as shift
WARNING: shift/reduce conflict for unset in state 31 resolved as shift
WARNING: shift/reduce conflict for print in state 31 resolved as shift
WARNING: shift/reduce conflict for if in state 31 resolved as shift
WARNING: shift/reduce conflict for exit in state 31 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 31 resolved as shift
WARNING: shift/reduce conflict for goto in state 33 resolved as shift
WARNING: shift/reduce conflict for unset in state 33 resolved as shift
WARNING: shift/reduce conflict for print in state 33 resolved as shift
WARNING: shift/reduce conflict for if in state 33 resolved as shift
WARNING: shift/reduce conflict for exit in state 33 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 33 resolved as shift
WARNING: shift/reduce conflict for goto in state 47 resolved as shift
WARNING: shift/reduce conflict for unset in state 47 resolved as shift
WARNING: shift/reduce conflict for print in state 47 resolved as shift
WARNING: shift/reduce conflict for if in state 47 resolved as shift
WARNING: shift/reduce conflict for exit in state 47 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 47 resolved as shift
WARNING: shift/reduce conflict for goto in state 85 resolved as shift
WARNING: shift/reduce conflict for unset in state 85 resolved as shift
WARNING: shift/reduce conflict for print in state 85 resolved as shift
WARNING: shift/reduce conflict for if in state 85 resolved as shift
WARNING: shift/reduce conflict for exit in state 85 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 85 resolved as shift
WARNING: reduce/reduce conflict in state 10 resolved using rule (PRECUERPO -> CUERPO)
WARNING: rejected rule (CUERPO -> <empty>) in state 10
WARNING: reduce/reduce conflict in state 57 resolved using rule (VALOR -> VARIABLE)
WARNING: rejected rule (LISTA_POS -> <empty>) in state 57
WARNING: reduce/reduce conflict in state 85 resolved using rule (PRECUERPOE -> CUERPOE)
WARNING: rejected rule (CUERPOE -> <empty>) in state 85
